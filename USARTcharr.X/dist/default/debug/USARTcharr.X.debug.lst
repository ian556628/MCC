

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Aug 18 22:47:30 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 1.45
    41                           ; Generated 16/11/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F46K22 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	nvCOMRAM
    76  000042                     __pnvCOMRAM:
    77                           	opt stack 0
    78  000042                     _EUSART1_ErrorHandler:
    79                           	opt stack 0
    80  000042                     	ds	2
    81  000044                     _EUSART1_OverrunErrorHandler:
    82                           	opt stack 0
    83  000044                     	ds	2
    84  000046                     _EUSART1_FramingErrorHandler:
    85                           	opt stack 0
    86  000046                     	ds	2
    87  000048                     _EUSART1_RxDefaultInterruptHandler:
    88                           	opt stack 0
    89  000048                     	ds	2
    90  00004A                     _EUSART1_TxDefaultInterruptHandler:
    91                           	opt stack 0
    92  00004A                     	ds	2
    93  00004C                     _eusart1TxBufferRemaining:
    94                           	opt stack 0
    95  00004C                     	ds	1
    96  0000                     _ANSELA	set	3896
    97  0000                     _ANSELE	set	3900
    98  0000                     _ANSELB	set	3897
    99  0000                     _ANSELC	set	3898
   100  0000                     _ANSELD	set	3899
   101  0000                     _INTCON2bits	set	4081
   102  0000                     _WPUB	set	3937
   103  0000                     _TRISD	set	3989
   104  0000                     _TRISC	set	3988
   105  0000                     _TRISB	set	3987
   106  0000                     _TRISA	set	3986
   107  0000                     _TRISE	set	3990
   108  0000                     _LATC	set	3979
   109  0000                     _LATB	set	3978
   110  0000                     _LATD	set	3980
   111  0000                     _LATE	set	3981
   112  0000                     _OSCTUNE	set	3995
   113  0000                     _OSCCON2	set	4050
   114  0000                     _OSCCON	set	4051
   115  0000                     _PIR1bits	set	3998
   116  0000                     _RCONbits	set	4048
   117  0000                     _RCREG1	set	4014
   118  0000                     _RCSTA1bits	set	4011
   119  0000                     _TXREG1	set	4013
   120  0000                     _TXSTA1bits	set	4012
   121  0000                     _SPBRGH1	set	4016
   122  0000                     _SPBRG1	set	4015
   123  0000                     _TXSTA1	set	4012
   124  0000                     _RCSTA1	set	4011
   125  0000                     _BAUDCON1	set	4024
   126  0000                     _PIE1bits	set	3997
   127  0000                     _LATA	set	3977
   128  0000                     _INTCONbits	set	4082
   129                           
   130                           ; #config settings
   131  0000                     
   132                           	psect	cinit
   133  00047C                     __pcinit:
   134                           	opt stack 0
   135  00047C                     start_initialization:
   136                           	opt stack 0
   137  00047C                     __initialization:
   138                           	opt stack 0
   139                           
   140                           ; Clear objects allocated to BANK0 (16 bytes)
   141  00047C  EE00  F060         	lfsr	0,__pbssBANK0
   142  000480  0E10               	movlw	16
   143  000482                     clear_0:
   144  000482  6AEE               	clrf	postinc0,c
   145  000484  06E8               	decf	wreg,f,c
   146  000486  E1FD               	bnz	clear_0
   147                           
   148                           ; Clear objects allocated to COMRAM (47 bytes)
   149  000488  EE00  F001         	lfsr	0,__pbssCOMRAM
   150  00048C  0E2F               	movlw	47
   151  00048E                     clear_1:
   152  00048E  6AEE               	clrf	postinc0,c
   153  000490  06E8               	decf	wreg,f,c
   154  000492  E1FD               	bnz	clear_1
   155  000494                     end_of_initialization:
   156                           	opt stack 0
   157  000494                     __end_of__initialization:
   158                           	opt stack 0
   159  000494  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   160  000496  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   161  000498  0E00               	movlw	low (__Lmediumconst shr (0+16))
   162  00049A  6EF8               	movwf	tblptru,c
   163  00049C  0100               	movlb	0
   164  00049E  EF2B  F001         	goto	_main	;jump to C main() function
   165                           tblptru	equ	0xFF8
   166                           postinc0	equ	0xFEE
   167                           wreg	equ	0xFE8
   168                           
   169                           	psect	bssCOMRAM
   170  000001                     __pbssCOMRAM:
   171                           	opt stack 0
   172  000001                     _eusart1RxStatusBuffer:
   173                           	opt stack 0
   174  000001                     	ds	16
   175  000011                     _eusart1TxBuffer:
   176                           	opt stack 0
   177  000011                     	ds	16
   178  000021                     _val:
   179                           	opt stack 0
   180  000021                     	ds	2
   181  000023                     _i:
   182                           	opt stack 0
   183  000023                     	ds	2
   184  000025                     _status:
   185                           	opt stack 0
   186  000025                     	ds	2
   187  000027                     _eusart1RxLastError:
   188                           	opt stack 0
   189  000027                     	ds	1
   190  000028                     _eusart1RxCount:
   191                           	opt stack 0
   192  000028                     	ds	1
   193  000029                     _eusart1RxTail:
   194                           	opt stack 0
   195  000029                     	ds	1
   196  00002A                     _eusart1RxHead:
   197                           	opt stack 0
   198  00002A                     	ds	1
   199  00002B                     _eusart1TxTail:
   200                           	opt stack 0
   201  00002B                     	ds	1
   202  00002C                     _eusart1TxHead:
   203                           	opt stack 0
   204  00002C                     	ds	1
   205  00002D                     _rxData:
   206                           	opt stack 0
   207  00002D                     	ds	1
   208  00002E                     _led_value:
   209                           	opt stack 0
   210  00002E                     	ds	2
   211                           tblptru	equ	0xFF8
   212                           postinc0	equ	0xFEE
   213                           wreg	equ	0xFE8
   214                           
   215                           	psect	bssBANK0
   216  000060                     __pbssBANK0:
   217                           	opt stack 0
   218  000060                     _eusart1RxBuffer:
   219                           	opt stack 0
   220  000060                     	ds	16
   221                           tblptru	equ	0xFF8
   222                           postinc0	equ	0xFEE
   223                           wreg	equ	0xFE8
   224                           
   225                           	psect	cstackBANK0
   226  000070                     __pcstackBANK0:
   227                           	opt stack 0
   228  000070                     ??_isdigit:
   229  000070                     ?___wmul:
   230                           	opt stack 0
   231  000070                     EUSART1_Read@readValue:
   232                           	opt stack 0
   233  000070                     EUSART1_SetFramingErrorHandler@interruptHandler:
   234                           	opt stack 0
   235  000070                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   236                           	opt stack 0
   237  000070                     EUSART1_SetErrorHandler@interruptHandler:
   238                           	opt stack 0
   239  000070                     EUSART1_SetTxInterruptHandler@interruptHandler:
   240                           	opt stack 0
   241  000070                     EUSART1_SetRxInterruptHandler@interruptHandler:
   242                           	opt stack 0
   243  000070                     ___wmul@multiplier:
   244                           	opt stack 0
   245  000070                     strcpy@to:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x0
   249  000070                     	ds	1
   250  000071                     _isdigit$926:
   251                           	opt stack 0
   252                           
   253                           ; 1 bytes @ 0x1
   254  000071                     	ds	1
   255  000072                     isdigit@c:
   256                           	opt stack 0
   257  000072                     ___wmul@multiplicand:
   258                           	opt stack 0
   259  000072                     strcpy@from:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x2
   263  000072                     	ds	2
   264  000074                     ___wmul@product:
   265                           	opt stack 0
   266  000074                     strcpy@cp:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x4
   270  000074                     	ds	2
   271  000076                     ?_atoi:
   272                           	opt stack 0
   273  000076                     atoi@s:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0x6
   277  000076                     	ds	2
   278  000078                     ??_atoi:
   279                           
   280                           ; 1 bytes @ 0x8
   281  000078                     	ds	2
   282  00007A                     atoi@sign:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0xA
   286  00007A                     	ds	1
   287  00007B                     atoi@a:
   288                           	opt stack 0
   289                           
   290                           ; 2 bytes @ 0xB
   291  00007B                     	ds	2
   292  00007D                     main@str:
   293                           	opt stack 0
   294                           
   295                           ; 2 bytes @ 0xD
   296  00007D                     	ds	2
   297                           tblptru	equ	0xFF8
   298                           postinc0	equ	0xFEE
   299                           wreg	equ	0xFE8
   300                           
   301                           	psect	cstackCOMRAM
   302  000030                     __pcstackCOMRAM:
   303                           	opt stack 0
   304  000030                     ??_INTERRUPT_InterruptManager:
   305                           
   306                           ; 1 bytes @ 0x0
   307  000030                     	ds	18
   308  000042                     tblptru	equ	0xFF8
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           
   312                           ; 1 bytes @ 0x12
   313 ;;
   314 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   315 ;;
   316 ;; *************** function _main *****************
   317 ;; Defined at:
   318 ;;		line 9 in file "main.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;  str             2   13[BANK0 ] unsigned char [2]
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   333 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   335 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   336 ;;Total ram usage:        2 bytes
   337 ;; Hardware stack levels required when called:    7
   338 ;; This function calls:
   339 ;;		_EUSART1_Read
   340 ;;		_EUSART1_is_rx_ready
   341 ;;		_SYSTEM_Initialize
   342 ;;		_atoi
   343 ;;		_strcpy
   344 ;; This function is called by:
   345 ;;		Startup code after reset
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           	psect	text0
   350  000256                     __ptext0:
   351                           	opt stack 0
   352  000256                     _main:
   353                           	opt stack 24
   354                           
   355                           ;main.c: 12: SYSTEM_Initialize();
   356                           
   357                           ;incstack = 0
   358  000256  EC74  F002         	call	_SYSTEM_Initialize	;wreg free
   359                           
   360                           ;main.c: 19: (INTCONbits.GIE = 1);
   361  00025A  8EF2               	bsf	intcon,7,c	;volatile
   362                           
   363                           ;main.c: 25: (INTCONbits.PEIE = 1);
   364  00025C  8CF2               	bsf	intcon,6,c	;volatile
   365  00025E                     
   366                           ;main.c: 31: {
   367                           ;main.c: 32: if(EUSART1_is_rx_ready())
   368  00025E  EC84  F002         	call	_EUSART1_is_rx_ready	;wreg free
   369  000262  0900               	iorlw	0
   370  000264  B4D8               	btfsc	status,2,c
   371  000266  D7FB               	goto	l31
   372                           
   373                           ;main.c: 33: {
   374                           ;main.c: 34: rxData = EUSART1_Read();
   375  000268  ECB4  F001         	call	_EUSART1_Read	;wreg free
   376  00026C  6E2D               	movwf	_rxData,c	;volatile
   377                           
   378                           ;main.c: 35: if(rxData!=0x3f)
   379  00026E  0E3F               	movlw	63
   380  000270  182D               	xorwf	_rxData,w,c	;volatile
   381  000272  B4D8               	btfsc	status,2,c
   382  000274  D7F4               	goto	l31
   383                           
   384                           ;main.c: 36: {
   385                           ;main.c: 37: for(i=0;i<2;i++)
   386  000276  0E00               	movlw	0
   387  000278  6E24               	movwf	_i+1,c
   388  00027A  0E00               	movlw	0
   389  00027C  6E23               	movwf	_i,c
   390  00027E                     l1514:
   391  00027E  BE24               	btfsc	_i+1,7,c
   392  000280  D006               	goto	l34
   393  000282  5024               	movf	_i+1,w,c
   394  000284  E10F               	bnz	l1524
   395  000286  0E02               	movlw	2
   396  000288  5C23               	subwf	_i,w,c
   397  00028A  B0D8               	btfsc	status,0,c
   398  00028C  D00B               	goto	u820
   399  00028E                     l34:
   400                           
   401                           ;main.c: 38: {
   402                           ;main.c: 39: led_value[i]=rxData;
   403  00028E  0E2E               	movlw	low _led_value
   404  000290  2423               	addwf	_i,w,c
   405  000292  6ED9               	movwf	fsr2l,c
   406  000294  0E00               	movlw	high _led_value
   407  000296  2024               	addwfc	_i+1,w,c
   408  000298  6EDA               	movwf	fsr2h,c
   409  00029A  C02D  FFDF         	movff	_rxData,indf2	;volatile
   410  00029E  4A23               	infsnz	_i,f,c
   411  0002A0  2A24               	incf	_i+1,f,c
   412  0002A2  D7ED               	goto	l1514
   413  0002A4                     u820:
   414  0002A4                     l1524:
   415                           
   416                           ;main.c: 40: }
   417                           ;main.c: 41: char str[2];
   418                           ;main.c: 42: strcpy(str, led_value);
   419  0002A4  0E7D               	movlw	low main@str
   420  0002A6  0100               	movlb	0	; () banked
   421  0002A8  6F70               	movwf	strcpy@to& (0+255),b
   422  0002AA  0E00               	movlw	high main@str
   423  0002AC  6F71               	movwf	(strcpy@to+1)& (0+255),b
   424  0002AE  0E2E               	movlw	low _led_value
   425  0002B0  6F72               	movwf	strcpy@from& (0+255),b
   426  0002B2  0E00               	movlw	high _led_value
   427  0002B4  6F73               	movwf	(strcpy@from+1)& (0+255),b
   428  0002B6  ECFB  F001         	call	_strcpy	;wreg free
   429                           
   430                           ;main.c: 43: val=atoi(str);
   431  0002BA  0E7D               	movlw	low main@str
   432  0002BC  0100               	movlb	0	; () banked
   433  0002BE  6F76               	movwf	atoi@s& (0+255),b
   434  0002C0  0E00               	movlw	high main@str
   435  0002C2  6F77               	movwf	(atoi@s+1)& (0+255),b
   436  0002C4  EC6D  F000         	call	_atoi	;wreg free
   437  0002C8  C076  F021         	movff	?_atoi,_val
   438  0002CC  C077  F022         	movff	?_atoi+1,_val+1
   439                           
   440                           ;main.c: 44: LATA=val;
   441  0002D0  C021  FF89         	movff	_val,3977	;volatile
   442                           
   443                           ;main.c: 45: LATA=~LATA;
   444  0002D4  1E89               	comf	3977,f,c	;volatile
   445                           
   446                           ;main.c: 46: _delay((unsigned long)((1)*(1000000/4000.0)));
   447  0002D6  0E53               	movlw	83
   448  0002D8                     u837:
   449  0002D8  2EE8               	decfsz	wreg,f,c
   450  0002DA  D7FE               	bra	u837
   451  0002DC  F000               	nop	
   452                           
   453                           ;main.c: 47: status=0;
   454  0002DE  0E00               	movlw	0
   455  0002E0  6E26               	movwf	_status+1,c
   456  0002E2  0E00               	movlw	0
   457  0002E4  6E25               	movwf	_status,c
   458                           
   459                           ;main.c: 48: break;
   460  0002E6  EF6B  F000         	goto	start
   461  0002EA                     __end_of_main:
   462                           	opt stack 0
   463                           tblptru	equ	0xFF8
   464                           intcon	equ	0xFF2
   465                           postinc0	equ	0xFEE
   466                           wreg	equ	0xFE8
   467                           indf2	equ	0xFDF
   468                           fsr2h	equ	0xFDA
   469                           fsr2l	equ	0xFD9
   470                           status	equ	0xFD8
   471                           
   472 ;; *************** function _strcpy *****************
   473 ;; Defined at:
   474 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;  to              2    0[BANK0 ] PTR unsigned char 
   477 ;;		 -> main@str(2), 
   478 ;;  from            2    2[BANK0 ] PTR const unsigned char 
   479 ;;		 -> led_value(2), 
   480 ;; Auto vars:     Size  Location     Type
   481 ;;  cp              2    4[BANK0 ] PTR unsigned char 
   482 ;;		 -> main@str(2), 
   483 ;; Return value:  Size  Location     Type
   484 ;;                  2    0[BANK0 ] PTR unsigned char 
   485 ;; Registers used:
   486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   492 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;Total ram usage:        6 bytes
   497 ;; Hardware stack levels used:    1
   498 ;; Hardware stack levels required when called:    4
   499 ;; This function calls:
   500 ;;		Nothing
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text1
   507  0003F6                     __ptext1:
   508                           	opt stack 0
   509  0003F6                     _strcpy:
   510                           	opt stack 26
   511                           
   512                           ;incstack = 0
   513  0003F6  C070  F074         	movff	strcpy@to,strcpy@cp
   514  0003FA  C071  F075         	movff	strcpy@to+1,strcpy@cp+1
   515  0003FE  D005               	goto	l838
   516  000400  0100               	movlb	0	; () banked
   517  000402  4B74               	infsnz	strcpy@cp& (0+255),f,b
   518  000404  2B75               	incf	(strcpy@cp+1)& (0+255),f,b
   519  000406  4B72               	infsnz	strcpy@from& (0+255),f,b
   520  000408  2B73               	incf	(strcpy@from+1)& (0+255),f,b
   521  00040A                     l838:
   522                           
   523                           ; BSR set to: 0
   524  00040A  C072  FFD9         	movff	strcpy@from,fsr2l
   525  00040E  C073  FFDA         	movff	strcpy@from+1,fsr2h
   526  000412  C074  FFE1         	movff	strcpy@cp,fsr1l
   527  000416  C075  FFE2         	movff	strcpy@cp+1,fsr1h
   528  00041A  CFDF FFE7          	movff	indf2,indf1
   529  00041E  50E7               	movf	indf1,w,c
   530  000420  B4D8               	btfsc	status,2,c
   531  000422  0012               	return	
   532  000424  D7ED               	goto	l839
   533  000426                     __end_of_strcpy:
   534                           	opt stack 0
   535                           tblptru	equ	0xFF8
   536                           intcon	equ	0xFF2
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           indf1	equ	0xFE7
   540                           fsr1h	equ	0xFE2
   541                           fsr1l	equ	0xFE1
   542                           indf2	equ	0xFDF
   543                           fsr2h	equ	0xFDA
   544                           fsr2l	equ	0xFD9
   545                           status	equ	0xFD8
   546                           
   547 ;; *************** function _atoi *****************
   548 ;; Defined at:
   549 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;  s               2    6[BANK0 ] PTR const unsigned char 
   552 ;;		 -> main@str(2), 
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  a               2   11[BANK0 ] int 
   555 ;;  sign            1   10[BANK0 ] unsigned char 
   556 ;; Return value:  Size  Location     Type
   557 ;;                  2    6[BANK0 ] int 
   558 ;; Registers used:
   559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   565 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;Total ram usage:        7 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; Hardware stack levels required when called:    5
   572 ;; This function calls:
   573 ;;		___wmul
   574 ;;		_isdigit
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text2
   581  0000DA                     __ptext2:
   582                           	opt stack 0
   583  0000DA                     _atoi:
   584                           	opt stack 25
   585                           
   586                           ;incstack = 0
   587  0000DA  D003               	goto	l434
   588  0000DC  0100               	movlb	0	; () banked
   589  0000DE  4B76               	infsnz	atoi@s& (0+255),f,b
   590  0000E0  2B77               	incf	(atoi@s+1)& (0+255),f,b
   591  0000E2                     l434:
   592                           
   593                           ; BSR set to: 0
   594  0000E2  C076  FFD9         	movff	atoi@s,fsr2l
   595  0000E6  C077  FFDA         	movff	atoi@s+1,fsr2h
   596  0000EA  0E20               	movlw	32
   597  0000EC  18DE               	xorwf	postinc2,w,c
   598  0000EE  B4D8               	btfsc	status,2,c
   599  0000F0  D7F5               	goto	l435
   600  0000F2  C076  FFD9         	movff	atoi@s,fsr2l
   601  0000F6  C077  FFDA         	movff	atoi@s+1,fsr2h
   602  0000FA  0E09               	movlw	9
   603  0000FC  18DE               	xorwf	postinc2,w,c
   604  0000FE  B4D8               	btfsc	status,2,c
   605  000100  D7ED               	goto	l435
   606  000102  0E00               	movlw	0
   607  000104  0100               	movlb	0	; () banked
   608  000106  6F7C               	movwf	(atoi@a+1)& (0+255),b
   609  000108  0E00               	movlw	0
   610  00010A  6F7B               	movwf	atoi@a& (0+255),b
   611  00010C  0E00               	movlw	0
   612  00010E  6F7A               	movwf	atoi@sign& (0+255),b
   613                           
   614                           ; BSR set to: 0
   615  000110  C076  FFD9         	movff	atoi@s,fsr2l
   616  000114  C077  FFDA         	movff	atoi@s+1,fsr2h
   617  000118  0E2D               	movlw	45
   618  00011A  18DE               	xorwf	postinc2,w,c
   619  00011C  A4D8               	btfss	status,2,c
   620  00011E  D002               	goto	l437
   621                           
   622                           ; BSR set to: 0
   623  000120  2B7A               	incf	atoi@sign& (0+255),f,b
   624  000122  D026               	goto	l1492
   625  000124                     l437:
   626                           
   627                           ; BSR set to: 0
   628                           
   629                           ; BSR set to: 0
   630  000124  C076  FFD9         	movff	atoi@s,fsr2l
   631  000128  C077  FFDA         	movff	atoi@s+1,fsr2h
   632  00012C  0E2B               	movlw	43
   633  00012E  18DE               	xorwf	postinc2,w,c
   634  000130  A4D8               	btfss	status,2,c
   635  000132  D020               	goto	l440
   636  000134  D01D               	goto	l1492
   637  000136                     
   638                           ; BSR set to: 0
   639  000136  C07B  F070         	movff	atoi@a,___wmul@multiplier
   640  00013A  C07C  F071         	movff	atoi@a+1,___wmul@multiplier+1
   641  00013E  0E00               	movlw	0
   642  000140  0100               	movlb	0	; () banked
   643  000142  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
   644  000144  0E0A               	movlw	10
   645  000146  6F72               	movwf	___wmul@multiplicand& (0+255),b
   646  000148  EC2A  F002         	call	___wmul	;wreg free
   647  00014C  C076  FFD9         	movff	atoi@s,fsr2l
   648  000150  C077  FFDA         	movff	atoi@s+1,fsr2h
   649  000154  50DF               	movf	indf2,w,c
   650  000156  0100               	movlb	0	; () banked
   651  000158  6F78               	movwf	??_atoi& (0+255),b
   652  00015A  6B79               	clrf	(??_atoi+1)& (0+255),b
   653  00015C  5170               	movf	?___wmul& (0+255),w,b
   654  00015E  2778               	addwf	??_atoi& (0+255),f,b
   655  000160  5171               	movf	(?___wmul+1)& (0+255),w,b
   656  000162  2379               	addwfc	(??_atoi+1)& (0+255),f,b
   657  000164  0ED0               	movlw	208
   658  000166  2578               	addwf	??_atoi& (0+255),w,b
   659  000168  6F7B               	movwf	atoi@a& (0+255),b
   660  00016A  0EFF               	movlw	255
   661  00016C  2179               	addwfc	(??_atoi+1)& (0+255),w,b
   662  00016E  6F7C               	movwf	(atoi@a+1)& (0+255),b
   663  000170                     l1492:
   664                           
   665                           ; BSR set to: 0
   666  000170  4B76               	infsnz	atoi@s& (0+255),f,b
   667  000172  2B77               	incf	(atoi@s+1)& (0+255),f,b
   668  000174                     l440:
   669                           
   670                           ; BSR set to: 0
   671                           
   672                           ; BSR set to: 0
   673  000174  C076  FFD9         	movff	atoi@s,fsr2l
   674  000178  C077  FFDA         	movff	atoi@s+1,fsr2h
   675  00017C  50DF               	movf	indf2,w,c
   676  00017E  EC63  F002         	call	_isdigit
   677  000182  B0D8               	btfsc	status,0,c
   678  000184  D7D8               	goto	l441
   679  000186  0100               	movlb	0	; () banked
   680  000188  517A               	movf	atoi@sign& (0+255),w,b
   681  00018A  B4D8               	btfsc	status,2,c
   682  00018C  D00D               	goto	l443
   683                           
   684                           ; BSR set to: 0
   685  00018E  C07B  F078         	movff	atoi@a,??_atoi
   686  000192  C07C  F079         	movff	atoi@a+1,??_atoi+1
   687  000196  1F78               	comf	??_atoi& (0+255),f,b
   688  000198  1F79               	comf	(??_atoi+1)& (0+255),f,b
   689  00019A  4B78               	infsnz	??_atoi& (0+255),f,b
   690  00019C  2B79               	incf	(??_atoi+1)& (0+255),f,b
   691  00019E  C078  F076         	movff	??_atoi,?_atoi
   692  0001A2  C079  F077         	movff	??_atoi+1,?_atoi+1
   693  0001A6  0012               	return	
   694  0001A8                     l443:
   695                           
   696                           ; BSR set to: 0
   697  0001A8  C07B  F076         	movff	atoi@a,?_atoi
   698  0001AC  C07C  F077         	movff	atoi@a+1,?_atoi+1
   699                           
   700                           ; BSR set to: 0
   701  0001B0  0012               	return		;funcret
   702  0001B2                     __end_of_atoi:
   703                           	opt stack 0
   704                           tblptru	equ	0xFF8
   705                           intcon	equ	0xFF2
   706                           postinc0	equ	0xFEE
   707                           wreg	equ	0xFE8
   708                           indf1	equ	0xFE7
   709                           fsr1h	equ	0xFE2
   710                           fsr1l	equ	0xFE1
   711                           indf2	equ	0xFDF
   712                           postinc2	equ	0xFDE
   713                           fsr2h	equ	0xFDA
   714                           fsr2l	equ	0xFD9
   715                           status	equ	0xFD8
   716                           
   717 ;; *************** function _isdigit *****************
   718 ;; Defined at:
   719 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  c               1    wreg     unsigned char 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  c               1    2[BANK0 ] unsigned char 
   724 ;; Return value:  Size  Location     Type
   725 ;;		None               void
   726 ;; Registers used:
   727 ;;		wreg, status,2, status,0
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   735 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;Total ram usage:        3 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    4
   740 ;; This function calls:
   741 ;;		Nothing
   742 ;; This function is called by:
   743 ;;		_atoi
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text3
   748  0004C6                     __ptext3:
   749                           	opt stack 0
   750  0004C6                     _isdigit:
   751                           	opt stack 25
   752                           
   753                           ; BSR set to: 0
   754                           ;incstack = 0
   755                           ;isdigit@c stored from wreg
   756  0004C6  0100               	movlb	0	; () banked
   757  0004C8  6F72               	movwf	isdigit@c& (0+255),b
   758  0004CA  0E00               	movlw	0
   759  0004CC  0100               	movlb	0	; () banked
   760  0004CE  6F71               	movwf	_isdigit$926& (0+255),b
   761                           
   762                           ; BSR set to: 0
   763  0004D0  0E3A               	movlw	58
   764  0004D2  6172               	cpfslt	isdigit@c& (0+255),b
   765  0004D4  D005               	goto	l615
   766                           
   767                           ; BSR set to: 0
   768  0004D6  0E2F               	movlw	47
   769  0004D8  6572               	cpfsgt	isdigit@c& (0+255),b
   770  0004DA  D002               	goto	l615
   771                           
   772                           ; BSR set to: 0
   773  0004DC  0E01               	movlw	1
   774  0004DE  6F71               	movwf	_isdigit$926& (0+255),b
   775  0004E0                     l615:
   776                           
   777                           ; BSR set to: 0
   778                           
   779                           ; BSR set to: 0
   780  0004E0  C071  F070         	movff	_isdigit$926,??_isdigit
   781  0004E4  3170               	rrcf	??_isdigit& (0+255),w,b
   782  0004E6  0012               	return	
   783  0004E8                     __end_of_isdigit:
   784                           	opt stack 0
   785                           tblptru	equ	0xFF8
   786                           intcon	equ	0xFF2
   787                           postinc0	equ	0xFEE
   788                           wreg	equ	0xFE8
   789                           indf1	equ	0xFE7
   790                           fsr1h	equ	0xFE2
   791                           fsr1l	equ	0xFE1
   792                           indf2	equ	0xFDF
   793                           postinc2	equ	0xFDE
   794                           fsr2h	equ	0xFDA
   795                           fsr2l	equ	0xFD9
   796                           status	equ	0xFD8
   797                           
   798 ;; *************** function ___wmul *****************
   799 ;; Defined at:
   800 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;  multiplier      2    0[BANK0 ] unsigned int 
   803 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;  product         2    4[BANK0 ] unsigned int 
   806 ;; Return value:  Size  Location     Type
   807 ;;                  2    0[BANK0 ] unsigned int 
   808 ;; Registers used:
   809 ;;		wreg, status,2, status,0, prodl, prodh
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   815 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;Total ram usage:        6 bytes
   820 ;; Hardware stack levels used:    1
   821 ;; Hardware stack levels required when called:    4
   822 ;; This function calls:
   823 ;;		Nothing
   824 ;; This function is called by:
   825 ;;		_atoi
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text4
   830  000454                     __ptext4:
   831                           	opt stack 0
   832  000454                     ___wmul:
   833                           	opt stack 25
   834                           
   835                           ; BSR set to: 0
   836                           ;incstack = 0
   837  000454  0100               	movlb	0	; () banked
   838  000456  5170               	movf	___wmul@multiplier& (0+255),w,b
   839  000458  0372               	mulwf	___wmul@multiplicand& (0+255),b
   840  00045A  CFF3 F074          	movff	prodl,___wmul@product
   841  00045E  CFF4 F075          	movff	prodh,___wmul@product+1
   842  000462  5170               	movf	___wmul@multiplier& (0+255),w,b
   843  000464  0373               	mulwf	(___wmul@multiplicand+1)& (0+255),b
   844  000466  50F3               	movf	prodl,w,c
   845  000468  2775               	addwf	(___wmul@product+1)& (0+255),f,b
   846  00046A  5171               	movf	(___wmul@multiplier+1)& (0+255),w,b
   847  00046C  0372               	mulwf	___wmul@multiplicand& (0+255),b
   848  00046E  50F3               	movf	prodl,w,c
   849  000470  2775               	addwf	(___wmul@product+1)& (0+255),f,b
   850                           
   851                           ; BSR set to: 0
   852  000472  C074  F070         	movff	___wmul@product,?___wmul
   853  000476  C075  F071         	movff	___wmul@product+1,?___wmul+1
   854  00047A  0012               	return	
   855  00047C                     __end_of___wmul:
   856                           	opt stack 0
   857                           tblptru	equ	0xFF8
   858                           prodh	equ	0xFF4
   859                           prodl	equ	0xFF3
   860                           intcon	equ	0xFF2
   861                           postinc0	equ	0xFEE
   862                           wreg	equ	0xFE8
   863                           indf1	equ	0xFE7
   864                           fsr1h	equ	0xFE2
   865                           fsr1l	equ	0xFE1
   866                           indf2	equ	0xFDF
   867                           postinc2	equ	0xFDE
   868                           fsr2h	equ	0xFDA
   869                           fsr2l	equ	0xFD9
   870                           status	equ	0xFD8
   871                           
   872 ;; *************** function _SYSTEM_Initialize *****************
   873 ;; Defined at:
   874 ;;		line 50 in file "mcc_generated_files/mcc.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, status,2, status,0, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;Total ram usage:        0 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    6
   895 ;; This function calls:
   896 ;;		_EUSART1_Initialize
   897 ;;		_INTERRUPT_Initialize
   898 ;;		_OSCILLATOR_Initialize
   899 ;;		_PIN_MANAGER_Initialize
   900 ;; This function is called by:
   901 ;;		_main
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text5
   906  0004E8                     __ptext5:
   907                           	opt stack 0
   908  0004E8                     _SYSTEM_Initialize:
   909                           	opt stack 24
   910                           
   911                           ;mcc.c: 53: INTERRUPT_Initialize();
   912                           
   913                           ; BSR set to: 0
   914                           ;incstack = 0
   915  0004E8  ECAA  F002         	call	_INTERRUPT_Initialize	;wreg free
   916                           
   917                           ;mcc.c: 54: PIN_MANAGER_Initialize();
   918  0004EC  ECDA  F001         	call	_PIN_MANAGER_Initialize	;wreg free
   919                           
   920                           ;mcc.c: 55: OSCILLATOR_Initialize();
   921  0004F0  EC7D  F002         	call	_OSCILLATOR_Initialize	;wreg free
   922                           
   923                           ;mcc.c: 56: EUSART1_Initialize();
   924  0004F4  EC75  F001         	call	_EUSART1_Initialize	;wreg free
   925  0004F8  0012               	return		;funcret
   926  0004FA                     __end_of_SYSTEM_Initialize:
   927                           	opt stack 0
   928                           tblptru	equ	0xFF8
   929                           prodh	equ	0xFF4
   930                           prodl	equ	0xFF3
   931                           intcon	equ	0xFF2
   932                           postinc0	equ	0xFEE
   933                           wreg	equ	0xFE8
   934                           indf1	equ	0xFE7
   935                           fsr1h	equ	0xFE2
   936                           fsr1l	equ	0xFE1
   937                           indf2	equ	0xFDF
   938                           postinc2	equ	0xFDE
   939                           fsr2h	equ	0xFDA
   940                           fsr2l	equ	0xFD9
   941                           status	equ	0xFD8
   942                           
   943 ;; *************** function _PIN_MANAGER_Initialize *****************
   944 ;; Defined at:
   945 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;		None
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, status,2
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;Total ram usage:        0 bytes
   964 ;; Hardware stack levels used:    1
   965 ;; Hardware stack levels required when called:    4
   966 ;; This function calls:
   967 ;;		Nothing
   968 ;; This function is called by:
   969 ;;		_SYSTEM_Initialize
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           	psect	text6
   974  0003B4                     __ptext6:
   975                           	opt stack 0
   976  0003B4                     _PIN_MANAGER_Initialize:
   977                           	opt stack 25
   978                           
   979                           ;pin_manager.c: 60: LATE = 0x00;
   980                           
   981                           ;incstack = 0
   982  0003B4  0E00               	movlw	0
   983  0003B6  6E8D               	movwf	3981,c	;volatile
   984                           
   985                           ;pin_manager.c: 61: LATD = 0x00;
   986  0003B8  0E00               	movlw	0
   987  0003BA  6E8C               	movwf	3980,c	;volatile
   988                           
   989                           ;pin_manager.c: 62: LATA = 0x00;
   990  0003BC  0E00               	movlw	0
   991  0003BE  6E89               	movwf	3977,c	;volatile
   992                           
   993                           ;pin_manager.c: 63: LATB = 0x00;
   994  0003C0  0E00               	movlw	0
   995  0003C2  6E8A               	movwf	3978,c	;volatile
   996                           
   997                           ;pin_manager.c: 64: LATC = 0x00;
   998  0003C4  0E00               	movlw	0
   999  0003C6  6E8B               	movwf	3979,c	;volatile
  1000                           
  1001                           ;pin_manager.c: 69: TRISE = 0x07;
  1002  0003C8  0E07               	movlw	7
  1003  0003CA  6E96               	movwf	3990,c	;volatile
  1004                           
  1005                           ;pin_manager.c: 70: TRISA = 0x00;
  1006  0003CC  0E00               	movlw	0
  1007  0003CE  6E92               	movwf	3986,c	;volatile
  1008                           
  1009                           ;pin_manager.c: 71: TRISB = 0xFF;
  1010  0003D0  6893               	setf	3987,c	;volatile
  1011                           
  1012                           ;pin_manager.c: 72: TRISC = 0xB0;
  1013  0003D2  0EB0               	movlw	176
  1014  0003D4  6E94               	movwf	3988,c	;volatile
  1015                           
  1016                           ;pin_manager.c: 73: TRISD = 0x00;
  1017  0003D6  0E00               	movlw	0
  1018  0003D8  6E95               	movwf	3989,c	;volatile
  1019                           
  1020                           ;pin_manager.c: 78: ANSELD = 0xFF;
  1021  0003DA  010F               	movlb	15	; () banked
  1022  0003DC  693B               	setf	59,b	;volatile
  1023                           
  1024                           ;pin_manager.c: 79: ANSELC = 0x3C;
  1025  0003DE  0E3C               	movlw	60
  1026  0003E0  6F3A               	movwf	58,b	;volatile
  1027                           
  1028                           ;pin_manager.c: 80: ANSELB = 0x3F;
  1029  0003E2  0E3F               	movlw	63
  1030  0003E4  6F39               	movwf	57,b	;volatile
  1031                           
  1032                           ;pin_manager.c: 81: ANSELE = 0x07;
  1033  0003E6  0E07               	movlw	7
  1034  0003E8  6F3C               	movwf	60,b	;volatile
  1035                           
  1036                           ;pin_manager.c: 82: ANSELA = 0x2F;
  1037  0003EA  0E2F               	movlw	47
  1038  0003EC  6F38               	movwf	56,b	;volatile
  1039                           
  1040                           ;pin_manager.c: 87: WPUB = 0x00;
  1041  0003EE  0E00               	movlw	0
  1042  0003F0  6E61               	movwf	3937,c	;volatile
  1043                           
  1044                           ; BSR set to: 15
  1045                           ;pin_manager.c: 88: INTCON2bits.nRBPU = 1;
  1046  0003F2  8EF1               	bsf	intcon2,7,c	;volatile
  1047                           
  1048                           ; BSR set to: 15
  1049  0003F4  0012               	return		;funcret
  1050  0003F6                     __end_of_PIN_MANAGER_Initialize:
  1051                           	opt stack 0
  1052                           tblptru	equ	0xFF8
  1053                           prodh	equ	0xFF4
  1054                           prodl	equ	0xFF3
  1055                           intcon	equ	0xFF2
  1056                           intcon2	equ	0xFF1
  1057                           postinc0	equ	0xFEE
  1058                           wreg	equ	0xFE8
  1059                           indf1	equ	0xFE7
  1060                           fsr1h	equ	0xFE2
  1061                           fsr1l	equ	0xFE1
  1062                           indf2	equ	0xFDF
  1063                           postinc2	equ	0xFDE
  1064                           fsr2h	equ	0xFDA
  1065                           fsr2l	equ	0xFD9
  1066                           status	equ	0xFD8
  1067                           
  1068 ;; *************** function _OSCILLATOR_Initialize *****************
  1069 ;; Defined at:
  1070 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		wreg, status,2
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1088 ;;Total ram usage:        0 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; Hardware stack levels required when called:    4
  1091 ;; This function calls:
  1092 ;;		Nothing
  1093 ;; This function is called by:
  1094 ;;		_SYSTEM_Initialize
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text7
  1099  0004FA                     __ptext7:
  1100                           	opt stack 0
  1101  0004FA                     _OSCILLATOR_Initialize:
  1102                           	opt stack 25
  1103                           
  1104                           ;mcc.c: 62: OSCCON = 0x30;
  1105                           
  1106                           ; BSR set to: 15
  1107                           ;incstack = 0
  1108  0004FA  0E30               	movlw	48
  1109  0004FC  6ED3               	movwf	4051,c	;volatile
  1110                           
  1111                           ;mcc.c: 64: OSCCON2 = 0x04;
  1112  0004FE  0E04               	movlw	4
  1113  000500  6ED2               	movwf	4050,c	;volatile
  1114                           
  1115                           ;mcc.c: 66: OSCTUNE = 0x00;
  1116  000502  0E00               	movlw	0
  1117  000504  6E9B               	movwf	3995,c	;volatile
  1118  000506  0012               	return		;funcret
  1119  000508                     __end_of_OSCILLATOR_Initialize:
  1120                           	opt stack 0
  1121                           tblptru	equ	0xFF8
  1122                           prodh	equ	0xFF4
  1123                           prodl	equ	0xFF3
  1124                           intcon	equ	0xFF2
  1125                           intcon2	equ	0xFF1
  1126                           postinc0	equ	0xFEE
  1127                           wreg	equ	0xFE8
  1128                           indf1	equ	0xFE7
  1129                           fsr1h	equ	0xFE2
  1130                           fsr1l	equ	0xFE1
  1131                           indf2	equ	0xFDF
  1132                           postinc2	equ	0xFDE
  1133                           fsr2h	equ	0xFDA
  1134                           fsr2l	equ	0xFD9
  1135                           status	equ	0xFD8
  1136                           
  1137 ;; *************** function _INTERRUPT_Initialize *****************
  1138 ;; Defined at:
  1139 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;		None
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;		None
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      void 
  1146 ;; Registers used:
  1147 ;;		None
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;Total ram usage:        0 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    4
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_SYSTEM_Initialize
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text8
  1168  000554                     __ptext8:
  1169                           	opt stack 0
  1170  000554                     _INTERRUPT_Initialize:
  1171                           	opt stack 25
  1172                           
  1173                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  1174                           
  1175                           ;incstack = 0
  1176  000554  9ED0               	bcf	4048,7,c	;volatile
  1177  000556  0012               	return		;funcret
  1178  000558                     __end_of_INTERRUPT_Initialize:
  1179                           	opt stack 0
  1180                           tblptru	equ	0xFF8
  1181                           prodh	equ	0xFF4
  1182                           prodl	equ	0xFF3
  1183                           intcon	equ	0xFF2
  1184                           intcon2	equ	0xFF1
  1185                           postinc0	equ	0xFEE
  1186                           wreg	equ	0xFE8
  1187                           indf1	equ	0xFE7
  1188                           fsr1h	equ	0xFE2
  1189                           fsr1l	equ	0xFE1
  1190                           indf2	equ	0xFDF
  1191                           postinc2	equ	0xFDE
  1192                           fsr2h	equ	0xFDA
  1193                           fsr2l	equ	0xFD9
  1194                           status	equ	0xFD8
  1195                           
  1196 ;; *************** function _EUSART1_Initialize *****************
  1197 ;; Defined at:
  1198 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1216 ;;Total ram usage:        0 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    5
  1219 ;; This function calls:
  1220 ;;		_EUSART1_SetErrorHandler
  1221 ;;		_EUSART1_SetFramingErrorHandler
  1222 ;;		_EUSART1_SetOverrunErrorHandler
  1223 ;;		_EUSART1_SetRxInterruptHandler
  1224 ;;		_EUSART1_SetTxInterruptHandler
  1225 ;; This function is called by:
  1226 ;;		_SYSTEM_Initialize
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text9
  1231  0002EA                     __ptext9:
  1232                           	opt stack 0
  1233  0002EA                     _EUSART1_Initialize:
  1234                           	opt stack 24
  1235                           
  1236                           ;eusart1.c: 91: PIE1bits.RC1IE = 0;
  1237                           
  1238                           ;incstack = 0
  1239  0002EA  9A9D               	bcf	3997,5,c	;volatile
  1240                           
  1241                           ;eusart1.c: 92: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  1242  0002EC  0EB2               	movlw	low _EUSART1_Receive_ISR
  1243  0002EE  0100               	movlb	0	; () banked
  1244  0002F0  6F70               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
  1245  0002F2  0E01               	movlw	high _EUSART1_Receive_ISR
  1246  0002F4  6F71               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  1247  0002F6  EC90  F002         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1248                           
  1249                           ;eusart1.c: 93: PIE1bits.TX1IE = 0;
  1250  0002FA  989D               	bcf	3997,4,c	;volatile
  1251                           
  1252                           ;eusart1.c: 94: EUSART1_SetTxInterruptHandler(EUSART1_Transmit_ISR);
  1253  0002FC  0E26               	movlw	low _EUSART1_Transmit_ISR
  1254  0002FE  0100               	movlb	0	; () banked
  1255  000300  6F70               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler& (0+255),b
  1256  000302  0E04               	movlw	high _EUSART1_Transmit_ISR
  1257  000304  6F71               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  1258  000306  EC8B  F002         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  1259                           
  1260                           ;eusart1.c: 98: BAUDCON1 = 0x08;
  1261  00030A  0E08               	movlw	8
  1262  00030C  6EB8               	movwf	4024,c	;volatile
  1263                           
  1264                           ;eusart1.c: 101: RCSTA1 = 0x90;
  1265  00030E  0E90               	movlw	144
  1266  000310  6EAB               	movwf	4011,c	;volatile
  1267                           
  1268                           ;eusart1.c: 104: TXSTA1 = 0x24;
  1269  000312  0E24               	movlw	36
  1270  000314  6EAC               	movwf	4012,c	;volatile
  1271                           
  1272                           ;eusart1.c: 107: SPBRG1 = 0x19;
  1273  000316  0E19               	movlw	25
  1274  000318  6EAF               	movwf	4015,c	;volatile
  1275                           
  1276                           ;eusart1.c: 110: SPBRGH1 = 0x00;
  1277  00031A  0E00               	movlw	0
  1278  00031C  6EB0               	movwf	4016,c	;volatile
  1279                           
  1280                           ;eusart1.c: 113: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  1281  00031E  0E58               	movlw	low _EUSART1_DefaultFramingErrorHandler
  1282  000320  0100               	movlb	0	; () banked
  1283  000322  6F70               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  1284  000324  0E05               	movlw	high _EUSART1_DefaultFramingErrorHandler
  1285  000326  6F71               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  1286  000328  EC9A  F002         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1287                           
  1288                           ;eusart1.c: 114: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  1289  00032C  0E48               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  1290  00032E  0100               	movlb	0	; () banked
  1291  000330  6F70               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  1292  000332  0E05               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  1293  000334  6F71               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  1294  000336  EC95  F002         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1295                           
  1296                           ;eusart1.c: 115: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  1297  00033A  0E4E               	movlw	low _EUSART1_DefaultErrorHandler
  1298  00033C  0100               	movlb	0	; () banked
  1299  00033E  6F70               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  1300  000340  0E05               	movlw	high _EUSART1_DefaultErrorHandler
  1301  000342  6F71               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  1302  000344  EC9F  F002         	call	_EUSART1_SetErrorHandler	;wreg free
  1303                           
  1304                           ;eusart1.c: 117: eusart1RxLastError.status = 0;
  1305  000348  0E00               	movlw	0
  1306  00034A  6E27               	movwf	_eusart1RxLastError,c	;volatile
  1307                           
  1308                           ;eusart1.c: 120: eusart1TxHead = 0;
  1309  00034C  0E00               	movlw	0
  1310  00034E  6E2C               	movwf	_eusart1TxHead,c	;volatile
  1311                           
  1312                           ;eusart1.c: 121: eusart1TxTail = 0;
  1313  000350  0E00               	movlw	0
  1314  000352  6E2B               	movwf	_eusart1TxTail,c	;volatile
  1315                           
  1316                           ;eusart1.c: 122: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1317  000354  0E10               	movlw	16
  1318  000356  6E4C               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1319                           
  1320                           ;eusart1.c: 124: eusart1RxHead = 0;
  1321  000358  0E00               	movlw	0
  1322  00035A  6E2A               	movwf	_eusart1RxHead,c	;volatile
  1323                           
  1324                           ;eusart1.c: 125: eusart1RxTail = 0;
  1325  00035C  0E00               	movlw	0
  1326  00035E  6E29               	movwf	_eusart1RxTail,c	;volatile
  1327                           
  1328                           ;eusart1.c: 126: eusart1RxCount = 0;
  1329  000360  0E00               	movlw	0
  1330  000362  6E28               	movwf	_eusart1RxCount,c	;volatile
  1331                           
  1332                           ;eusart1.c: 129: PIE1bits.RC1IE = 1;
  1333  000364  8A9D               	bsf	3997,5,c	;volatile
  1334  000366  0012               	return		;funcret
  1335  000368                     __end_of_EUSART1_Initialize:
  1336                           	opt stack 0
  1337                           tblptru	equ	0xFF8
  1338                           prodh	equ	0xFF4
  1339                           prodl	equ	0xFF3
  1340                           intcon	equ	0xFF2
  1341                           intcon2	equ	0xFF1
  1342                           postinc0	equ	0xFEE
  1343                           wreg	equ	0xFE8
  1344                           indf1	equ	0xFE7
  1345                           fsr1h	equ	0xFE2
  1346                           fsr1l	equ	0xFE1
  1347                           indf2	equ	0xFDF
  1348                           postinc2	equ	0xFDE
  1349                           fsr2h	equ	0xFDA
  1350                           fsr2l	equ	0xFD9
  1351                           status	equ	0xFD8
  1352                           
  1353 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  1354 ;; Defined at:
  1355 ;;		line 276 in file "mcc_generated_files/eusart1.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  1358 ;;		 -> EUSART1_Transmit_ISR(1), 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, status,0
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1370 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;Total ram usage:        2 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; Hardware stack levels required when called:    4
  1377 ;; This function calls:
  1378 ;;		Nothing
  1379 ;; This function is called by:
  1380 ;;		_EUSART1_Initialize
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text10
  1385  000516                     __ptext10:
  1386                           	opt stack 0
  1387  000516                     _EUSART1_SetTxInterruptHandler:
  1388                           	opt stack 24
  1389                           
  1390                           ;eusart1.c: 277: EUSART1_TxDefaultInterruptHandler = interruptHandler;
  1391                           
  1392                           ;incstack = 0
  1393  000516  C070  F04A         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  1394  00051A  C071  F04B         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  1395  00051E  0012               	return		;funcret
  1396  000520                     __end_of_EUSART1_SetTxInterruptHandler:
  1397                           	opt stack 0
  1398                           tblptru	equ	0xFF8
  1399                           prodh	equ	0xFF4
  1400                           prodl	equ	0xFF3
  1401                           intcon	equ	0xFF2
  1402                           intcon2	equ	0xFF1
  1403                           postinc0	equ	0xFEE
  1404                           wreg	equ	0xFE8
  1405                           indf1	equ	0xFE7
  1406                           fsr1h	equ	0xFE2
  1407                           fsr1l	equ	0xFE1
  1408                           indf2	equ	0xFDF
  1409                           postinc2	equ	0xFDE
  1410                           fsr2h	equ	0xFDA
  1411                           fsr2l	equ	0xFD9
  1412                           status	equ	0xFD8
  1413                           
  1414 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  1415 ;; Defined at:
  1416 ;;		line 280 in file "mcc_generated_files/eusart1.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  1419 ;;		 -> EUSART1_Receive_ISR(1), 
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;		None
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1431 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;Total ram usage:        2 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    4
  1438 ;; This function calls:
  1439 ;;		Nothing
  1440 ;; This function is called by:
  1441 ;;		_EUSART1_Initialize
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text11
  1446  000520                     __ptext11:
  1447                           	opt stack 0
  1448  000520                     _EUSART1_SetRxInterruptHandler:
  1449                           	opt stack 24
  1450                           
  1451                           ;eusart1.c: 281: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  1452                           
  1453                           ;incstack = 0
  1454  000520  C070  F048         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  1455  000524  C071  F049         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  1456  000528  0012               	return		;funcret
  1457  00052A                     __end_of_EUSART1_SetRxInterruptHandler:
  1458                           	opt stack 0
  1459                           tblptru	equ	0xFF8
  1460                           prodh	equ	0xFF4
  1461                           prodl	equ	0xFF3
  1462                           intcon	equ	0xFF2
  1463                           intcon2	equ	0xFF1
  1464                           postinc0	equ	0xFEE
  1465                           wreg	equ	0xFE8
  1466                           indf1	equ	0xFE7
  1467                           fsr1h	equ	0xFE2
  1468                           fsr1l	equ	0xFE1
  1469                           indf2	equ	0xFDF
  1470                           postinc2	equ	0xFDE
  1471                           fsr2h	equ	0xFDA
  1472                           fsr2l	equ	0xFD9
  1473                           status	equ	0xFD8
  1474                           
  1475 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1476 ;; Defined at:
  1477 ;;		line 268 in file "mcc_generated_files/eusart1.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  1480 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, status,2, status,0
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1492 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;Total ram usage:        2 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    4
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_EUSART1_Initialize
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text12
  1507  00052A                     __ptext12:
  1508                           	opt stack 0
  1509  00052A                     _EUSART1_SetOverrunErrorHandler:
  1510                           	opt stack 24
  1511                           
  1512                           ;eusart1.c: 269: EUSART1_OverrunErrorHandler = interruptHandler;
  1513                           
  1514                           ;incstack = 0
  1515  00052A  C070  F044         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1516  00052E  C071  F045         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1517  000532  0012               	return		;funcret
  1518  000534                     __end_of_EUSART1_SetOverrunErrorHandler:
  1519                           	opt stack 0
  1520                           tblptru	equ	0xFF8
  1521                           prodh	equ	0xFF4
  1522                           prodl	equ	0xFF3
  1523                           intcon	equ	0xFF2
  1524                           intcon2	equ	0xFF1
  1525                           postinc0	equ	0xFEE
  1526                           wreg	equ	0xFE8
  1527                           indf1	equ	0xFE7
  1528                           fsr1h	equ	0xFE2
  1529                           fsr1l	equ	0xFE1
  1530                           indf2	equ	0xFDF
  1531                           postinc2	equ	0xFDE
  1532                           fsr2h	equ	0xFDA
  1533                           fsr2l	equ	0xFD9
  1534                           status	equ	0xFD8
  1535                           
  1536 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1537 ;; Defined at:
  1538 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  1541 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;		None
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, status,2, status,0
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1553 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1557 ;;Total ram usage:        2 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    4
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_EUSART1_Initialize
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text13
  1568  000534                     __ptext13:
  1569                           	opt stack 0
  1570  000534                     _EUSART1_SetFramingErrorHandler:
  1571                           	opt stack 24
  1572                           
  1573                           ;eusart1.c: 265: EUSART1_FramingErrorHandler = interruptHandler;
  1574                           
  1575                           ;incstack = 0
  1576  000534  C070  F046         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1577  000538  C071  F047         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1578  00053C  0012               	return		;funcret
  1579  00053E                     __end_of_EUSART1_SetFramingErrorHandler:
  1580                           	opt stack 0
  1581                           tblptru	equ	0xFF8
  1582                           prodh	equ	0xFF4
  1583                           prodl	equ	0xFF3
  1584                           intcon	equ	0xFF2
  1585                           intcon2	equ	0xFF1
  1586                           postinc0	equ	0xFEE
  1587                           wreg	equ	0xFE8
  1588                           indf1	equ	0xFE7
  1589                           fsr1h	equ	0xFE2
  1590                           fsr1l	equ	0xFE1
  1591                           indf2	equ	0xFDF
  1592                           postinc2	equ	0xFDE
  1593                           fsr2h	equ	0xFDA
  1594                           fsr2l	equ	0xFD9
  1595                           status	equ	0xFD8
  1596                           
  1597 ;; *************** function _EUSART1_SetErrorHandler *****************
  1598 ;; Defined at:
  1599 ;;		line 272 in file "mcc_generated_files/eusart1.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  1602 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, status,0
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1614 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;Total ram usage:        2 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    4
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		_EUSART1_Initialize
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text14
  1629  00053E                     __ptext14:
  1630                           	opt stack 0
  1631  00053E                     _EUSART1_SetErrorHandler:
  1632                           	opt stack 24
  1633                           
  1634                           ;eusart1.c: 273: EUSART1_ErrorHandler = interruptHandler;
  1635                           
  1636                           ;incstack = 0
  1637  00053E  C070  F042         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1638  000542  C071  F043         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1639  000546  0012               	return		;funcret
  1640  000548                     __end_of_EUSART1_SetErrorHandler:
  1641                           	opt stack 0
  1642                           tblptru	equ	0xFF8
  1643                           prodh	equ	0xFF4
  1644                           prodl	equ	0xFF3
  1645                           intcon	equ	0xFF2
  1646                           intcon2	equ	0xFF1
  1647                           postinc0	equ	0xFEE
  1648                           wreg	equ	0xFE8
  1649                           indf1	equ	0xFE7
  1650                           fsr1h	equ	0xFE2
  1651                           fsr1l	equ	0xFE1
  1652                           indf2	equ	0xFDF
  1653                           postinc2	equ	0xFDE
  1654                           fsr2h	equ	0xFDA
  1655                           fsr2l	equ	0xFD9
  1656                           status	equ	0xFD8
  1657                           
  1658 ;; *************** function _EUSART1_is_rx_ready *****************
  1659 ;; Defined at:
  1660 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      unsigned char 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1678 ;;Total ram usage:        0 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    4
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_main
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text15
  1689  000508                     __ptext15:
  1690                           	opt stack 0
  1691  000508                     _EUSART1_is_rx_ready:
  1692                           	opt stack 26
  1693                           
  1694                           ;eusart1.c: 139: return (eusart1RxCount ? 1 : 0);
  1695                           
  1696                           ;incstack = 0
  1697  000508  5028               	movf	_eusart1RxCount,w,c	;volatile
  1698  00050A  B4D8               	btfsc	status,2,c
  1699  00050C  D002               	goto	u680
  1700  00050E  0E01               	movlw	1
  1701  000510  0012               	return	
  1702  000512                     u680:
  1703  000512  0E00               	movlw	0
  1704  000514  0012               	return	
  1705  000516                     __end_of_EUSART1_is_rx_ready:
  1706                           	opt stack 0
  1707                           tblptru	equ	0xFF8
  1708                           prodh	equ	0xFF4
  1709                           prodl	equ	0xFF3
  1710                           intcon	equ	0xFF2
  1711                           intcon2	equ	0xFF1
  1712                           postinc0	equ	0xFEE
  1713                           wreg	equ	0xFE8
  1714                           indf1	equ	0xFE7
  1715                           fsr1h	equ	0xFE2
  1716                           fsr1l	equ	0xFE1
  1717                           indf2	equ	0xFDF
  1718                           postinc2	equ	0xFDE
  1719                           fsr2h	equ	0xFDA
  1720                           fsr2l	equ	0xFD9
  1721                           status	equ	0xFD8
  1722                           
  1723 ;; *************** function _EUSART1_Read *****************
  1724 ;; Defined at:
  1725 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  readValue       1    0[BANK0 ] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      unsigned char 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;Total ram usage:        1 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    4
  1746 ;; This function calls:
  1747 ;;		Nothing
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text16
  1754  000368                     __ptext16:
  1755                           	opt stack 0
  1756  000368                     _EUSART1_Read:
  1757                           	opt stack 26
  1758                           
  1759                           ;eusart1.c: 153: uint8_t readValue = 0;
  1760                           
  1761                           ;incstack = 0
  1762  000368  0E00               	movlw	0
  1763  00036A  0100               	movlb	0	; () banked
  1764  00036C  6F70               	movwf	EUSART1_Read@readValue& (0+255),b
  1765  00036E                     
  1766                           ; BSR set to: 0
  1767                           
  1768                           ;eusart1.c: 156: {
  1769                           
  1770                           ; BSR set to: 0
  1771  00036E  5028               	movf	_eusart1RxCount,w,c	;volatile
  1772  000370  B4D8               	btfsc	status,2,c
  1773  000372  D7FD               	goto	l129
  1774                           
  1775                           ;eusart1.c: 157: }
  1776                           ;eusart1.c: 159: eusart1RxLastError = eusart1RxStatusBuffer[eusart1RxTail];
  1777  000374  5029               	movf	_eusart1RxTail,w,c	;volatile
  1778  000376  0D01               	mullw	1
  1779  000378  0E01               	movlw	low _eusart1RxStatusBuffer
  1780  00037A  24F3               	addwf	prodl,w,c
  1781  00037C  6ED9               	movwf	fsr2l,c
  1782  00037E  0E00               	movlw	high _eusart1RxStatusBuffer
  1783  000380  20F4               	addwfc	prodh,w,c
  1784  000382  6EDA               	movwf	fsr2h,c
  1785  000384  50DF               	movf	indf2,w,c
  1786  000386  6E27               	movwf	_eusart1RxLastError,c	;volatile
  1787                           
  1788                           ;eusart1.c: 161: readValue = eusart1RxBuffer[eusart1RxTail++];
  1789  000388  5029               	movf	_eusart1RxTail,w,c	;volatile
  1790  00038A  0D01               	mullw	1
  1791  00038C  0E60               	movlw	low _eusart1RxBuffer
  1792  00038E  24F3               	addwf	prodl,w,c
  1793  000390  6ED9               	movwf	fsr2l,c
  1794  000392  0E00               	movlw	high _eusart1RxBuffer
  1795  000394  20F4               	addwfc	prodh,w,c
  1796  000396  6EDA               	movwf	fsr2h,c
  1797  000398  50DF               	movf	indf2,w,c
  1798  00039A  0100               	movlb	0	; () banked
  1799  00039C  6F70               	movwf	EUSART1_Read@readValue& (0+255),b
  1800                           
  1801                           ; BSR set to: 0
  1802  00039E  2A29               	incf	_eusart1RxTail,f,c	;volatile
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;eusart1.c: 162: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  1806  0003A0  0E0F               	movlw	15
  1807  0003A2  6429               	cpfsgt	_eusart1RxTail,c	;volatile
  1808  0003A4  D002               	goto	l131
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;eusart1.c: 163: {
  1812                           ;eusart1.c: 164: eusart1RxTail = 0;
  1813  0003A6  0E00               	movlw	0
  1814  0003A8  6E29               	movwf	_eusart1RxTail,c	;volatile
  1815  0003AA                     l131:
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;eusart1.c: 165: }
  1819                           ;eusart1.c: 166: PIE1bits.RC1IE = 0;
  1820                           
  1821                           ; BSR set to: 0
  1822  0003AA  9A9D               	bcf	3997,5,c	;volatile
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;eusart1.c: 167: eusart1RxCount--;
  1826  0003AC  0628               	decf	_eusart1RxCount,f,c	;volatile
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;eusart1.c: 168: PIE1bits.RC1IE = 1;
  1830  0003AE  8A9D               	bsf	3997,5,c	;volatile
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;eusart1.c: 170: return readValue;
  1834  0003B0  5170               	movf	EUSART1_Read@readValue& (0+255),w,b
  1835  0003B2  0012               	return	
  1836  0003B4                     __end_of_EUSART1_Read:
  1837                           	opt stack 0
  1838                           tblptru	equ	0xFF8
  1839                           prodh	equ	0xFF4
  1840                           prodl	equ	0xFF3
  1841                           intcon	equ	0xFF2
  1842                           intcon2	equ	0xFF1
  1843                           postinc0	equ	0xFEE
  1844                           wreg	equ	0xFE8
  1845                           indf1	equ	0xFE7
  1846                           fsr1h	equ	0xFE2
  1847                           fsr1l	equ	0xFE1
  1848                           indf2	equ	0xFDF
  1849                           postinc2	equ	0xFDE
  1850                           fsr2h	equ	0xFDA
  1851                           fsr2l	equ	0xFD9
  1852                           status	equ	0xFD8
  1853                           
  1854 ;; *************** function _INTERRUPT_InterruptManager *****************
  1855 ;; Defined at:
  1856 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1872 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;Total ram usage:       18 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; Hardware stack levels required when called:    3
  1877 ;; This function calls:
  1878 ;;		Absolute function
  1879 ;;		_EUSART1_Receive_ISR
  1880 ;;		_EUSART1_Transmit_ISR
  1881 ;; This function is called by:
  1882 ;;		Interrupt level 2
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	intcode
  1887  000008                     __pintcode:
  1888                           	opt stack 0
  1889  000008                     _INTERRUPT_InterruptManager:
  1890                           	opt stack 24
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;incstack = 0
  1894  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1895  00000A  CFFA F030          	movff	pclath,??_INTERRUPT_InterruptManager
  1896  00000E  CFFB F031          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1897  000012  CFE9 F032          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1898  000016  CFEA F033          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1899  00001A  CFE1 F034          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1900  00001E  CFE2 F035          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1901  000022  CFD9 F036          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1902  000026  CFDA F037          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1903  00002A  CFF3 F038          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1904  00002E  CFF4 F039          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1905  000032  CFF6 F03A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1906  000036  CFF7 F03B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1907  00003A  CFF8 F03C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1908  00003E  CFF5 F03D          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1909  000042  C04D  F03E         	movff	btemp,??_INTERRUPT_InterruptManager+14
  1910  000046  C04E  F03F         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  1911  00004A  C04F  F040         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  1912  00004E  C050  F041         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  1913                           
  1914                           ;interrupt_manager.c: 61: if(INTCONbits.PEIE == 1)
  1915  000052  ACF2               	btfss	intcon,6,c	;volatile
  1916  000054  D01A               	goto	i2u65_49
  1917                           
  1918                           ;interrupt_manager.c: 62: {
  1919                           ;interrupt_manager.c: 63: if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  1920  000056  B89D               	btfsc	3997,4,c	;volatile
  1921  000058  A89E               	btfss	3998,4,c	;volatile
  1922  00005A  D008               	goto	i2l203
  1923                           
  1924                           ;interrupt_manager.c: 64: {
  1925                           ;interrupt_manager.c: 65: EUSART1_TxDefaultInterruptHandler();
  1926  00005C  D801               	call	i2u62_48
  1927  00005E  D015               	goto	i2u65_49
  1928  000060                     i2u62_48:
  1929  000060  0005               	push	
  1930  000062  6EFA               	movwf	pclath,c
  1931  000064  504A               	movf	_EUSART1_TxDefaultInterruptHandler,w,c
  1932  000066  6EFD               	movwf	tosl,c
  1933  000068  504B               	movf	_EUSART1_TxDefaultInterruptHandler+1,w,c
  1934  00006A  D00A               	goto	L1
  1935  00006C                     i2l203:
  1936                           
  1937                           ;interrupt_manager.c: 67: else if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  1938  00006C  BA9D               	btfsc	3997,5,c	;volatile
  1939  00006E  AA9E               	btfss	3998,5,c	;volatile
  1940  000070  D00C               	goto	i2u65_49
  1941                           
  1942                           ;interrupt_manager.c: 68: {
  1943                           ;interrupt_manager.c: 69: EUSART1_RxDefaultInterruptHandler();
  1944  000072  D801               	call	i2u65_48
  1945  000074  D00A               	goto	i2u65_49
  1946  000076                     i2u65_48:
  1947  000076  0005               	push	
  1948  000078  6EFA               	movwf	pclath,c
  1949  00007A  5048               	movf	_EUSART1_RxDefaultInterruptHandler,w,c
  1950  00007C  6EFD               	movwf	tosl,c
  1951  00007E  5049               	movf	_EUSART1_RxDefaultInterruptHandler+1,w,c
  1952  000080                     L1:
  1953  000080  6EFE               	movwf	tosh,c
  1954  000082  50F8               	movf	tblptru,w,c
  1955  000084  6EFF               	movwf	tosu,c
  1956  000086  50FA               	movf	pclath,w,c
  1957  000088  0012               	return		;indir
  1958  00008A                     i2u65_49:
  1959                           
  1960                           ;interrupt_manager.c: 76: else
  1961                           ;interrupt_manager.c: 77: {
  1962                           
  1963                           ;interrupt_manager.c: 74: }
  1964                           ;interrupt_manager.c: 75: }
  1965                           
  1966                           ;interrupt_manager.c: 71: else
  1967                           ;interrupt_manager.c: 72: {
  1968                           
  1969                           ;interrupt_manager.c: 70: }
  1970  00008A  C041  F050         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  1971  00008E  C040  F04F         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  1972  000092  C03F  F04E         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  1973  000096  C03E  F04D         	movff	??_INTERRUPT_InterruptManager+14,btemp
  1974  00009A  C03D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1975  00009E  C03C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1976  0000A2  C03B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1977  0000A6  C03A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1978  0000AA  C039  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1979  0000AE  C038  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1980  0000B2  C037  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1981  0000B6  C036  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1982  0000BA  C035  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1983  0000BE  C034  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1984  0000C2  C033  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1985  0000C6  C032  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1986  0000CA  C031  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1987  0000CE  C030  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1988  0000D2  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1989  0000D4  0011               	retfie		f
  1990  0000D6                     __end_of_INTERRUPT_InterruptManager:
  1991                           	opt stack 0
  1992                           tosu	equ	0xFFF
  1993                           tosh	equ	0xFFE
  1994                           tosl	equ	0xFFD
  1995                           pclatu	equ	0xFFB
  1996                           pclath	equ	0xFFA
  1997                           tblptru	equ	0xFF8
  1998                           tblptrh	equ	0xFF7
  1999                           tblptrl	equ	0xFF6
  2000                           tablat	equ	0xFF5
  2001                           prodh	equ	0xFF4
  2002                           prodl	equ	0xFF3
  2003                           intcon	equ	0xFF2
  2004                           intcon2	equ	0xFF1
  2005                           postinc0	equ	0xFEE
  2006                           fsr0h	equ	0xFEA
  2007                           fsr0l	equ	0xFE9
  2008                           wreg	equ	0xFE8
  2009                           indf1	equ	0xFE7
  2010                           fsr1h	equ	0xFE2
  2011                           fsr1l	equ	0xFE1
  2012                           indf2	equ	0xFDF
  2013                           postinc2	equ	0xFDE
  2014                           fsr2h	equ	0xFDA
  2015                           fsr2l	equ	0xFD9
  2016                           status	equ	0xFD8
  2017                           
  2018 ;; *************** function _EUSART1_Transmit_ISR *****************
  2019 ;; Defined at:
  2020 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;		None
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;		None
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;Total ram usage:        0 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_EUSART1_Initialize
  2044 ;;		_INTERRUPT_InterruptManager
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           	psect	text18
  2049  000426                     __ptext18:
  2050                           	opt stack 0
  2051  000426                     _EUSART1_Transmit_ISR:
  2052                           	opt stack 26
  2053                           
  2054                           ;eusart1.c: 201: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  2055                           
  2056                           ;incstack = 0
  2057  000426  0E10               	movlw	16
  2058  000428  604C               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  2059  00042A  D012               	goto	i2l144
  2060                           
  2061                           ;eusart1.c: 202: {
  2062                           ;eusart1.c: 203: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  2063  00042C  502B               	movf	_eusart1TxTail,w,c	;volatile
  2064  00042E  0D01               	mullw	1
  2065  000430  0E11               	movlw	low _eusart1TxBuffer
  2066  000432  24F3               	addwf	prodl,w,c
  2067  000434  6ED9               	movwf	fsr2l,c
  2068  000436  0E00               	movlw	high _eusart1TxBuffer
  2069  000438  20F4               	addwfc	prodh,w,c
  2070  00043A  6EDA               	movwf	fsr2h,c
  2071  00043C  50DF               	movf	indf2,w,c
  2072  00043E  6EAD               	movwf	4013,c	;volatile
  2073  000440  2A2B               	incf	_eusart1TxTail,f,c	;volatile
  2074                           
  2075                           ;eusart1.c: 204: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  2076  000442  0E0F               	movlw	15
  2077  000444  642B               	cpfsgt	_eusart1TxTail,c	;volatile
  2078  000446  D002               	goto	i2l145
  2079                           
  2080                           ;eusart1.c: 205: {
  2081                           ;eusart1.c: 206: eusart1TxTail = 0;
  2082  000448  0E00               	movlw	0
  2083  00044A  6E2B               	movwf	_eusart1TxTail,c	;volatile
  2084  00044C                     i2l145:
  2085                           
  2086                           ;eusart1.c: 207: }
  2087                           ;eusart1.c: 208: eusart1TxBufferRemaining++;
  2088  00044C  2A4C               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  2089                           
  2090                           ;eusart1.c: 209: }
  2091  00044E  0012               	return	
  2092  000450                     i2l144:
  2093                           
  2094                           ;eusart1.c: 210: else
  2095                           ;eusart1.c: 211: {
  2096                           ;eusart1.c: 212: PIE1bits.TX1IE = 0;
  2097  000450  989D               	bcf	3997,4,c	;volatile
  2098  000452  0012               	return	
  2099  000454                     __end_of_EUSART1_Transmit_ISR:
  2100                           	opt stack 0
  2101                           tosu	equ	0xFFF
  2102                           tosh	equ	0xFFE
  2103                           tosl	equ	0xFFD
  2104                           pclatu	equ	0xFFB
  2105                           pclath	equ	0xFFA
  2106                           tblptru	equ	0xFF8
  2107                           tblptrh	equ	0xFF7
  2108                           tblptrl	equ	0xFF6
  2109                           tablat	equ	0xFF5
  2110                           prodh	equ	0xFF4
  2111                           prodl	equ	0xFF3
  2112                           intcon	equ	0xFF2
  2113                           intcon2	equ	0xFF1
  2114                           postinc0	equ	0xFEE
  2115                           fsr0h	equ	0xFEA
  2116                           fsr0l	equ	0xFE9
  2117                           wreg	equ	0xFE8
  2118                           indf1	equ	0xFE7
  2119                           fsr1h	equ	0xFE2
  2120                           fsr1l	equ	0xFE1
  2121                           indf2	equ	0xFDF
  2122                           postinc2	equ	0xFDE
  2123                           fsr2h	equ	0xFDA
  2124                           fsr2l	equ	0xFD9
  2125                           status	equ	0xFD8
  2126                           
  2127 ;; *************** function _EUSART1_Receive_ISR *****************
  2128 ;; Defined at:
  2129 ;;		line 216 in file "mcc_generated_files/eusart1.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    2
  2150 ;; This function calls:
  2151 ;;		Absolute function
  2152 ;;		_EUSART1_DefaultErrorHandler
  2153 ;;		_EUSART1_DefaultFramingErrorHandler
  2154 ;;		_EUSART1_DefaultOverrunErrorHandler
  2155 ;;		_EUSART1_RxDataHandler
  2156 ;; This function is called by:
  2157 ;;		_EUSART1_Initialize
  2158 ;;		_INTERRUPT_InterruptManager
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text19
  2163  0001B2                     __ptext19:
  2164                           	opt stack 0
  2165  0001B2                     _EUSART1_Receive_ISR:
  2166                           	opt stack 24
  2167                           
  2168                           ;eusart1.c: 219: eusart1RxStatusBuffer[eusart1RxHead].status = 0;
  2169                           
  2170                           ;incstack = 0
  2171  0001B2  502A               	movf	_eusart1RxHead,w,c	;volatile
  2172  0001B4  0D01               	mullw	1
  2173  0001B6  0E01               	movlw	low _eusart1RxStatusBuffer
  2174  0001B8  24F3               	addwf	prodl,w,c
  2175  0001BA  6ED9               	movwf	fsr2l,c
  2176  0001BC  0E00               	movlw	high _eusart1RxStatusBuffer
  2177  0001BE  20F4               	addwfc	prodh,w,c
  2178  0001C0  6EDA               	movwf	fsr2h,c
  2179  0001C2  0E00               	movlw	0
  2180  0001C4  6EDF               	movwf	indf2,c
  2181                           
  2182                           ;eusart1.c: 221: if(RCSTA1bits.FERR){
  2183  0001C6  A4AB               	btfss	4011,2,c	;volatile
  2184  0001C8  D015               	goto	i2u50_49
  2185                           
  2186                           ;eusart1.c: 222: eusart1RxStatusBuffer[eusart1RxHead].ferr = 1;
  2187  0001CA  502A               	movf	_eusart1RxHead,w,c	;volatile
  2188  0001CC  0D01               	mullw	1
  2189  0001CE  0E01               	movlw	low _eusart1RxStatusBuffer
  2190  0001D0  24F3               	addwf	prodl,w,c
  2191  0001D2  6ED9               	movwf	fsr2l,c
  2192  0001D4  0E00               	movlw	high _eusart1RxStatusBuffer
  2193  0001D6  20F4               	addwfc	prodh,w,c
  2194  0001D8  6EDA               	movwf	fsr2h,c
  2195  0001DA  82DF               	bsf	indf2,1,c
  2196                           
  2197                           ;eusart1.c: 223: EUSART1_FramingErrorHandler();
  2198  0001DC  D801               	call	i2u50_48
  2199  0001DE  D00A               	goto	i2u50_49
  2200  0001E0                     i2u50_48:
  2201  0001E0  0005               	push	
  2202  0001E2  6EFA               	movwf	pclath,c
  2203  0001E4  5046               	movf	_EUSART1_FramingErrorHandler,w,c
  2204  0001E6  6EFD               	movwf	tosl,c
  2205  0001E8  5047               	movf	_EUSART1_FramingErrorHandler+1,w,c
  2206  0001EA  6EFE               	movwf	tosh,c
  2207  0001EC  50F8               	movf	tblptru,w,c
  2208  0001EE  6EFF               	movwf	tosu,c
  2209  0001F0  50FA               	movf	pclath,w,c
  2210  0001F2  0012               	return		;indir
  2211  0001F4                     i2u50_49:
  2212                           
  2213                           ;eusart1.c: 224: }
  2214                           ;eusart1.c: 226: if(RCSTA1bits.OERR){
  2215  0001F4  A2AB               	btfss	4011,1,c	;volatile
  2216  0001F6  D015               	goto	i2u52_49
  2217                           
  2218                           ;eusart1.c: 227: eusart1RxStatusBuffer[eusart1RxHead].oerr = 1;
  2219  0001F8  502A               	movf	_eusart1RxHead,w,c	;volatile
  2220  0001FA  0D01               	mullw	1
  2221  0001FC  0E01               	movlw	low _eusart1RxStatusBuffer
  2222  0001FE  24F3               	addwf	prodl,w,c
  2223  000200  6ED9               	movwf	fsr2l,c
  2224  000202  0E00               	movlw	high _eusart1RxStatusBuffer
  2225  000204  20F4               	addwfc	prodh,w,c
  2226  000206  6EDA               	movwf	fsr2h,c
  2227  000208  84DF               	bsf	indf2,2,c
  2228                           
  2229                           ;eusart1.c: 228: EUSART1_OverrunErrorHandler();
  2230  00020A  D801               	call	i2u52_48
  2231  00020C  D00A               	goto	i2u52_49
  2232  00020E                     i2u52_48:
  2233  00020E  0005               	push	
  2234  000210  6EFA               	movwf	pclath,c
  2235  000212  5044               	movf	_EUSART1_OverrunErrorHandler,w,c
  2236  000214  6EFD               	movwf	tosl,c
  2237  000216  5045               	movf	_EUSART1_OverrunErrorHandler+1,w,c
  2238  000218  6EFE               	movwf	tosh,c
  2239  00021A  50F8               	movf	tblptru,w,c
  2240  00021C  6EFF               	movwf	tosu,c
  2241  00021E  50FA               	movf	pclath,w,c
  2242  000220  0012               	return		;indir
  2243  000222                     i2u52_49:
  2244                           
  2245                           ;eusart1.c: 229: }
  2246                           ;eusart1.c: 231: if(eusart1RxStatusBuffer[eusart1RxHead].status){
  2247  000222  502A               	movf	_eusart1RxHead,w,c	;volatile
  2248  000224  0D01               	mullw	1
  2249  000226  0E01               	movlw	low _eusart1RxStatusBuffer
  2250  000228  24F3               	addwf	prodl,w,c
  2251  00022A  6ED9               	movwf	fsr2l,c
  2252  00022C  0E00               	movlw	high _eusart1RxStatusBuffer
  2253  00022E  20F4               	addwfc	prodh,w,c
  2254  000230  6EDA               	movwf	fsr2h,c
  2255  000232  50DF               	movf	indf2,w,c
  2256  000234  B4D8               	btfsc	status,2,c
  2257  000236  D00C               	goto	i2l152
  2258                           
  2259                           ;eusart1.c: 232: EUSART1_ErrorHandler();
  2260  000238  D801               	call	i2u54_48
  2261  00023A  0012               	return	
  2262  00023C                     i2u54_48:
  2263  00023C  0005               	push	
  2264  00023E  6EFA               	movwf	pclath,c
  2265  000240  5042               	movf	_EUSART1_ErrorHandler,w,c
  2266  000242  6EFD               	movwf	tosl,c
  2267  000244  5043               	movf	_EUSART1_ErrorHandler+1,w,c
  2268  000246  6EFE               	movwf	tosh,c
  2269  000248  50F8               	movf	tblptru,w,c
  2270  00024A  6EFF               	movwf	tosu,c
  2271  00024C  50FA               	movf	pclath,w,c
  2272  00024E  0012               	return		;indir
  2273  000250                     i2l152:
  2274                           
  2275                           ;eusart1.c: 234: EUSART1_RxDataHandler();
  2276  000250  EC51  F002         	call	_EUSART1_RxDataHandler	;wreg free
  2277  000254  0012               	return	
  2278  000256                     __end_of_EUSART1_Receive_ISR:
  2279                           	opt stack 0
  2280                           tosu	equ	0xFFF
  2281                           tosh	equ	0xFFE
  2282                           tosl	equ	0xFFD
  2283                           pclatu	equ	0xFFB
  2284                           pclath	equ	0xFFA
  2285                           tblptru	equ	0xFF8
  2286                           tblptrh	equ	0xFF7
  2287                           tblptrl	equ	0xFF6
  2288                           tablat	equ	0xFF5
  2289                           prodh	equ	0xFF4
  2290                           prodl	equ	0xFF3
  2291                           intcon	equ	0xFF2
  2292                           intcon2	equ	0xFF1
  2293                           postinc0	equ	0xFEE
  2294                           fsr0h	equ	0xFEA
  2295                           fsr0l	equ	0xFE9
  2296                           wreg	equ	0xFE8
  2297                           indf1	equ	0xFE7
  2298                           fsr1h	equ	0xFE2
  2299                           fsr1l	equ	0xFE1
  2300                           indf2	equ	0xFDF
  2301                           postinc2	equ	0xFDE
  2302                           fsr2h	equ	0xFDA
  2303                           fsr2l	equ	0xFD9
  2304                           status	equ	0xFD8
  2305                           
  2306 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  2307 ;; Defined at:
  2308 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;		None
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;		None
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		None
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2326 ;;Total ram usage:        0 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; This function calls:
  2329 ;;		Nothing
  2330 ;; This function is called by:
  2331 ;;		_EUSART1_Initialize
  2332 ;;		_EUSART1_Receive_ISR
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text20
  2337  000548                     __ptext20:
  2338                           	opt stack 0
  2339  000548                     _EUSART1_DefaultOverrunErrorHandler:
  2340                           	opt stack 25
  2341                           
  2342                           ;eusart1.c: 255: RCSTA1bits.CREN = 0;
  2343                           
  2344                           ;incstack = 0
  2345  000548  98AB               	bcf	4011,4,c	;volatile
  2346                           
  2347                           ;eusart1.c: 256: RCSTA1bits.CREN = 1;
  2348  00054A  88AB               	bsf	4011,4,c	;volatile
  2349  00054C  0012               	return		;funcret
  2350  00054E                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  2351                           	opt stack 0
  2352                           tosu	equ	0xFFF
  2353                           tosh	equ	0xFFE
  2354                           tosl	equ	0xFFD
  2355                           pclatu	equ	0xFFB
  2356                           pclath	equ	0xFFA
  2357                           tblptru	equ	0xFF8
  2358                           tblptrh	equ	0xFF7
  2359                           tblptrl	equ	0xFF6
  2360                           tablat	equ	0xFF5
  2361                           prodh	equ	0xFF4
  2362                           prodl	equ	0xFF3
  2363                           intcon	equ	0xFF2
  2364                           intcon2	equ	0xFF1
  2365                           postinc0	equ	0xFEE
  2366                           fsr0h	equ	0xFEA
  2367                           fsr0l	equ	0xFE9
  2368                           wreg	equ	0xFE8
  2369                           indf1	equ	0xFE7
  2370                           fsr1h	equ	0xFE2
  2371                           fsr1l	equ	0xFE1
  2372                           indf2	equ	0xFDF
  2373                           postinc2	equ	0xFDE
  2374                           fsr2h	equ	0xFDA
  2375                           fsr2l	equ	0xFD9
  2376                           status	equ	0xFD8
  2377                           
  2378 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  2379 ;; Defined at:
  2380 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;		None
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      void 
  2387 ;; Registers used:
  2388 ;;		None
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;Total ram usage:        0 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; This function calls:
  2401 ;;		Nothing
  2402 ;; This function is called by:
  2403 ;;		_EUSART1_Initialize
  2404 ;;		_EUSART1_Receive_ISR
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text21
  2409  000558                     __ptext21:
  2410                           	opt stack 0
  2411  000558                     _EUSART1_DefaultFramingErrorHandler:
  2412                           	opt stack 25
  2413                           
  2414                           ;incstack = 0
  2415  000558  0012               	return		;funcret
  2416  00055A                     __end_of_EUSART1_DefaultFramingErrorHandler:
  2417                           	opt stack 0
  2418                           tosu	equ	0xFFF
  2419                           tosh	equ	0xFFE
  2420                           tosl	equ	0xFFD
  2421                           pclatu	equ	0xFFB
  2422                           pclath	equ	0xFFA
  2423                           tblptru	equ	0xFF8
  2424                           tblptrh	equ	0xFF7
  2425                           tblptrl	equ	0xFF6
  2426                           tablat	equ	0xFF5
  2427                           prodh	equ	0xFF4
  2428                           prodl	equ	0xFF3
  2429                           intcon	equ	0xFF2
  2430                           intcon2	equ	0xFF1
  2431                           postinc0	equ	0xFEE
  2432                           fsr0h	equ	0xFEA
  2433                           fsr0l	equ	0xFE9
  2434                           wreg	equ	0xFE8
  2435                           indf1	equ	0xFE7
  2436                           fsr1h	equ	0xFE2
  2437                           fsr1l	equ	0xFE1
  2438                           indf2	equ	0xFDF
  2439                           postinc2	equ	0xFDE
  2440                           fsr2h	equ	0xFDA
  2441                           fsr2l	equ	0xFD9
  2442                           status	equ	0xFD8
  2443                           
  2444 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  2445 ;; Defined at:
  2446 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;Total ram usage:        0 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    1
  2467 ;; This function calls:
  2468 ;;		_EUSART1_RxDataHandler
  2469 ;; This function is called by:
  2470 ;;		_EUSART1_Initialize
  2471 ;;		_EUSART1_Receive_ISR
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text22
  2476  00054E                     __ptext22:
  2477                           	opt stack 0
  2478  00054E                     _EUSART1_DefaultErrorHandler:
  2479                           	opt stack 24
  2480                           
  2481                           ;eusart1.c: 261: EUSART1_RxDataHandler();
  2482                           
  2483                           ;incstack = 0
  2484  00054E  EC51  F002         	call	_EUSART1_RxDataHandler	;wreg free
  2485  000552  0012               	return		;funcret
  2486  000554                     __end_of_EUSART1_DefaultErrorHandler:
  2487                           	opt stack 0
  2488                           tosu	equ	0xFFF
  2489                           tosh	equ	0xFFE
  2490                           tosl	equ	0xFFD
  2491                           pclatu	equ	0xFFB
  2492                           pclath	equ	0xFFA
  2493                           tblptru	equ	0xFF8
  2494                           tblptrh	equ	0xFF7
  2495                           tblptrl	equ	0xFF6
  2496                           tablat	equ	0xFF5
  2497                           prodh	equ	0xFF4
  2498                           prodl	equ	0xFF3
  2499                           intcon	equ	0xFF2
  2500                           intcon2	equ	0xFF1
  2501                           postinc0	equ	0xFEE
  2502                           fsr0h	equ	0xFEA
  2503                           fsr0l	equ	0xFE9
  2504                           wreg	equ	0xFE8
  2505                           indf1	equ	0xFE7
  2506                           fsr1h	equ	0xFE2
  2507                           fsr1l	equ	0xFE1
  2508                           indf2	equ	0xFDF
  2509                           postinc2	equ	0xFDE
  2510                           fsr2h	equ	0xFDA
  2511                           fsr2l	equ	0xFD9
  2512                           status	equ	0xFD8
  2513                           
  2514 ;; *************** function _EUSART1_RxDataHandler *****************
  2515 ;; Defined at:
  2516 ;;		line 240 in file "mcc_generated_files/eusart1.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;Total ram usage:        0 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; This function calls:
  2537 ;;		Nothing
  2538 ;; This function is called by:
  2539 ;;		_EUSART1_Receive_ISR
  2540 ;;		_EUSART1_DefaultErrorHandler
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text23
  2545  0004A2                     __ptext23:
  2546                           	opt stack 0
  2547  0004A2                     _EUSART1_RxDataHandler:
  2548                           	opt stack 25
  2549                           
  2550                           ;eusart1.c: 242: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  2551                           
  2552                           ;incstack = 0
  2553  0004A2  502A               	movf	_eusart1RxHead,w,c	;volatile
  2554  0004A4  0D01               	mullw	1
  2555  0004A6  0E60               	movlw	low _eusart1RxBuffer
  2556  0004A8  24F3               	addwf	prodl,w,c
  2557  0004AA  6ED9               	movwf	fsr2l,c
  2558  0004AC  0E00               	movlw	high _eusart1RxBuffer
  2559  0004AE  20F4               	addwfc	prodh,w,c
  2560  0004B0  6EDA               	movwf	fsr2h,c
  2561  0004B2  CFAE FFDF          	movff	4014,indf2	;volatile
  2562  0004B6  2A2A               	incf	_eusart1RxHead,f,c	;volatile
  2563                           
  2564                           ;eusart1.c: 243: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  2565  0004B8  0E0F               	movlw	15
  2566  0004BA  642A               	cpfsgt	_eusart1RxHead,c	;volatile
  2567  0004BC  D002               	goto	i2l157
  2568                           
  2569                           ;eusart1.c: 244: {
  2570                           ;eusart1.c: 245: eusart1RxHead = 0;
  2571  0004BE  0E00               	movlw	0
  2572  0004C0  6E2A               	movwf	_eusart1RxHead,c	;volatile
  2573  0004C2                     i2l157:
  2574                           
  2575                           ;eusart1.c: 246: }
  2576                           ;eusart1.c: 247: eusart1RxCount++;
  2577  0004C2  2A28               	incf	_eusart1RxCount,f,c	;volatile
  2578  0004C4  0012               	return		;funcret
  2579  0004C6                     __end_of_EUSART1_RxDataHandler:
  2580                           	opt stack 0
  2581  0000                     tosu	equ	0xFFF
  2582                           tosh	equ	0xFFE
  2583                           tosl	equ	0xFFD
  2584                           pclatu	equ	0xFFB
  2585                           pclath	equ	0xFFA
  2586                           tblptru	equ	0xFF8
  2587                           tblptrh	equ	0xFF7
  2588                           tblptrl	equ	0xFF6
  2589                           tablat	equ	0xFF5
  2590                           prodh	equ	0xFF4
  2591                           prodl	equ	0xFF3
  2592                           intcon	equ	0xFF2
  2593                           intcon2	equ	0xFF1
  2594                           postinc0	equ	0xFEE
  2595                           fsr0h	equ	0xFEA
  2596                           fsr0l	equ	0xFE9
  2597                           wreg	equ	0xFE8
  2598                           indf1	equ	0xFE7
  2599                           fsr1h	equ	0xFE2
  2600                           fsr1l	equ	0xFE1
  2601                           indf2	equ	0xFDF
  2602                           postinc2	equ	0xFDE
  2603                           fsr2h	equ	0xFDA
  2604                           fsr2l	equ	0xFD9
  2605                           status	equ	0xFD8
  2606                           tosu	equ	0xFFF
  2607                           tosh	equ	0xFFE
  2608                           tosl	equ	0xFFD
  2609                           pclatu	equ	0xFFB
  2610                           pclath	equ	0xFFA
  2611                           tblptru	equ	0xFF8
  2612                           tblptrh	equ	0xFF7
  2613                           tblptrl	equ	0xFF6
  2614                           tablat	equ	0xFF5
  2615                           prodh	equ	0xFF4
  2616                           prodl	equ	0xFF3
  2617                           intcon	equ	0xFF2
  2618                           intcon2	equ	0xFF1
  2619                           postinc0	equ	0xFEE
  2620                           fsr0h	equ	0xFEA
  2621                           fsr0l	equ	0xFE9
  2622                           wreg	equ	0xFE8
  2623                           indf1	equ	0xFE7
  2624                           fsr1h	equ	0xFE2
  2625                           fsr1l	equ	0xFE1
  2626                           indf2	equ	0xFDF
  2627                           postinc2	equ	0xFDE
  2628                           fsr2h	equ	0xFDA
  2629                           fsr2l	equ	0xFD9
  2630                           status	equ	0xFD8
  2631                           
  2632                           	psect	text24
  2633  000000                     __ptext24:
  2634                           	opt stack 0
  2635                           tosu	equ	0xFFF
  2636                           tosh	equ	0xFFE
  2637                           tosl	equ	0xFFD
  2638                           pclatu	equ	0xFFB
  2639                           pclath	equ	0xFFA
  2640                           tblptru	equ	0xFF8
  2641                           tblptrh	equ	0xFF7
  2642                           tblptrl	equ	0xFF6
  2643                           tablat	equ	0xFF5
  2644                           prodh	equ	0xFF4
  2645                           prodl	equ	0xFF3
  2646                           intcon	equ	0xFF2
  2647                           intcon2	equ	0xFF1
  2648                           postinc0	equ	0xFEE
  2649                           fsr0h	equ	0xFEA
  2650                           fsr0l	equ	0xFE9
  2651                           wreg	equ	0xFE8
  2652                           indf1	equ	0xFE7
  2653                           fsr1h	equ	0xFE2
  2654                           fsr1l	equ	0xFE1
  2655                           indf2	equ	0xFDF
  2656                           postinc2	equ	0xFDE
  2657                           fsr2h	equ	0xFDA
  2658                           fsr2l	equ	0xFD9
  2659                           status	equ	0xFD8
  2660                           
  2661                           	psect	rparam
  2662  0000                     tosu	equ	0xFFF
  2663                           tosh	equ	0xFFE
  2664                           tosl	equ	0xFFD
  2665                           pclatu	equ	0xFFB
  2666                           pclath	equ	0xFFA
  2667                           tblptru	equ	0xFF8
  2668                           tblptrh	equ	0xFF7
  2669                           tblptrl	equ	0xFF6
  2670                           tablat	equ	0xFF5
  2671                           prodh	equ	0xFF4
  2672                           prodl	equ	0xFF3
  2673                           intcon	equ	0xFF2
  2674                           intcon2	equ	0xFF1
  2675                           postinc0	equ	0xFEE
  2676                           fsr0h	equ	0xFEA
  2677                           fsr0l	equ	0xFE9
  2678                           wreg	equ	0xFE8
  2679                           indf1	equ	0xFE7
  2680                           fsr1h	equ	0xFE2
  2681                           fsr1l	equ	0xFE1
  2682                           indf2	equ	0xFDF
  2683                           postinc2	equ	0xFDE
  2684                           fsr2h	equ	0xFDA
  2685                           fsr2l	equ	0xFD9
  2686                           status	equ	0xFD8
  2687                           
  2688                           	psect	temp
  2689  00004D                     btemp:
  2690                           	opt stack 0
  2691  00004D                     	ds	1
  2692  0000                     int$flags	set	btemp
  2693  0000                     wtemp6	set	btemp+1
  2694                           tosu	equ	0xFFF
  2695                           tosh	equ	0xFFE
  2696                           tosl	equ	0xFFD
  2697                           pclatu	equ	0xFFB
  2698                           pclath	equ	0xFFA
  2699                           tblptru	equ	0xFF8
  2700                           tblptrh	equ	0xFF7
  2701                           tblptrl	equ	0xFF6
  2702                           tablat	equ	0xFF5
  2703                           prodh	equ	0xFF4
  2704                           prodl	equ	0xFF3
  2705                           intcon	equ	0xFF2
  2706                           intcon2	equ	0xFF1
  2707                           postinc0	equ	0xFEE
  2708                           fsr0h	equ	0xFEA
  2709                           fsr0l	equ	0xFE9
  2710                           wreg	equ	0xFE8
  2711                           indf1	equ	0xFE7
  2712                           fsr1h	equ	0xFE2
  2713                           fsr1l	equ	0xFE1
  2714                           indf2	equ	0xFDF
  2715                           postinc2	equ	0xFDE
  2716                           fsr2h	equ	0xFDA
  2717                           fsr2l	equ	0xFD9
  2718                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         63
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      76
    BANK0           160     15      31
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(2) Largest target is 2
		 -> led_value(COMRAM[2]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 2
		 -> main@str(BANK0[2]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 2
		 -> main@str(BANK0[2]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 2
		 -> main@str(BANK0[2]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 2
		 -> main@str(BANK0[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_atoi
    _atoi->___wmul
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1952
                                             13 BANK0      2     2      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
                               _atoi
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     2      4     289
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 7     5      2     935
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     605
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     605
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0       0
                                              0 COMRAM    18    18      0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _atoi
     ___wmul
     _isdigit
   _strcpy

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      F      1F       5       19.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      4C       1       80.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6B      12        0.0%
DATA                 0      0      6B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Aug 18 22:47:30 2019

                      _eusart1TxBufferRemaining 004C                                               _i 0023  
                                            l31 025E                                              l34 028E  
                           ___wmul@multiplicand 0072                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                     __CFG_LVP$ON 000000  
                                           l131 03AA                                             l129 036E  
                                           l440 0174                                             l441 0136  
                                           l434 00E2                                             l443 01A8  
                                           l435 00DC                                             l437 0124  
                                           l615 04E0                                             l838 040A  
                                           l839 0400                                    __CFG_CPB$OFF 000000  
                                  __CFG_CPD$OFF 000000                                             u820 02A4  
                                           u680 0512                                             u837 02D8  
                                           _val 0021                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1514 027E  
                                          l1524 02A4                                            l1492 0170  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _LATD 000F8C  
                                          _LATE 000F8D                                            _WPUB 000F61  
                                          _atoi 00DA                                            _main 0256  
                                 ?_EUSART1_Read 0030                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          fsr2l 000FD9                                            btemp 004D  
                                 __CFG_BORV$190 000000                                            prodh 000FF4  
                                          prodl 000FF3                                            start 00D6  
                                 __CFG_IESO$OFF 000000                                    ___param_bank 000000  
                __size_of_OSCILLATOR_Initialize 000E                   __end_of_OSCILLATOR_Initialize 0508  
                         _eusart1RxStatusBuffer 0001                                           ?_atoi 0076  
                                         ?_main 0030                                  __CFG_DEBUG$OFF 000000  
                                         i2l203 006C                                           i2l152 0250  
                                         i2l144 0450                                           i2l145 044C  
                                         i2l157 04C2                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 0426                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                  __CFG_EBTRB$OFF 000000  
                               __end_of_isdigit 04E8                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@a 007B                                           atoi@s 0076  
                                         pclath 000FFA                                           tablat 000FF5  
                                ??_EUSART1_Read 0042                                           status 000FD8  
                                         wtemp6 004E                                  __CFG_HFOFST$ON 000000  
    __end_of_EUSART1_DefaultFramingErrorHandler 055A     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0030             ?_EUSART1_DefaultFramingErrorHandler 0030  
            _EUSART1_DefaultFramingErrorHandler 0558                                  __CFG_PBADEN$ON 000000  
                               __initialization 047C                                    __end_of_atoi 01B2  
                    __end_of_EUSART1_Initialize 0368                                    __end_of_main 02EA  
                   ?_INTERRUPT_InterruptManager 0030                                          ??_atoi 0078  
                                        ??_main 0042                                   __activetblptr 000002  
                         ?_EUSART1_Transmit_ISR 0030                                          _ANSELA 000F38  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _ANSELD 000F3B                                          _ANSELE 000F3C  
                  __size_of_EUSART1_is_rx_ready 000E                                  __CFG_WDTEN$OFF 000000  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                __CFG_XINST$OFF 000000                                          ___wmul 0454  
                                __CFG_STVREN$ON 000000                        ?_EUSART1_SetErrorHandler 0070  
                                        clear_0 0482                                          clear_1 048E  
                                        _rxData 002D                ??_EUSART1_SetOverrunErrorHandler 0042  
               ?_EUSART1_SetOverrunErrorHandler 0070                                          _status 0025  
                                        _strcpy 03F6                                       ??_isdigit 0070  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                 _eusart1RxBuffer 0060  
                 __size_of_INTERRUPT_Initialize 0004                                 _eusart1TxBuffer 0011  
                             _SYSTEM_Initialize 04E8                                      __accesstop 0060  
                       __end_of__initialization 0494                              ?_SYSTEM_Initialize 0030  
                                 ___rparam_used 000001                  __size_of_EUSART1_RxDataHandler 0024  
                 __end_of_EUSART1_RxDataHandler 04C6                                  __pcstackCOMRAM 0030  
                           ??_SYSTEM_Initialize 0042                            __end_of_EUSART1_Read 03B4  
                        ??_EUSART1_Transmit_ISR 0030                     __end_of_EUSART1_Receive_ISR 0256  
                     __end_of_SYSTEM_Initialize 04FA                                   _eusart1RxHead 002A  
                                 _eusart1TxHead 002C                                   _eusart1RxTail 0029  
                                    __pbssBANK0 0060                                   _eusart1TxTail 002B  
             _EUSART1_TxDefaultInterruptHandler 004A                 ??_EUSART1_SetRxInterruptHandler 0042  
                               __CFG_PLLCFG$OFF 000000                                      __pnvCOMRAM 0042  
               __end_of_EUSART1_SetErrorHandler 0548                              __CFG_CCP2MX$PORTC1 000000  
                                       ?___wmul 0070                              __CFG_CCP3MX$PORTB5 000000  
                                       ?_strcpy 0070          __end_of_EUSART1_SetFramingErrorHandler 053E  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 0534  
                  ?_EUSART1_DefaultErrorHandler 0030                                         _OSCCON2 000FD2  
                                       i2u50_48 01E0                                         i2u50_49 01F4  
                                       i2u52_48 020E                                         i2u52_49 0222  
                                       _OSCTUNE 000F9B                                         i2u54_48 023C  
                                       i2u62_48 0060                                         i2u65_48 0076  
                                       i2u65_49 008A                                         _SPBRGH1 000FB0  
                               __CFG_PWRTEN$OFF 000000                                         __Hparam 0000  
                                       __Lparam 0000                                 __size_of___wmul 0028  
                           _EUSART1_is_rx_ready 0508                                         __pcinit 047C  
                                       __ramtop 1000                                         __ptext0 0256  
                                       __ptext1 03F6                                         __ptext2 00DA  
                                       __ptext3 04C6                                         __ptext4 0454  
                                       __ptext5 04E8                                         __ptext6 03B4  
                                       __ptext7 04FA                                         __ptext8 0554  
                                       __ptext9 02EA                                 __size_of_strcpy 0030  
                         _OSCILLATOR_Initialize 04FA                                         _isdigit 04C6  
                            _EUSART1_Initialize 02EA                        ??_PIN_MANAGER_Initialize 0042  
                 ??_EUSART1_DefaultErrorHandler 0030                      __size_of_SYSTEM_Initialize 0012  
                                       main@str 007D                            end_of_initialization 0494  
                          ?_EUSART1_is_rx_ready 0030                             ?_EUSART1_Initialize 0030  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 0044  
         __end_of_EUSART1_SetRxInterruptHandler 052A          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 0520                                         postinc0 000FEE  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 004C  
                          ??_EUSART1_Initialize 0042                __size_of_EUSART1_SetErrorHandler 000A  
                         ??_EUSART1_is_rx_ready 0042                                    _EUSART1_Read 0368  
          __size_of_EUSART1_DefaultErrorHandler 0006                    __end_of_INTERRUPT_Initialize 0558  
                                __end_of___wmul 047C                          ?_OSCILLATOR_Initialize 0030  
                                __end_of_strcpy 0426                             start_initialization 047C  
               __size_of_PIN_MANAGER_Initialize 0042   EUSART1_SetRxInterruptHandler@interruptHandler 0070  
 EUSART1_SetTxInterruptHandler@interruptHandler 0070                                        ??___wmul 0042  
                         _EUSART1_RxDataHandler 04A2                  ?_EUSART1_SetRxInterruptHandler 0070  
                                      ??_strcpy 0042                                  _eusart1RxCount 0028  
                                   __pbssCOMRAM 0001               _EUSART1_RxDefaultInterruptHandler 0048  
                 __size_of_EUSART1_Transmit_ISR 002E                                   __pcstackBANK0 0070  
               ??_EUSART1_SetTxInterruptHandler 0042                ??_EUSART1_SetFramingErrorHandler 0042  
               ?_EUSART1_SetFramingErrorHandler 0070                    __size_of_EUSART1_Receive_ISR 00A4  
                        _PIN_MANAGER_Initialize 03B4                                       __pintcode 0008  
                  ??_INTERRUPT_InterruptManager 0030                                __CFG_PRICLKEN$ON 000000  
                                     _led_value 002E                                        _BAUDCON1 000FB8  
    __end_of_EUSART1_DefaultOverrunErrorHandler 054E     __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
          ??_EUSART1_DefaultOverrunErrorHandler 0030             ?_EUSART1_DefaultOverrunErrorHandler 0030  
            _EUSART1_DefaultOverrunErrorHandler 0548                                        ?_isdigit 0030  
                          _EUSART1_ErrorHandler 0042                         _EUSART1_SetErrorHandler 053E  
                          _INTERRUPT_Initialize 0554                                  ___wmul@product 0074  
       EUSART1_SetErrorHandler@interruptHandler 0070                                        _PIE1bits 000F9D  
           __size_of_INTERRUPT_InterruptManager 00CE                                        _PIR1bits 000F9E  
                        ?_EUSART1_RxDataHandler 0030                                        _RCONbits 000FD0  
                              __CFG_WDTPS$32768 000000                               ___wmul@multiplier 0070  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0030  
                         EUSART1_Read@readValue 0070           __end_of_EUSART1_SetTxInterruptHandler 0520  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 0516  
                                      __Hrparam 0000                                        __Lrparam 0000  
                            __CFG_BOREN$SBORDIS 000000                               __CFG_P2BMX$PORTD2 000000  
                       ??_OSCILLATOR_Initialize 0042                     __size_of_EUSART1_Initialize 007E  
                                   _isdigit$926 0071                       ??_EUSART1_SetErrorHandler 0042  
           __end_of_EUSART1_DefaultErrorHandler 0554                     _EUSART1_DefaultErrorHandler 054E  
                   __end_of_EUSART1_is_rx_ready 0516                                __size_of_isdigit 0022  
                                      __ptext10 0516                                        __ptext11 0520  
                                      __ptext20 0548                                        __ptext12 052A  
                                      __ptext21 0558                                        __ptext13 0534  
                                      __ptext22 054E                                        __ptext14 053E  
                                      __ptext23 04A2                                        __ptext15 0508  
                                      __ptext24 0000                                        __ptext16 0368  
                                      __ptext18 0426                                        __ptext19 01B2  
                                    strcpy@from 0072                                   __size_of_atoi 00D8  
                                 __size_of_main 0094  EUSART1_SetOverrunErrorHandler@interruptHandler 0070  
                                      int$flags 004D                                        atoi@sign 007A  
            __end_of_INTERRUPT_InterruptManager 00D6                      _INTERRUPT_InterruptManager 0008  
                   _EUSART1_FramingErrorHandler 0046                             _EUSART1_Receive_ISR 01B2  
                                    _INTCONbits 000FF2                                        isdigit@c 0072  
                        ??_INTERRUPT_Initialize 0042                                        intlevel2 0000  
                          ?_EUSART1_Receive_ISR 0030                         ?_PIN_MANAGER_Initialize 0030  
        __end_of_EUSART1_SetOverrunErrorHandler 0534         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 052A                                      _RCSTA1bits 000FAB  
                  __end_of_EUSART1_Transmit_ISR 0454  EUSART1_SetFramingErrorHandler@interruptHandler 0070  
                ?_EUSART1_SetTxInterruptHandler 0070                              _eusart1RxLastError 0027  
                                      strcpy@cp 0074                                        strcpy@to 0070  
                             __CFG_T3CMX$PORTC0 000000                           ??_EUSART1_Receive_ISR 0030  
                __end_of_PIN_MANAGER_Initialize 03F6                               __CFG_FOSC$INTIO67 000000  
                       ??_EUSART1_RxDataHandler 0030  
