

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jul 26 11:01:52 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           ; Version 1.45
    28                           ; Generated 16/11/2017 GMT
    29                           ; 
    30                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F46K22 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	idataCOMRAM
    63  00025A                     __pidataCOMRAM:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _a
    67  00025A  00FF               	dw	255
    68                           
    69                           	psect	nvCOMRAM
    70  00001B                     __pnvCOMRAM:
    71                           	opt stack 0
    72  00001B                     _TMR0_InterruptHandler:
    73                           	opt stack 0
    74  00001B                     	ds	2
    75  00001D                     _timer0ReloadVal:
    76                           	opt stack 0
    77  00001D                     	ds	1
    78  0000                     _ANSELA	set	3896
    79  0000                     _ANSELE	set	3900
    80  0000                     _ANSELB	set	3897
    81  0000                     _ANSELC	set	3898
    82  0000                     _ANSELD	set	3899
    83  0000                     _INTCON2bits	set	4081
    84  0000                     _WPUB	set	3937
    85  0000                     _TRISD	set	3989
    86  0000                     _TRISC	set	3988
    87  0000                     _TRISB	set	3987
    88  0000                     _TRISA	set	3986
    89  0000                     _TRISE	set	3990
    90  0000                     _LATC	set	3979
    91  0000                     _LATB	set	3978
    92  0000                     _LATA	set	3977
    93  0000                     _LATD	set	3980
    94  0000                     _LATE	set	3981
    95  0000                     _OSCTUNE	set	3995
    96  0000                     _OSCCON2	set	4050
    97  0000                     _OSCCON	set	4051
    98  0000                     _RCONbits	set	4048
    99  0000                     _T0CONbits	set	4053
   100  0000                     _T0CON	set	4053
   101  0000                     _INTCONbits	set	4082
   102  0000                     _TMR0L	set	4054
   103  0000                     _TMR0H	set	4055
   104                           
   105                           ; #config settings
   106  0000                     
   107                           	psect	cinit
   108  0001D8                     __pcinit:
   109                           	opt stack 0
   110  0001D8                     start_initialization:
   111                           	opt stack 0
   112  0001D8                     __initialization:
   113                           	opt stack 0
   114                           
   115                           ; Initialize objects allocated to COMRAM (2 bytes)
   116                           ; load TBLPTR registers with __pidataCOMRAM
   117  0001D8  0E5A               	movlw	low __pidataCOMRAM
   118  0001DA  6EF6               	movwf	tblptrl,c
   119  0001DC  0E02               	movlw	high __pidataCOMRAM
   120  0001DE  6EF7               	movwf	tblptrh,c
   121  0001E0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   122  0001E2  6EF8               	movwf	tblptru,c
   123  0001E4  0009               	tblrd		*+	;fetch initializer
   124  0001E6  CFF5 F01E          	movff	tablat,__pdataCOMRAM
   125  0001EA  0009               	tblrd		*+	;fetch initializer
   126  0001EC  CFF5 F01F          	movff	tablat,__pdataCOMRAM+1
   127                           
   128                           ; Clear objects allocated to COMRAM (6 bytes)
   129  0001F0  6A1A               	clrf	(__pbssCOMRAM+5)& (0+255),c
   130  0001F2  6A19               	clrf	(__pbssCOMRAM+4)& (0+255),c
   131  0001F4  6A18               	clrf	(__pbssCOMRAM+3)& (0+255),c
   132  0001F6  6A17               	clrf	(__pbssCOMRAM+2)& (0+255),c
   133  0001F8  6A16               	clrf	(__pbssCOMRAM+1)& (0+255),c
   134  0001FA  6A15               	clrf	__pbssCOMRAM& (0+255),c
   135  0001FC                     end_of_initialization:
   136                           	opt stack 0
   137  0001FC                     __end_of__initialization:
   138                           	opt stack 0
   139  0001FC  9020               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   140  0001FE  9220               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   141  000200  0E00               	movlw	low (__Lmediumconst shr (0+16))
   142  000202  6EF8               	movwf	tblptru,c
   143  000204  0100               	movlb	0
   144  000206  EFCE  F000         	goto	_main	;jump to C main() function
   145                           tblptru	equ	0xFF8
   146                           tblptrh	equ	0xFF7
   147                           tblptrl	equ	0xFF6
   148                           tablat	equ	0xFF5
   149                           
   150                           	psect	bssCOMRAM
   151  000015                     __pbssCOMRAM:
   152                           	opt stack 0
   153  000015                     _d:
   154                           	opt stack 0
   155  000015                     	ds	2
   156  000017                     _c:
   157                           	opt stack 0
   158  000017                     	ds	2
   159  000019                     _e:
   160                           	opt stack 0
   161  000019                     	ds	2
   162                           tblptru	equ	0xFF8
   163                           tblptrh	equ	0xFF7
   164                           tblptrl	equ	0xFF6
   165                           tablat	equ	0xFF5
   166                           
   167                           	psect	dataCOMRAM
   168  00001E                     __pdataCOMRAM:
   169                           	opt stack 0
   170  00001E                     _a:
   171                           	opt stack 0
   172  00001E                     	ds	2
   173                           tblptru	equ	0xFF8
   174                           tblptrh	equ	0xFF7
   175                           tblptrl	equ	0xFF6
   176                           tablat	equ	0xFF5
   177                           
   178                           	psect	cstackCOMRAM
   179  000001                     __pcstackCOMRAM:
   180                           	opt stack 0
   181  000001                     ??_INTERRUPT_InterruptManager:
   182  000001                     
   183                           ; 1 bytes @ 0x0
   184  000001                     	ds	18
   185  000013                     ??_flash:
   186  000013                     TMR0_SetInterruptHandler@InterruptHandler:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x12
   190  000013                     	ds	2
   191  000015                     tblptru	equ	0xFF8
   192                           tblptrh	equ	0xFF7
   193                           tblptrl	equ	0xFF6
   194                           tablat	equ	0xFF5
   195                           
   196                           ; 1 bytes @ 0x14
   197 ;;
   198 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   199 ;;
   200 ;; *************** function _main *****************
   201 ;; Defined at:
   202 ;;		line 95 in file "main.c"
   203 ;; Parameters:    Size  Location     Type
   204 ;;		None
   205 ;; Auto vars:     Size  Location     Type
   206 ;;		None
   207 ;; Return value:  Size  Location     Type
   208 ;;                  1    wreg      void 
   209 ;; Registers used:
   210 ;;		wreg, status,2, status,0, cstack
   211 ;; Tracked objects:
   212 ;;		On entry : 0/0
   213 ;;		On exit  : 0/0
   214 ;;		Unchanged: 0/0
   215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   220 ;;Total ram usage:        0 bytes
   221 ;; Hardware stack levels required when called:    6
   222 ;; This function calls:
   223 ;;		_SYSTEM_Initialize
   224 ;;		_flash
   225 ;; This function is called by:
   226 ;;		Startup code after reset
   227 ;; This function uses a non-reentrant model
   228 ;;
   229                           
   230                           	psect	text0
   231  00019C                     __ptext0:
   232                           	opt stack 0
   233  00019C                     _main:
   234                           	opt stack 25
   235                           
   236                           ;main.c: 98: SYSTEM_Initialize();
   237                           
   238                           ;incstack = 0
   239  00019C  EC16  F001         	call	_SYSTEM_Initialize	;wreg free
   240                           
   241                           ;main.c: 105: (INTCONbits.GIE = 1);
   242  0001A0  8EF2               	bsf	intcon,7,c	;volatile
   243                           
   244                           ;main.c: 111: (INTCONbits.PEIE = 1);
   245  0001A2  8CF2               	bsf	intcon,6,c	;volatile
   246  0001A4                     
   247                           ;main.c: 117: {
   248                           ;main.c: 119: if(d==1)
   249  0001A4  0415               	decf	_d,w,c
   250  0001A6  1016               	iorwf	_d+1,w,c
   251  0001A8  A4D8               	btfss	status,2,c
   252  0001AA  D7FC               	goto	l155
   253                           
   254                           ;main.c: 120: {
   255                           ;main.c: 121: if(e==9)
   256  0001AC  0E09               	movlw	9
   257  0001AE  1819               	xorwf	_e,w,c
   258  0001B0  101A               	iorwf	_e+1,w,c
   259  0001B2  A4D8               	btfss	status,2,c
   260  0001B4  D004               	goto	l157
   261                           
   262                           ;main.c: 122: {
   263                           ;main.c: 123: e=1;
   264  0001B6  0E00               	movlw	0
   265  0001B8  6E1A               	movwf	_e+1,c
   266  0001BA  0E01               	movlw	1
   267  0001BC  6E19               	movwf	_e,c
   268  0001BE                     l157:
   269                           
   270                           ;main.c: 124: }
   271                           ;main.c: 125: flash();
   272  0001BE  EC56  F000         	call	_flash	;wreg free
   273                           
   274                           ;main.c: 126: e=e+1;
   275  0001C2  0E01               	movlw	1
   276  0001C4  2419               	addwf	_e,w,c
   277  0001C6  6E19               	movwf	_e,c
   278  0001C8  0E00               	movlw	0
   279  0001CA  201A               	addwfc	_e+1,w,c
   280  0001CC  6E1A               	movwf	_e+1,c
   281                           
   282                           ;main.c: 128: d=0;
   283  0001CE  0E00               	movlw	0
   284  0001D0  6E16               	movwf	_d+1,c
   285  0001D2  0E00               	movlw	0
   286  0001D4  6E15               	movwf	_d,c
   287  0001D6  D7E6               	goto	l155
   288  0001D8                     __end_of_main:
   289                           	opt stack 0
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           intcon	equ	0xFF2
   295                           status	equ	0xFD8
   296                           
   297 ;; *************** function _flash *****************
   298 ;; Defined at:
   299 ;;		line 77 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2, status,0
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   315 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   316 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   317 ;;Total ram usage:        2 bytes
   318 ;; Hardware stack levels used:    1
   319 ;; Hardware stack levels required when called:    3
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text1
   328  0000AC                     __ptext1:
   329                           	opt stack 0
   330  0000AC                     _flash:
   331                           	opt stack 27
   332                           
   333                           ;main.c: 80: if(e==1)
   334                           
   335                           ;incstack = 0
   336  0000AC  0419               	decf	_e,w,c
   337  0000AE  101A               	iorwf	_e+1,w,c
   338  0000B0  A4D8               	btfss	status,2,c
   339  0000B2  D012               	goto	l148
   340                           
   341                           ;main.c: 81: {
   342                           ;main.c: 82: a=a<<1;
   343  0000B4  90D8               	bcf	status,0,c
   344  0000B6  341E               	rlcf	_a,w,c
   345  0000B8  6E1E               	movwf	_a,c
   346  0000BA  341F               	rlcf	_a+1,w,c
   347  0000BC  6E1F               	movwf	_a+1,c
   348                           
   349                           ;main.c: 83: LATA=0x00|0xFF<<e;
   350  0000BE  C019  F013         	movff	_e,??_flash
   351  0000C2  0EFF               	movlw	255
   352  0000C4  6E14               	movwf	(??_flash+1)& (0+255),c
   353  0000C6  2A13               	incf	??_flash,f,c
   354  0000C8  D002               	goto	u54
   355  0000CA                     u55:
   356  0000CA  90D8               	bcf	status,0,c
   357  0000CC  3614               	rlcf	??_flash+1,f,c
   358  0000CE                     u54:
   359  0000CE  2E13               	decfsz	??_flash,f,c
   360  0000D0  D7FC               	goto	u55
   361  0000D2  5014               	movf	??_flash+1,w,c
   362  0000D4  6E89               	movwf	3977,c	;volatile
   363                           
   364                           ;main.c: 84: }
   365  0000D6  0012               	return	
   366  0000D8                     l148:
   367                           
   368                           ;main.c: 85: else
   369                           ;main.c: 86: {
   370                           ;main.c: 87: a=(a<<1)|0x01;
   371  0000D8  0E01               	movlw	1
   372  0000DA  C01E  F013         	movff	_a,??_flash
   373  0000DE  C01F  F014         	movff	_a+1,??_flash+1
   374  0000E2  90D8               	bcf	status,0,c
   375  0000E4  3613               	rlcf	??_flash,f,c
   376  0000E6  3614               	rlcf	??_flash+1,f,c
   377  0000E8  1013               	iorwf	??_flash,w,c
   378  0000EA  6E1E               	movwf	_a,c
   379  0000EC  5014               	movf	??_flash+1,w,c
   380  0000EE  6E1F               	movwf	_a+1,c
   381                           
   382                           ;main.c: 88: LATA=(0x00|0xFF<<e)|a;
   383  0000F0  C019  F013         	movff	_e,??_flash
   384  0000F4  0EFF               	movlw	255
   385  0000F6  6E14               	movwf	(??_flash+1)& (0+255),c
   386  0000F8  2A13               	incf	??_flash,f,c
   387  0000FA  D002               	goto	u64
   388  0000FC                     u65:
   389  0000FC  90D8               	bcf	status,0,c
   390  0000FE  3614               	rlcf	??_flash+1,f,c
   391  000100                     u64:
   392  000100  2E13               	decfsz	??_flash,f,c
   393  000102  D7FC               	goto	u65
   394  000104  5014               	movf	??_flash+1,w,c
   395  000106  101E               	iorwf	_a,w,c
   396  000108  6E89               	movwf	3977,c	;volatile
   397  00010A  0012               	return	
   398  00010C                     __end_of_flash:
   399                           	opt stack 0
   400                           tblptru	equ	0xFF8
   401                           tblptrh	equ	0xFF7
   402                           tblptrl	equ	0xFF6
   403                           tablat	equ	0xFF5
   404                           intcon	equ	0xFF2
   405                           status	equ	0xFD8
   406                           
   407 ;; *************** function _SYSTEM_Initialize *****************
   408 ;; Defined at:
   409 ;;		line 50 in file "mcc_generated_files/mcc.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, status,2, status,0, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   427 ;;Total ram usage:        0 bytes
   428 ;; Hardware stack levels used:    1
   429 ;; Hardware stack levels required when called:    5
   430 ;; This function calls:
   431 ;;		_INTERRUPT_Initialize
   432 ;;		_OSCILLATOR_Initialize
   433 ;;		_PIN_MANAGER_Initialize
   434 ;;		_TMR0_Initialize
   435 ;; This function is called by:
   436 ;;		_main
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	text2
   441  00022C                     __ptext2:
   442                           	opt stack 0
   443  00022C                     _SYSTEM_Initialize:
   444                           	opt stack 25
   445                           
   446                           ;mcc.c: 53: INTERRUPT_Initialize();
   447                           
   448                           ;incstack = 0
   449  00022C  EC2B  F001         	call	_INTERRUPT_Initialize	;wreg free
   450                           
   451                           ;mcc.c: 54: PIN_MANAGER_Initialize();
   452  000230  ECAF  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   453                           
   454                           ;mcc.c: 55: OSCILLATOR_Initialize();
   455  000234  EC1F  F001         	call	_OSCILLATOR_Initialize	;wreg free
   456                           
   457                           ;mcc.c: 56: TMR0_Initialize();
   458  000238  EC05  F001         	call	_TMR0_Initialize	;wreg free
   459  00023C  0012               	return		;funcret
   460  00023E                     __end_of_SYSTEM_Initialize:
   461                           	opt stack 0
   462                           tblptru	equ	0xFF8
   463                           tblptrh	equ	0xFF7
   464                           tblptrl	equ	0xFF6
   465                           tablat	equ	0xFF5
   466                           intcon	equ	0xFF2
   467                           status	equ	0xFD8
   468                           
   469 ;; *************** function _TMR0_Initialize *****************
   470 ;; Defined at:
   471 ;;		line 67 in file "mcc_generated_files/tmr0.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, status,2, status,0, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;Total ram usage:        0 bytes
   490 ;; Hardware stack levels used:    1
   491 ;; Hardware stack levels required when called:    4
   492 ;; This function calls:
   493 ;;		_TMR0_SetInterruptHandler
   494 ;; This function is called by:
   495 ;;		_SYSTEM_Initialize
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           	psect	text3
   500  00020A                     __ptext3:
   501                           	opt stack 0
   502  00020A                     _TMR0_Initialize:
   503                           	opt stack 25
   504                           
   505                           ;tmr0.c: 72: TMR0H = 0x00;
   506                           
   507                           ;incstack = 0
   508  00020A  0E00               	movlw	0
   509  00020C  6ED7               	movwf	4055,c	;volatile
   510                           
   511                           ;tmr0.c: 75: TMR0L = 0xC2;
   512  00020E  0EC2               	movlw	194
   513  000210  6ED6               	movwf	4054,c	;volatile
   514                           
   515                           ;tmr0.c: 79: timer0ReloadVal = 194;
   516  000212  0EC2               	movlw	194
   517  000214  6E1D               	movwf	_timer0ReloadVal,c	;volatile
   518                           
   519                           ;tmr0.c: 82: INTCONbits.TMR0IF = 0;
   520  000216  94F2               	bcf	intcon,2,c	;volatile
   521                           
   522                           ;tmr0.c: 85: INTCONbits.TMR0IE = 1;
   523  000218  8AF2               	bsf	intcon,5,c	;volatile
   524                           
   525                           ;tmr0.c: 88: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
   526  00021A  0E5C               	movlw	low _TMR0_DefaultInterruptHandler
   527  00021C  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
   528  00021E  0E02               	movlw	high _TMR0_DefaultInterruptHandler
   529  000220  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
   530  000222  EC26  F001         	call	_TMR0_SetInterruptHandler	;wreg free
   531                           
   532                           ;tmr0.c: 91: T0CON = 0xD2;
   533  000226  0ED2               	movlw	210
   534  000228  6ED5               	movwf	4053,c	;volatile
   535  00022A  0012               	return		;funcret
   536  00022C                     __end_of_TMR0_Initialize:
   537                           	opt stack 0
   538                           tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           intcon	equ	0xFF2
   543                           status	equ	0xFD8
   544                           
   545 ;; *************** function _TMR0_SetInterruptHandler *****************
   546 ;; Defined at:
   547 ;;		line 132 in file "mcc_generated_files/tmr0.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
   550 ;;		 -> TMR0_DefaultInterruptHandler(1), 
   551 ;; Auto vars:     Size  Location     Type
   552 ;;		None
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, status,2, status,0
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;Total ram usage:        2 bytes
   567 ;; Hardware stack levels used:    1
   568 ;; Hardware stack levels required when called:    3
   569 ;; This function calls:
   570 ;;		Nothing
   571 ;; This function is called by:
   572 ;;		_TMR0_Initialize
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           	psect	text4
   577  00024C                     __ptext4:
   578                           	opt stack 0
   579  00024C                     _TMR0_SetInterruptHandler:
   580                           	opt stack 25
   581                           
   582                           ;tmr0.c: 133: TMR0_InterruptHandler = InterruptHandler;
   583                           
   584                           ;incstack = 0
   585  00024C  C013  F01B         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
   586  000250  C014  F01C         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
   587  000254  0012               	return		;funcret
   588  000256                     __end_of_TMR0_SetInterruptHandler:
   589                           	opt stack 0
   590                           tblptru	equ	0xFF8
   591                           tblptrh	equ	0xFF7
   592                           tblptrl	equ	0xFF6
   593                           tablat	equ	0xFF5
   594                           intcon	equ	0xFF2
   595                           status	equ	0xFD8
   596                           
   597 ;; *************** function _PIN_MANAGER_Initialize *****************
   598 ;; Defined at:
   599 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, status,2
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;Total ram usage:        0 bytes
   618 ;; Hardware stack levels used:    1
   619 ;; Hardware stack levels required when called:    3
   620 ;; This function calls:
   621 ;;		Nothing
   622 ;; This function is called by:
   623 ;;		_SYSTEM_Initialize
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text5
   628  00015E                     __ptext5:
   629                           	opt stack 0
   630  00015E                     _PIN_MANAGER_Initialize:
   631                           	opt stack 26
   632                           
   633                           ;pin_manager.c: 60: LATE = 0x00;
   634                           
   635                           ;incstack = 0
   636  00015E  0E00               	movlw	0
   637  000160  6E8D               	movwf	3981,c	;volatile
   638                           
   639                           ;pin_manager.c: 61: LATD = 0x00;
   640  000162  0E00               	movlw	0
   641  000164  6E8C               	movwf	3980,c	;volatile
   642                           
   643                           ;pin_manager.c: 62: LATA = 0x00;
   644  000166  0E00               	movlw	0
   645  000168  6E89               	movwf	3977,c	;volatile
   646                           
   647                           ;pin_manager.c: 63: LATB = 0x00;
   648  00016A  0E00               	movlw	0
   649  00016C  6E8A               	movwf	3978,c	;volatile
   650                           
   651                           ;pin_manager.c: 64: LATC = 0x00;
   652  00016E  0E00               	movlw	0
   653  000170  6E8B               	movwf	3979,c	;volatile
   654                           
   655                           ;pin_manager.c: 69: TRISE = 0x07;
   656  000172  0E07               	movlw	7
   657  000174  6E96               	movwf	3990,c	;volatile
   658                           
   659                           ;pin_manager.c: 70: TRISA = 0x00;
   660  000176  0E00               	movlw	0
   661  000178  6E92               	movwf	3986,c	;volatile
   662                           
   663                           ;pin_manager.c: 71: TRISB = 0xFF;
   664  00017A  6893               	setf	3987,c	;volatile
   665                           
   666                           ;pin_manager.c: 72: TRISC = 0xFF;
   667  00017C  6894               	setf	3988,c	;volatile
   668                           
   669                           ;pin_manager.c: 73: TRISD = 0xFF;
   670  00017E  6895               	setf	3989,c	;volatile
   671                           
   672                           ;pin_manager.c: 78: ANSELD = 0xFF;
   673  000180  010F               	movlb	15	; () banked
   674  000182  693B               	setf	59,b	;volatile
   675                           
   676                           ;pin_manager.c: 79: ANSELC = 0xFC;
   677  000184  0EFC               	movlw	252
   678  000186  6F3A               	movwf	58,b	;volatile
   679                           
   680                           ;pin_manager.c: 80: ANSELB = 0x3F;
   681  000188  0E3F               	movlw	63
   682  00018A  6F39               	movwf	57,b	;volatile
   683                           
   684                           ;pin_manager.c: 81: ANSELE = 0x07;
   685  00018C  0E07               	movlw	7
   686  00018E  6F3C               	movwf	60,b	;volatile
   687                           
   688                           ;pin_manager.c: 82: ANSELA = 0x2F;
   689  000190  0E2F               	movlw	47
   690  000192  6F38               	movwf	56,b	;volatile
   691                           
   692                           ;pin_manager.c: 87: WPUB = 0x00;
   693  000194  0E00               	movlw	0
   694  000196  6E61               	movwf	3937,c	;volatile
   695                           
   696                           ; BSR set to: 15
   697                           ;pin_manager.c: 88: INTCON2bits.nRBPU = 1;
   698  000198  8EF1               	bsf	intcon2,7,c	;volatile
   699                           
   700                           ; BSR set to: 15
   701  00019A  0012               	return		;funcret
   702  00019C                     __end_of_PIN_MANAGER_Initialize:
   703                           	opt stack 0
   704                           tblptru	equ	0xFF8
   705                           tblptrh	equ	0xFF7
   706                           tblptrl	equ	0xFF6
   707                           tablat	equ	0xFF5
   708                           intcon	equ	0xFF2
   709                           intcon2	equ	0xFF1
   710                           status	equ	0xFD8
   711                           
   712 ;; *************** function _OSCILLATOR_Initialize *****************
   713 ;; Defined at:
   714 ;;		line 59 in file "mcc_generated_files/mcc.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;		None
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, status,2
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   732 ;;Total ram usage:        0 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; Hardware stack levels required when called:    3
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		_SYSTEM_Initialize
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text6
   743  00023E                     __ptext6:
   744                           	opt stack 0
   745  00023E                     _OSCILLATOR_Initialize:
   746                           	opt stack 26
   747                           
   748                           ;mcc.c: 62: OSCCON = 0x30;
   749                           
   750                           ; BSR set to: 15
   751                           ;incstack = 0
   752  00023E  0E30               	movlw	48
   753  000240  6ED3               	movwf	4051,c	;volatile
   754                           
   755                           ;mcc.c: 64: OSCCON2 = 0x04;
   756  000242  0E04               	movlw	4
   757  000244  6ED2               	movwf	4050,c	;volatile
   758                           
   759                           ;mcc.c: 66: OSCTUNE = 0x00;
   760  000246  0E00               	movlw	0
   761  000248  6E9B               	movwf	3995,c	;volatile
   762  00024A  0012               	return		;funcret
   763  00024C                     __end_of_OSCILLATOR_Initialize:
   764                           	opt stack 0
   765                           tblptru	equ	0xFF8
   766                           tblptrh	equ	0xFF7
   767                           tblptrl	equ	0xFF6
   768                           tablat	equ	0xFF5
   769                           intcon	equ	0xFF2
   770                           intcon2	equ	0xFF1
   771                           status	equ	0xFD8
   772                           
   773 ;; *************** function _INTERRUPT_Initialize *****************
   774 ;; Defined at:
   775 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;		None
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		None
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;Total ram usage:        0 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; Hardware stack levels required when called:    3
   796 ;; This function calls:
   797 ;;		Nothing
   798 ;; This function is called by:
   799 ;;		_SYSTEM_Initialize
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text7
   804  000256                     __ptext7:
   805                           	opt stack 0
   806  000256                     _INTERRUPT_Initialize:
   807                           	opt stack 26
   808                           
   809                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
   810                           
   811                           ;incstack = 0
   812  000256  9ED0               	bcf	4048,7,c	;volatile
   813  000258  0012               	return		;funcret
   814  00025A                     __end_of_INTERRUPT_Initialize:
   815                           	opt stack 0
   816                           tblptru	equ	0xFF8
   817                           tblptrh	equ	0xFF7
   818                           tblptrl	equ	0xFF6
   819                           tablat	equ	0xFF5
   820                           intcon	equ	0xFF2
   821                           intcon2	equ	0xFF1
   822                           status	equ	0xFD8
   823                           
   824 ;; *************** function _INTERRUPT_InterruptManager *****************
   825 ;; Defined at:
   826 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0, pclath, tosl, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   842 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   843 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   844 ;;Total ram usage:       18 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    2
   847 ;; This function calls:
   848 ;;		_TMR0_ISR
   849 ;; This function is called by:
   850 ;;		Interrupt level 2
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	intcode
   855  000008                     __pintcode:
   856                           	opt stack 0
   857  000008                     _INTERRUPT_InterruptManager:
   858                           	opt stack 25
   859                           
   860                           ;incstack = 0
   861  000008  8220               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   862  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
   863  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
   864  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
   865  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
   866  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
   867  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
   868  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
   869  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
   870  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
   871  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
   872  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
   873  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
   874  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
   875  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
   876  000042  C020  F00F         	movff	btemp,??_INTERRUPT_InterruptManager+14
   877  000046  C021  F010         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
   878  00004A  C022  F011         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
   879  00004E  C023  F012         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
   880                           
   881                           ;interrupt_manager.c: 61: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
   882  000052  BAF2               	btfsc	intcon,5,c	;volatile
   883  000054  A4F2               	btfss	intcon,2,c	;volatile
   884  000056  D002               	goto	i2l56
   885                           
   886                           ;interrupt_manager.c: 62: {
   887                           ;interrupt_manager.c: 63: TMR0_ISR();
   888  000058  EC86  F000         	call	_TMR0_ISR	;wreg free
   889  00005C                     i2l56:
   890                           
   891                           ;interrupt_manager.c: 65: else
   892                           ;interrupt_manager.c: 66: {
   893  00005C  C012  F023         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
   894  000060  C011  F022         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
   895  000064  C010  F021         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
   896  000068  C00F  F020         	movff	??_INTERRUPT_InterruptManager+14,btemp
   897  00006C  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
   898  000070  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
   899  000074  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
   900  000078  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
   901  00007C  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
   902  000080  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
   903  000084  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
   904  000088  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
   905  00008C  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
   906  000090  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
   907  000094  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
   908  000098  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
   909  00009C  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
   910  0000A0  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
   911  0000A4  9220               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   912  0000A6  0011               	retfie		f
   913  0000A8                     __end_of_INTERRUPT_InterruptManager:
   914                           	opt stack 0
   915                           pclatu	equ	0xFFB
   916                           pclath	equ	0xFFA
   917                           tblptru	equ	0xFF8
   918                           tblptrh	equ	0xFF7
   919                           tblptrl	equ	0xFF6
   920                           tablat	equ	0xFF5
   921                           prodh	equ	0xFF4
   922                           prodl	equ	0xFF3
   923                           intcon	equ	0xFF2
   924                           intcon2	equ	0xFF1
   925                           fsr0h	equ	0xFEA
   926                           fsr0l	equ	0xFE9
   927                           fsr1h	equ	0xFE2
   928                           fsr1l	equ	0xFE1
   929                           fsr2h	equ	0xFDA
   930                           fsr2l	equ	0xFD9
   931                           status	equ	0xFD8
   932                           
   933 ;; *************** function _TMR0_ISR *****************
   934 ;; Defined at:
   935 ;;		line 50 in file "main.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, status,2, status,0, pclath, tosl, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;Total ram usage:        0 bytes
   954 ;; Hardware stack levels used:    1
   955 ;; Hardware stack levels required when called:    1
   956 ;; This function calls:
   957 ;;		Absolute function
   958 ;;		_TMR0_DefaultInterruptHandler
   959 ;; This function is called by:
   960 ;;		_INTERRUPT_InterruptManager
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text9
   965  00010C                     __ptext9:
   966                           	opt stack 0
   967  00010C                     _TMR0_ISR:
   968                           	opt stack 25
   969                           
   970                           ;main.c: 54: INTCONbits.TMR0IF = 0;
   971                           
   972                           ;incstack = 0
   973  00010C  94F2               	bcf	intcon,2,c	;volatile
   974                           
   975                           ;main.c: 57: TMR0L = timer0ReloadVal;
   976  00010E  C01D  FFD6         	movff	_timer0ReloadVal,4054	;volatile
   977                           
   978                           ;main.c: 59: if(TMR0_InterruptHandler)
   979  000112  501B               	movf	_TMR0_InterruptHandler,w,c
   980  000114  101C               	iorwf	_TMR0_InterruptHandler+1,w,c
   981  000116  B4D8               	btfsc	status,2,c
   982  000118  D00C               	goto	i2u2_49
   983                           
   984                           ;main.c: 60: {
   985                           ;main.c: 61: TMR0_InterruptHandler();
   986  00011A  D801               	call	i2u2_48
   987  00011C  D00A               	goto	i2u2_49
   988  00011E                     i2u2_48:
   989  00011E  0005               	push	
   990  000120  6EFA               	movwf	pclath,c
   991  000122  501B               	movf	_TMR0_InterruptHandler,w,c
   992  000124  6EFD               	movwf	tosl,c
   993  000126  501C               	movf	_TMR0_InterruptHandler+1,w,c
   994  000128  6EFE               	movwf	tosh,c
   995  00012A  50F8               	movf	tblptru,w,c
   996  00012C  6EFF               	movwf	tosu,c
   997  00012E  50FA               	movf	pclath,w,c
   998  000130  0012               	return		;indir
   999  000132                     i2u2_49:
  1000                           
  1001                           ;main.c: 62: }
  1002                           ;main.c: 63: if(c==250)
  1003  000132  0EFA               	movlw	250
  1004  000134  1817               	xorwf	_c,w,c
  1005  000136  1018               	iorwf	_c+1,w,c
  1006  000138  A4D8               	btfss	status,2,c
  1007  00013A  D00A               	goto	i2l144
  1008                           
  1009                           ;main.c: 64: {
  1010                           ;main.c: 65: c=0;
  1011  00013C  0E00               	movlw	0
  1012  00013E  6E18               	movwf	_c+1,c
  1013  000140  0E00               	movlw	0
  1014  000142  6E17               	movwf	_c,c
  1015                           
  1016                           ;main.c: 66: d=d+1;
  1017  000144  0E01               	movlw	1
  1018  000146  2415               	addwf	_d,w,c
  1019  000148  6E15               	movwf	_d,c
  1020  00014A  0E00               	movlw	0
  1021  00014C  2016               	addwfc	_d+1,w,c
  1022  00014E  6E16               	movwf	_d+1,c
  1023  000150                     i2l144:
  1024                           
  1025                           ;main.c: 67: }
  1026                           ;main.c: 68: c=c+1;
  1027  000150  0E01               	movlw	1
  1028  000152  2417               	addwf	_c,w,c
  1029  000154  6E17               	movwf	_c,c
  1030  000156  0E00               	movlw	0
  1031  000158  2018               	addwfc	_c+1,w,c
  1032  00015A  6E18               	movwf	_c+1,c
  1033  00015C  0012               	return		;funcret
  1034  00015E                     __end_of_TMR0_ISR:
  1035                           	opt stack 0
  1036                           tosu	equ	0xFFF
  1037                           tosh	equ	0xFFE
  1038                           tosl	equ	0xFFD
  1039                           pclatu	equ	0xFFB
  1040                           pclath	equ	0xFFA
  1041                           tblptru	equ	0xFF8
  1042                           tblptrh	equ	0xFF7
  1043                           tblptrl	equ	0xFF6
  1044                           tablat	equ	0xFF5
  1045                           prodh	equ	0xFF4
  1046                           prodl	equ	0xFF3
  1047                           intcon	equ	0xFF2
  1048                           intcon2	equ	0xFF1
  1049                           fsr0h	equ	0xFEA
  1050                           fsr0l	equ	0xFE9
  1051                           fsr1h	equ	0xFE2
  1052                           fsr1l	equ	0xFE1
  1053                           fsr2h	equ	0xFDA
  1054                           fsr2l	equ	0xFD9
  1055                           status	equ	0xFD8
  1056                           
  1057 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  1058 ;; Defined at:
  1059 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;		None
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;		None
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      void 
  1066 ;; Registers used:
  1067 ;;		None
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;Total ram usage:        0 bytes
  1078 ;; Hardware stack levels used:    1
  1079 ;; This function calls:
  1080 ;;		Nothing
  1081 ;; This function is called by:
  1082 ;;		_TMR0_Initialize
  1083 ;;		_TMR0_ISR
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           	psect	text10
  1088  00025C                     __ptext10:
  1089                           	opt stack 0
  1090  00025C                     _TMR0_DefaultInterruptHandler:
  1091                           	opt stack 25
  1092                           
  1093                           ;incstack = 0
  1094  00025C  0012               	return		;funcret
  1095  00025E                     __end_of_TMR0_DefaultInterruptHandler:
  1096                           	opt stack 0
  1097  0000                     tosu	equ	0xFFF
  1098                           tosh	equ	0xFFE
  1099                           tosl	equ	0xFFD
  1100                           pclatu	equ	0xFFB
  1101                           pclath	equ	0xFFA
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           prodh	equ	0xFF4
  1107                           prodl	equ	0xFF3
  1108                           intcon	equ	0xFF2
  1109                           intcon2	equ	0xFF1
  1110                           fsr0h	equ	0xFEA
  1111                           fsr0l	equ	0xFE9
  1112                           fsr1h	equ	0xFE2
  1113                           fsr1l	equ	0xFE1
  1114                           fsr2h	equ	0xFDA
  1115                           fsr2l	equ	0xFD9
  1116                           status	equ	0xFD8
  1117                           tosu	equ	0xFFF
  1118                           tosh	equ	0xFFE
  1119                           tosl	equ	0xFFD
  1120                           pclatu	equ	0xFFB
  1121                           pclath	equ	0xFFA
  1122                           tblptru	equ	0xFF8
  1123                           tblptrh	equ	0xFF7
  1124                           tblptrl	equ	0xFF6
  1125                           tablat	equ	0xFF5
  1126                           prodh	equ	0xFF4
  1127                           prodl	equ	0xFF3
  1128                           intcon	equ	0xFF2
  1129                           intcon2	equ	0xFF1
  1130                           fsr0h	equ	0xFEA
  1131                           fsr0l	equ	0xFE9
  1132                           fsr1h	equ	0xFE2
  1133                           fsr1l	equ	0xFE1
  1134                           fsr2h	equ	0xFDA
  1135                           fsr2l	equ	0xFD9
  1136                           status	equ	0xFD8
  1137                           
  1138                           	psect	text11
  1139  000000                     __ptext11:
  1140                           	opt stack 0
  1141                           tosu	equ	0xFFF
  1142                           tosh	equ	0xFFE
  1143                           tosl	equ	0xFFD
  1144                           pclatu	equ	0xFFB
  1145                           pclath	equ	0xFFA
  1146                           tblptru	equ	0xFF8
  1147                           tblptrh	equ	0xFF7
  1148                           tblptrl	equ	0xFF6
  1149                           tablat	equ	0xFF5
  1150                           prodh	equ	0xFF4
  1151                           prodl	equ	0xFF3
  1152                           intcon	equ	0xFF2
  1153                           intcon2	equ	0xFF1
  1154                           fsr0h	equ	0xFEA
  1155                           fsr0l	equ	0xFE9
  1156                           fsr1h	equ	0xFE2
  1157                           fsr1l	equ	0xFE1
  1158                           fsr2h	equ	0xFDA
  1159                           fsr2l	equ	0xFD9
  1160                           status	equ	0xFD8
  1161                           
  1162                           	psect	rparam
  1163  0000                     tosu	equ	0xFFF
  1164                           tosh	equ	0xFFE
  1165                           tosl	equ	0xFFD
  1166                           pclatu	equ	0xFFB
  1167                           pclath	equ	0xFFA
  1168                           tblptru	equ	0xFF8
  1169                           tblptrh	equ	0xFF7
  1170                           tblptrl	equ	0xFF6
  1171                           tablat	equ	0xFF5
  1172                           prodh	equ	0xFF4
  1173                           prodl	equ	0xFF3
  1174                           intcon	equ	0xFF2
  1175                           intcon2	equ	0xFF1
  1176                           fsr0h	equ	0xFEA
  1177                           fsr0l	equ	0xFE9
  1178                           fsr1h	equ	0xFE2
  1179                           fsr1l	equ	0xFE1
  1180                           fsr2h	equ	0xFDA
  1181                           fsr2l	equ	0xFD9
  1182                           status	equ	0xFD8
  1183                           
  1184                           	psect	temp
  1185  000020                     btemp:
  1186                           	opt stack 0
  1187  000020                     	ds	1
  1188  0000                     int$flags	set	btemp
  1189  0000                     wtemp6	set	btemp+1
  1190                           tosu	equ	0xFFF
  1191                           tosh	equ	0xFFE
  1192                           tosl	equ	0xFFD
  1193                           pclatu	equ	0xFFB
  1194                           pclath	equ	0xFFA
  1195                           tblptru	equ	0xFF8
  1196                           tblptrh	equ	0xFF7
  1197                           tblptrl	equ	0xFF6
  1198                           tablat	equ	0xFF5
  1199                           prodh	equ	0xFF4
  1200                           prodl	equ	0xFF3
  1201                           intcon	equ	0xFF2
  1202                           intcon2	equ	0xFF1
  1203                           fsr0h	equ	0xFEA
  1204                           fsr0l	equ	0xFE9
  1205                           fsr1h	equ	0xFE2
  1206                           fsr1l	equ	0xFE1
  1207                           fsr2h	equ	0xFDA
  1208                           fsr2l	equ	0xFD9
  1209                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         6
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      31
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_flash
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      98
                  _SYSTEM_Initialize
                              _flash
 ---------------------------------------------------------------------------------
 (1) _flash                                                2     2      0       0
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0       0
                                              0 COMRAM    18    18      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _flash

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     14      1F       1       33.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1F      12        0.0%
DATA                 0      0      1F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jul 26 11:01:52 2019

                                       _a 001E                                         _c 0017  
                                       _d 0015                                         _e 0019  
                                      u54 00CE                                        u55 00CA  
                                      u64 0100                                        u65 00FC  
                         _timer0ReloadVal 001D                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l155 01A4                                       l148 00D8  
                                     l157 01BE                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                                       tosl 000FFD  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      i2l56 005C  
                                    _WPUB 000F61                                      _main 019C  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0020                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00A8                             __CFG_IESO$OFF 000000  
                            ___param_bank 000000                   __end_of_TMR0_Initialize 022C  
          ??_TMR0_DefaultInterruptHandler 0001            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 024C                                     ?_main 0001  
                                   _T0CON 000FD5                            __CFG_DEBUG$OFF 000000  
                                   i2l144 0150                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
       __size_of_TMR0_SetInterruptHandler 000A                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
               ?_TMR0_SetInterruptHandler 0013                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_TMR0_ISR 015E  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                                   _flash 00AC                        __CFG_MCLRE$EXTMCLR 000000  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                                     wtemp6 0021  
                          __CFG_HFOFST$ON 000000                            __CFG_PBADEN$ON 000000  
                         __initialization 01D8                              __end_of_main 01D8  
             ?_INTERRUPT_InterruptManager 0001                                    ??_main 0015  
                           __activetblptr 000002                                    ?_flash 0001  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                            __CFG_WDTEN$OFF 000000  
                                  _OSCCON 000FD3                                    i2u2_48 011E  
                                  i2u2_49 0132                            __CFG_XINST$OFF 000000  
                          __CFG_STVREN$ON 000000                          ?_TMR0_Initialize 0001  
                            __pdataCOMRAM 001E                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
TMR0_SetInterruptHandler@InterruptHandler 0013             __size_of_INTERRUPT_Initialize 0004  
                       _SYSTEM_Initialize 022C                                __accesstop 0060  
                 __end_of__initialization 01FC                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 0015                                 ?_TMR0_ISR 0001  
                           __end_of_flash 010C                                   ??_flash 0013  
               __end_of_SYSTEM_Initialize 023E                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 001B                        __CFG_CCP2MX$PORTC1 000000  
        __end_of_TMR0_SetInterruptHandler 0256                                ??_TMR0_ISR 0001  
                      __CFG_CCP3MX$PORTB5 000000                                   _OSCCON2 000FD2  
                                 _OSCTUNE 000F9B                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
                                 __pcinit 01D8                                   __ramtop 1000  
                                 __ptext0 019C                                   __ptext1 00AC  
                                 __ptext2 022C                                   __ptext3 020A  
                                 __ptext4 024C                                   __ptext5 015E  
                                 __ptext6 023E                                   __ptext7 0256  
                                 __ptext9 010C                                 _T0CONbits 000FD5  
                   _OSCILLATOR_Initialize 023E                  ??_PIN_MANAGER_Initialize 0013  
              __size_of_SYSTEM_Initialize 0012                      end_of_initialization 01FC  
                           __Lmediumconst 0000                  _TMR0_SetInterruptHandler 024C  
            __end_of_INTERRUPT_Initialize 025A                             __pidataCOMRAM 025A  
                       __size_of_TMR0_ISR 0052                    ?_OSCILLATOR_Initialize 0001  
                     start_initialization 01D8                  __size_of_TMR0_Initialize 0022  
         __size_of_PIN_MANAGER_Initialize 003E                               __pbssCOMRAM 0015  
                   _TMR0_InterruptHandler 001B                    _PIN_MANAGER_Initialize 015E  
                               __pintcode 0008              ??_INTERRUPT_InterruptManager 0001  
                        __CFG_PRICLKEN$ON 000000                            __size_of_flash 0060  
                    _INTERRUPT_Initialize 0256                         ??_TMR0_Initialize 0015  
     __size_of_INTERRUPT_InterruptManager 00A0                ??_TMR0_SetInterruptHandler 0015  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _TMR0_ISR 010C                               _INTCON2bits 000FF1  
                   ?_INTERRUPT_Initialize 0001                                  __Hrparam 0000  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTD2 000000                   ??_OSCILLATOR_Initialize 0013  
                                __ptext10 025C                                  __ptext11 0000  
                           __size_of_main 003C      __end_of_TMR0_DefaultInterruptHandler 025E  
   __size_of_TMR0_DefaultInterruptHandler 0002              _TMR0_DefaultInterruptHandler 025C  
                                int$flags 0020        __end_of_INTERRUPT_InterruptManager 00A8  
              _INTERRUPT_InterruptManager 0008                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 0013                                  intlevel2 0000  
                 ?_PIN_MANAGER_Initialize 0001             ?_TMR0_DefaultInterruptHandler 0001  
                         _TMR0_Initialize 020A                         __CFG_T3CMX$PORTC0 000000  
          __end_of_PIN_MANAGER_Initialize 019C                         __CFG_FOSC$INTIO67 000000  
