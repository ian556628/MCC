

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jul 31 11:23:22 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 1.45
    34                           ; Generated 16/11/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F46K22 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  000478                     __pidataCOMRAM:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _Seg
    73  000478  C0                 	db	192
    74  000479  F9                 	db	249
    75  00047A  A4                 	db	164
    76  00047B  B0                 	db	176
    77  00047C  99                 	db	153
    78  00047D  92                 	db	146
    79  00047E  82                 	db	130
    80  00047F  F8                 	db	248
    81  000480  80                 	db	128
    82  000481  90                 	db	144
    83                           
    84                           ;initializer for _c
    85  000482  00                 	db	0
    86  000483  01                 	db	1
    87  000484  02                 	db	2
    88  000485  03                 	db	3
    89                           
    90                           ;initializer for _a
    91  000486  08                 	db	8
    92  000487  04                 	db	4
    93  000488  02                 	db	2
    94  000489  01                 	db	1
    95                           
    96                           	psect	nvCOMRAM
    97  00004A                     __pnvCOMRAM:
    98                           	opt stack 0
    99  00004A                     _TMR0_InterruptHandler:
   100                           	opt stack 0
   101  00004A                     	ds	2
   102  00004C                     _timer0ReloadVal:
   103                           	opt stack 0
   104  00004C                     	ds	1
   105  0000                     _ANSELA	set	3896
   106  0000                     _ANSELE	set	3900
   107  0000                     _ANSELB	set	3897
   108  0000                     _ANSELC	set	3898
   109  0000                     _ANSELD	set	3899
   110  0000                     _T0CONbits	set	4053
   111  0000                     _T0CON	set	4053
   112  0000                     _TMR0L	set	4054
   113  0000                     _TMR0H	set	4055
   114  0000                     _INTCON2bits	set	4081
   115  0000                     _WPUB	set	3937
   116  0000                     _TRISD	set	3989
   117  0000                     _TRISC	set	3988
   118  0000                     _TRISB	set	3987
   119  0000                     _TRISA	set	3986
   120  0000                     _TRISE	set	3990
   121  0000                     _LATC	set	3979
   122  0000                     _LATB	set	3978
   123  0000                     _LATA	set	3977
   124  0000                     _LATD	set	3980
   125  0000                     _LATE	set	3981
   126  0000                     _OSCTUNE	set	3995
   127  0000                     _OSCCON2	set	4050
   128  0000                     _OSCCON	set	4051
   129  0000                     _INTCONbits	set	4082
   130  0000                     _RCONbits	set	4048
   131  0000                     _ADCON0bits	set	4034
   132  0000                     _ADRESH	set	4036
   133  0000                     _ADRESL	set	4035
   134  0000                     _ADCON2	set	4032
   135  0000                     _ADCON1	set	4033
   136  0000                     _ADCON0	set	4034
   137                           
   138                           ; #config settings
   139  0000                     
   140                           	psect	cinit
   141  0003B0                     __pcinit:
   142                           	opt stack 0
   143  0003B0                     start_initialization:
   144                           	opt stack 0
   145  0003B0                     __initialization:
   146                           	opt stack 0
   147                           
   148                           ; Initialize objects allocated to COMRAM (18 bytes)
   149                           ; load TBLPTR registers with __pidataCOMRAM
   150  0003B0  0E78               	movlw	low __pidataCOMRAM
   151  0003B2  6EF6               	movwf	tblptrl,c
   152  0003B4  0E04               	movlw	high __pidataCOMRAM
   153  0003B6  6EF7               	movwf	tblptrh,c
   154  0003B8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   155  0003BA  6EF8               	movwf	tblptru,c
   156  0003BC  EE00  F038         	lfsr	0,__pdataCOMRAM
   157  0003C0  EE10 F012          	lfsr	1,18
   158  0003C4                     copy_data0:
   159  0003C4  0009               	tblrd		*+
   160  0003C6  CFF5 FFEE          	movff	tablat,postinc0
   161  0003CA  50E5               	movf	postdec1,w,c
   162  0003CC  50E1               	movf	fsr1l,w,c
   163  0003CE  E1FA               	bnz	copy_data0
   164                           
   165                           ; Clear objects allocated to COMRAM (26 bytes)
   166  0003D0  EE00  F01E         	lfsr	0,__pbssCOMRAM
   167  0003D4  0E1A               	movlw	26
   168  0003D6                     clear_0:
   169  0003D6  6AEE               	clrf	postinc0,c
   170  0003D8  06E8               	decf	wreg,f,c
   171  0003DA  E1FD               	bnz	clear_0
   172  0003DC                     end_of_initialization:
   173                           	opt stack 0
   174  0003DC                     __end_of__initialization:
   175                           	opt stack 0
   176  0003DC  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   177  0003DE  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   178  0003E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   179  0003E2  6EF8               	movwf	tblptru,c
   180  0003E4  0100               	movlb	0
   181  0003E6  EF56  F000         	goto	_main	;jump to C main() function
   182                           tblptru	equ	0xFF8
   183                           tblptrh	equ	0xFF7
   184                           tblptrl	equ	0xFF6
   185                           tablat	equ	0xFF5
   186                           postinc0	equ	0xFEE
   187                           wreg	equ	0xFE8
   188                           postdec1	equ	0xFE5
   189                           fsr1l	equ	0xFE1
   190                           
   191                           	psect	bssCOMRAM
   192  00001E                     __pbssCOMRAM:
   193                           	opt stack 0
   194  00001E                     _digit:
   195                           	opt stack 0
   196  00001E                     	ds	8
   197  000026                     _z:
   198                           	opt stack 0
   199  000026                     	ds	2
   200  000028                     _y:
   201                           	opt stack 0
   202  000028                     	ds	2
   203  00002A                     _x:
   204                           	opt stack 0
   205  00002A                     	ds	2
   206  00002C                     _d:
   207                           	opt stack 0
   208  00002C                     	ds	2
   209  00002E                     _j:
   210                           	opt stack 0
   211  00002E                     	ds	2
   212  000030                     _i:
   213                           	opt stack 0
   214  000030                     	ds	2
   215  000032                     _convertedValue:
   216                           	opt stack 0
   217  000032                     	ds	2
   218  000034                     _c_4:
   219                           	opt stack 0
   220  000034                     	ds	2
   221  000036                     _c_scan:
   222                           	opt stack 0
   223  000036                     	ds	2
   224                           tblptru	equ	0xFF8
   225                           tblptrh	equ	0xFF7
   226                           tblptrl	equ	0xFF6
   227                           tablat	equ	0xFF5
   228                           postinc0	equ	0xFEE
   229                           wreg	equ	0xFE8
   230                           postdec1	equ	0xFE5
   231                           fsr1l	equ	0xFE1
   232                           
   233                           	psect	dataCOMRAM
   234  000038                     __pdataCOMRAM:
   235                           	opt stack 0
   236  000038                     _Seg:
   237                           	opt stack 0
   238  000038                     	ds	10
   239  000042                     _c:
   240                           	opt stack 0
   241  000042                     	ds	4
   242  000046                     _a:
   243                           	opt stack 0
   244  000046                     	ds	4
   245                           tblptru	equ	0xFF8
   246                           tblptrh	equ	0xFF7
   247                           tblptrl	equ	0xFF6
   248                           tablat	equ	0xFF5
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           postdec1	equ	0xFE5
   252                           fsr1l	equ	0xFE1
   253                           
   254                           	psect	cstackBANK0
   255  000060                     __pcstackBANK0:
   256                           	opt stack 0
   257  000060                     ___lwmod@counter:
   258                           	opt stack 0
   259                           
   260                           ; 1 bytes @ 0x0
   261  000060                     	ds	1
   262  000061                     ??_main:
   263                           
   264                           ; 1 bytes @ 0x1
   265  000061                     	ds	2
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           tblptrl	equ	0xFF6
   269                           tablat	equ	0xFF5
   270                           postinc0	equ	0xFEE
   271                           wreg	equ	0xFE8
   272                           postdec1	equ	0xFE5
   273                           fsr1l	equ	0xFE1
   274                           
   275                           	psect	cstackCOMRAM
   276  000001                     __pcstackCOMRAM:
   277                           	opt stack 0
   278  000001                     ??_INTERRUPT_InterruptManager:
   279  000001                     
   280                           ; 1 bytes @ 0x0
   281  000001                     	ds	18
   282  000013                     ?_ADC_StartConversion:
   283                           	opt stack 0
   284  000013                     ?_ADC_GetConversionResult:
   285                           	opt stack 0
   286  000013                     ?___lwdiv:
   287                           	opt stack 0
   288  000013                     TMR0_SetInterruptHandler@InterruptHandler:
   289                           	opt stack 0
   290  000013                     ___lwdiv@dividend:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x12
   294  000013                     	ds	2
   295  000015                     ??_ADC_GetConversionResult:
   296  000015                     ___lwdiv@divisor:
   297                           	opt stack 0
   298                           
   299                           ; 2 bytes @ 0x14
   300  000015                     	ds	2
   301  000017                     ___lwdiv@quotient:
   302                           	opt stack 0
   303                           
   304                           ; 2 bytes @ 0x16
   305  000017                     	ds	2
   306  000019                     ___lwdiv@counter:
   307                           	opt stack 0
   308                           
   309                           ; 1 bytes @ 0x18
   310  000019                     	ds	1
   311  00001A                     ?___lwmod:
   312                           	opt stack 0
   313  00001A                     ___lwmod@dividend:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x19
   317  00001A                     	ds	2
   318  00001C                     ___lwmod@divisor:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0x1B
   322  00001C                     	ds	2
   323  00001E                     tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           postdec1	equ	0xFE5
   330                           fsr1l	equ	0xFE1
   331                           
   332                           ; 1 bytes @ 0x1D
   333 ;;
   334 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   335 ;;
   336 ;; *************** function _main *****************
   337 ;; Defined at:
   338 ;;		line 47 in file "main.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;		None
   343 ;; Return value:  Size  Location     Type
   344 ;;                  1    wreg      void 
   345 ;; Registers used:
   346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   347 ;; Tracked objects:
   348 ;;		On entry : 0/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   354 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   355 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   356 ;;Total ram usage:        2 bytes
   357 ;; Hardware stack levels required when called:    6
   358 ;; This function calls:
   359 ;;		_ADC_GetConversionResult
   360 ;;		_ADC_IsConversionDone
   361 ;;		_ADC_StartConversion
   362 ;;		_SYSTEM_Initialize
   363 ;;		___lwdiv
   364 ;;		___lwmod
   365 ;; This function is called by:
   366 ;;		Startup code after reset
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           	psect	text0
   371  0000AC                     __ptext0:
   372                           	opt stack 0
   373  0000AC                     _main:
   374                           	opt stack 25
   375                           
   376                           ;main.c: 50: SYSTEM_Initialize();
   377                           
   378                           ;incstack = 0
   379  0000AC  EC1C  F002         	call	_SYSTEM_Initialize	;wreg free
   380                           
   381                           ;main.c: 57: (INTCONbits.GIE = 1);
   382  0000B0  8EF2               	bsf	intcon,7,c	;volatile
   383                           
   384                           ;main.c: 63: (INTCONbits.PEIE = 1);
   385  0000B2  8CF2               	bsf	intcon,6,c	;volatile
   386  0000B4                     
   387                           ;main.c: 69: {
   388                           ;main.c: 71: if(c_4>2)
   389  0000B4  BE35               	btfsc	_c_4+1,7,c
   390  0000B6  D7FE               	goto	l219
   391  0000B8  5035               	movf	_c_4+1,w,c
   392  0000BA  E104               	bnz	u450
   393  0000BC  0E03               	movlw	3
   394  0000BE  5C34               	subwf	_c_4,w,c
   395  0000C0  A0D8               	btfss	status,0,c
   396  0000C2  D7F8               	goto	l219
   397  0000C4                     u450:
   398                           
   399                           ;main.c: 72: {
   400                           ;main.c: 73: c_4=0;
   401  0000C4  0E00               	movlw	0
   402  0000C6  6E35               	movwf	_c_4+1,c
   403  0000C8  0E00               	movlw	0
   404  0000CA  6E34               	movwf	_c_4,c
   405                           
   406                           ;main.c: 75: ADC_StartConversion(channel_AN0);
   407  0000CC  0E00               	movlw	0
   408  0000CE  6E14               	movwf	?_ADC_StartConversion+1,c
   409  0000D0  0E00               	movlw	0
   410  0000D2  6E13               	movwf	?_ADC_StartConversion,c
   411  0000D4  EC59  F002         	call	_ADC_StartConversion	;wreg free
   412  0000D8  EC4C  F002         	call	_ADC_IsConversionDone	;wreg free
   413  0000DC  0900               	iorlw	0
   414  0000DE  B4D8               	btfsc	status,2,c
   415  0000E0  D7FB               	goto	l222
   416                           
   417                           ;main.c: 77: {
   418                           ;main.c: 78: convertedValue=ADC_GetConversionResult();
   419  0000E2  EC32  F002         	call	_ADC_GetConversionResult	;wreg free
   420  0000E6  C013  F032         	movff	?_ADC_GetConversionResult,_convertedValue
   421  0000EA  C014  F033         	movff	?_ADC_GetConversionResult+1,_convertedValue+1
   422                           
   423                           ;main.c: 79: }
   424                           ;main.c: 81: digit[3] = convertedValue % 10;
   425  0000EE  C032  F01A         	movff	_convertedValue,___lwmod@dividend
   426  0000F2  C033  F01B         	movff	_convertedValue+1,___lwmod@dividend+1
   427  0000F6  0E00               	movlw	0
   428  0000F8  6E1D               	movwf	___lwmod@divisor+1,c
   429  0000FA  0E0A               	movlw	10
   430  0000FC  6E1C               	movwf	___lwmod@divisor,c
   431  0000FE  EC96  F001         	call	___lwmod	;wreg free
   432  000102  C01A  F024         	movff	?___lwmod,_digit+6
   433  000106  C01B  F025         	movff	?___lwmod+1,_digit+7
   434                           
   435                           ;main.c: 82: digit[2] = (convertedValue/10) % 10;
   436  00010A  0E00               	movlw	0
   437  00010C  6E16               	movwf	___lwdiv@divisor+1,c
   438  00010E  0E0A               	movlw	10
   439  000110  6E15               	movwf	___lwdiv@divisor,c
   440  000112  C032  F013         	movff	_convertedValue,___lwdiv@dividend
   441  000116  C033  F014         	movff	_convertedValue+1,___lwdiv@dividend+1
   442  00011A  EC6D  F001         	call	___lwdiv	;wreg free
   443  00011E  C013  F01A         	movff	?___lwdiv,___lwmod@dividend
   444  000122  C014  F01B         	movff	?___lwdiv+1,___lwmod@dividend+1
   445  000126  0E00               	movlw	0
   446  000128  6E1D               	movwf	___lwmod@divisor+1,c
   447  00012A  0E0A               	movlw	10
   448  00012C  6E1C               	movwf	___lwmod@divisor,c
   449  00012E  EC96  F001         	call	___lwmod	;wreg free
   450  000132  C01A  F022         	movff	?___lwmod,_digit+4
   451  000136  C01B  F023         	movff	?___lwmod+1,_digit+5
   452                           
   453                           ;main.c: 83: digit[1] = (convertedValue/100) % 10;
   454  00013A  0E00               	movlw	0
   455  00013C  6E16               	movwf	___lwdiv@divisor+1,c
   456  00013E  0E64               	movlw	100
   457  000140  6E15               	movwf	___lwdiv@divisor,c
   458  000142  C032  F013         	movff	_convertedValue,___lwdiv@dividend
   459  000146  C033  F014         	movff	_convertedValue+1,___lwdiv@dividend+1
   460  00014A  EC6D  F001         	call	___lwdiv	;wreg free
   461  00014E  C013  F01A         	movff	?___lwdiv,___lwmod@dividend
   462  000152  C014  F01B         	movff	?___lwdiv+1,___lwmod@dividend+1
   463  000156  0E00               	movlw	0
   464  000158  6E1D               	movwf	___lwmod@divisor+1,c
   465  00015A  0E0A               	movlw	10
   466  00015C  6E1C               	movwf	___lwmod@divisor,c
   467  00015E  EC96  F001         	call	___lwmod	;wreg free
   468  000162  C01A  F020         	movff	?___lwmod,_digit+2
   469  000166  C01B  F021         	movff	?___lwmod+1,_digit+3
   470                           
   471                           ;main.c: 84: digit[0] = (convertedValue/1000);
   472  00016A  C032  F013         	movff	_convertedValue,___lwdiv@dividend
   473  00016E  C033  F014         	movff	_convertedValue+1,___lwdiv@dividend+1
   474  000172  0E03               	movlw	3
   475  000174  6E16               	movwf	___lwdiv@divisor+1,c
   476  000176  0EE8               	movlw	232
   477  000178  6E15               	movwf	___lwdiv@divisor,c
   478  00017A  EC6D  F001         	call	___lwdiv	;wreg free
   479  00017E  C013  F01E         	movff	?___lwdiv,_digit
   480  000182  C014  F01F         	movff	?___lwdiv+1,_digit+1
   481                           
   482                           ;main.c: 87: if(c_scan==4)
   483  000186  0E04               	movlw	4
   484  000188  1836               	xorwf	_c_scan,w,c
   485  00018A  1037               	iorwf	_c_scan+1,w,c
   486  00018C  A4D8               	btfss	status,2,c
   487  00018E  D004               	goto	l224
   488                           
   489                           ;main.c: 88: {
   490                           ;main.c: 89: c_scan=0;
   491  000190  0E00               	movlw	0
   492  000192  6E37               	movwf	_c_scan+1,c
   493  000194  0E00               	movlw	0
   494  000196  6E36               	movwf	_c_scan,c
   495  000198                     l224:
   496                           
   497                           ;main.c: 90: }
   498                           ;main.c: 91: if(c_scan==0)
   499  000198  5036               	movf	_c_scan,w,c
   500  00019A  1037               	iorwf	_c_scan+1,w,c
   501  00019C  A4D8               	btfss	status,2,c
   502  00019E  D023               	goto	l225
   503                           
   504                           ;main.c: 92: {
   505                           ;main.c: 93: LATB=Seg[digit[c_scan]];
   506  0001A0  90D8               	bcf	status,0,c
   507  0001A2  3436               	rlcf	_c_scan,w,c
   508  0001A4  6ED9               	movwf	fsr2l,c
   509  0001A6  3437               	rlcf	_c_scan+1,w,c
   510  0001A8  6EDA               	movwf	fsr2h,c
   511  0001AA  0E1E               	movlw	low _digit
   512  0001AC  26D9               	addwf	fsr2l,f,c
   513  0001AE  0E00               	movlw	high _digit
   514  0001B0  22DA               	addwfc	fsr2h,f,c
   515  0001B2  CFDE F061          	movff	postinc2,??_main
   516  0001B6  CFDD F062          	movff	postdec2,??_main+1
   517  0001BA  0E38               	movlw	low _Seg
   518  0001BC  0100               	movlb	0	; () banked
   519  0001BE  2561               	addwf	??_main& (0+255),w,b
   520  0001C0  6ED9               	movwf	fsr2l,c
   521  0001C2  0E00               	movlw	high _Seg
   522  0001C4  2162               	addwfc	(??_main+1)& (0+255),w,b
   523  0001C6  6EDA               	movwf	fsr2h,c
   524  0001C8  50DF               	movf	indf2,w,c
   525  0001CA  6E8A               	movwf	3978,c	;volatile
   526                           
   527                           ; BSR set to: 0
   528                           ;main.c: 94: LATC=0x01<<c_scan;;
   529  0001CC  C036  F061         	movff	_c_scan,??_main
   530  0001D0  0E01               	movlw	1
   531  0001D2  6F62               	movwf	(??_main+1)& (0+255),b
   532  0001D4  2B61               	incf	??_main& (0+255),f,b
   533  0001D6  D002               	goto	u494
   534  0001D8                     u495:
   535  0001D8  90D8               	bcf	status,0,c
   536  0001DA  3762               	rlcf	(??_main+1)& (0+255),f,b
   537  0001DC                     u494:
   538  0001DC  2F61               	decfsz	??_main& (0+255),f,b
   539  0001DE  D7FC               	goto	u495
   540  0001E0  0100               	movlb	0	; () banked
   541  0001E2  5162               	movf	(??_main+1)& (0+255),w,b
   542  0001E4  6E8B               	movwf	3979,c	;volatile
   543  0001E6                     l225:
   544                           
   545                           ;main.c: 95: }
   546                           ;main.c: 98: if(c_scan==1)
   547                           
   548                           ; BSR set to: 0
   549  0001E6  0436               	decf	_c_scan,w,c
   550  0001E8  1037               	iorwf	_c_scan+1,w,c
   551  0001EA  A4D8               	btfss	status,2,c
   552  0001EC  D023               	goto	l226
   553                           
   554                           ;main.c: 99: {
   555                           ;main.c: 100: LATB=Seg[digit[c_scan]];
   556  0001EE  90D8               	bcf	status,0,c
   557  0001F0  3436               	rlcf	_c_scan,w,c
   558  0001F2  6ED9               	movwf	fsr2l,c
   559  0001F4  3437               	rlcf	_c_scan+1,w,c
   560  0001F6  6EDA               	movwf	fsr2h,c
   561  0001F8  0E1E               	movlw	low _digit
   562  0001FA  26D9               	addwf	fsr2l,f,c
   563  0001FC  0E00               	movlw	high _digit
   564  0001FE  22DA               	addwfc	fsr2h,f,c
   565  000200  CFDE F061          	movff	postinc2,??_main
   566  000204  CFDD F062          	movff	postdec2,??_main+1
   567  000208  0E38               	movlw	low _Seg
   568  00020A  0100               	movlb	0	; () banked
   569  00020C  2561               	addwf	??_main& (0+255),w,b
   570  00020E  6ED9               	movwf	fsr2l,c
   571  000210  0E00               	movlw	high _Seg
   572  000212  2162               	addwfc	(??_main+1)& (0+255),w,b
   573  000214  6EDA               	movwf	fsr2h,c
   574  000216  50DF               	movf	indf2,w,c
   575  000218  6E8A               	movwf	3978,c	;volatile
   576                           
   577                           ; BSR set to: 0
   578                           ;main.c: 101: LATC=0x01<<c_scan;;
   579  00021A  C036  F061         	movff	_c_scan,??_main
   580  00021E  0E01               	movlw	1
   581  000220  6F62               	movwf	(??_main+1)& (0+255),b
   582  000222  2B61               	incf	??_main& (0+255),f,b
   583  000224  D002               	goto	u514
   584  000226                     u515:
   585  000226  90D8               	bcf	status,0,c
   586  000228  3762               	rlcf	(??_main+1)& (0+255),f,b
   587  00022A                     u514:
   588  00022A  2F61               	decfsz	??_main& (0+255),f,b
   589  00022C  D7FC               	goto	u515
   590  00022E  0100               	movlb	0	; () banked
   591  000230  5162               	movf	(??_main+1)& (0+255),w,b
   592  000232  6E8B               	movwf	3979,c	;volatile
   593  000234                     l226:
   594                           
   595                           ;main.c: 102: }
   596                           ;main.c: 103: if(c_scan==2)
   597                           
   598                           ; BSR set to: 0
   599  000234  0E02               	movlw	2
   600  000236  1836               	xorwf	_c_scan,w,c
   601  000238  1037               	iorwf	_c_scan+1,w,c
   602  00023A  A4D8               	btfss	status,2,c
   603  00023C  D023               	goto	l227
   604                           
   605                           ;main.c: 104: {
   606                           ;main.c: 105: LATB=Seg[digit[c_scan]];
   607  00023E  90D8               	bcf	status,0,c
   608  000240  3436               	rlcf	_c_scan,w,c
   609  000242  6ED9               	movwf	fsr2l,c
   610  000244  3437               	rlcf	_c_scan+1,w,c
   611  000246  6EDA               	movwf	fsr2h,c
   612  000248  0E1E               	movlw	low _digit
   613  00024A  26D9               	addwf	fsr2l,f,c
   614  00024C  0E00               	movlw	high _digit
   615  00024E  22DA               	addwfc	fsr2h,f,c
   616  000250  CFDE F061          	movff	postinc2,??_main
   617  000254  CFDD F062          	movff	postdec2,??_main+1
   618  000258  0E38               	movlw	low _Seg
   619  00025A  0100               	movlb	0	; () banked
   620  00025C  2561               	addwf	??_main& (0+255),w,b
   621  00025E  6ED9               	movwf	fsr2l,c
   622  000260  0E00               	movlw	high _Seg
   623  000262  2162               	addwfc	(??_main+1)& (0+255),w,b
   624  000264  6EDA               	movwf	fsr2h,c
   625  000266  50DF               	movf	indf2,w,c
   626  000268  6E8A               	movwf	3978,c	;volatile
   627                           
   628                           ; BSR set to: 0
   629                           ;main.c: 106: LATC=0x01<<c_scan;;
   630  00026A  C036  F061         	movff	_c_scan,??_main
   631  00026E  0E01               	movlw	1
   632  000270  6F62               	movwf	(??_main+1)& (0+255),b
   633  000272  2B61               	incf	??_main& (0+255),f,b
   634  000274  D002               	goto	u534
   635  000276                     u535:
   636  000276  90D8               	bcf	status,0,c
   637  000278  3762               	rlcf	(??_main+1)& (0+255),f,b
   638  00027A                     u534:
   639  00027A  2F61               	decfsz	??_main& (0+255),f,b
   640  00027C  D7FC               	goto	u535
   641  00027E  0100               	movlb	0	; () banked
   642  000280  5162               	movf	(??_main+1)& (0+255),w,b
   643  000282  6E8B               	movwf	3979,c	;volatile
   644  000284                     l227:
   645                           
   646                           ;main.c: 107: }
   647                           ;main.c: 108: if(c_scan==3)
   648                           
   649                           ; BSR set to: 0
   650  000284  0E03               	movlw	3
   651  000286  1836               	xorwf	_c_scan,w,c
   652  000288  1037               	iorwf	_c_scan+1,w,c
   653  00028A  A4D8               	btfss	status,2,c
   654  00028C  D023               	goto	l228
   655                           
   656                           ;main.c: 109: {
   657                           ;main.c: 110: LATB=Seg[digit[c_scan]];
   658  00028E  90D8               	bcf	status,0,c
   659  000290  3436               	rlcf	_c_scan,w,c
   660  000292  6ED9               	movwf	fsr2l,c
   661  000294  3437               	rlcf	_c_scan+1,w,c
   662  000296  6EDA               	movwf	fsr2h,c
   663  000298  0E1E               	movlw	low _digit
   664  00029A  26D9               	addwf	fsr2l,f,c
   665  00029C  0E00               	movlw	high _digit
   666  00029E  22DA               	addwfc	fsr2h,f,c
   667  0002A0  CFDE F061          	movff	postinc2,??_main
   668  0002A4  CFDD F062          	movff	postdec2,??_main+1
   669  0002A8  0E38               	movlw	low _Seg
   670  0002AA  0100               	movlb	0	; () banked
   671  0002AC  2561               	addwf	??_main& (0+255),w,b
   672  0002AE  6ED9               	movwf	fsr2l,c
   673  0002B0  0E00               	movlw	high _Seg
   674  0002B2  2162               	addwfc	(??_main+1)& (0+255),w,b
   675  0002B4  6EDA               	movwf	fsr2h,c
   676  0002B6  50DF               	movf	indf2,w,c
   677  0002B8  6E8A               	movwf	3978,c	;volatile
   678                           
   679                           ; BSR set to: 0
   680                           ;main.c: 111: LATC=0x01<<c_scan;;
   681  0002BA  C036  F061         	movff	_c_scan,??_main
   682  0002BE  0E01               	movlw	1
   683  0002C0  6F62               	movwf	(??_main+1)& (0+255),b
   684  0002C2  2B61               	incf	??_main& (0+255),f,b
   685  0002C4  D002               	goto	u554
   686  0002C6                     u555:
   687  0002C6  90D8               	bcf	status,0,c
   688  0002C8  3762               	rlcf	(??_main+1)& (0+255),f,b
   689  0002CA                     u554:
   690  0002CA  2F61               	decfsz	??_main& (0+255),f,b
   691  0002CC  D7FC               	goto	u555
   692  0002CE  0100               	movlb	0	; () banked
   693  0002D0  5162               	movf	(??_main+1)& (0+255),w,b
   694  0002D2  6E8B               	movwf	3979,c	;volatile
   695  0002D4                     l228:
   696                           
   697                           ;main.c: 112: }
   698                           ;main.c: 115: c_scan++;
   699                           
   700                           ; BSR set to: 0
   701  0002D4  4A36               	infsnz	_c_scan,f,c
   702  0002D6  2A37               	incf	_c_scan+1,f,c
   703  0002D8  D6ED               	goto	l219
   704  0002DA                     __end_of_main:
   705                           	opt stack 0
   706                           tblptru	equ	0xFF8
   707                           tblptrh	equ	0xFF7
   708                           tblptrl	equ	0xFF6
   709                           tablat	equ	0xFF5
   710                           intcon	equ	0xFF2
   711                           postinc0	equ	0xFEE
   712                           wreg	equ	0xFE8
   713                           postdec1	equ	0xFE5
   714                           fsr1l	equ	0xFE1
   715                           indf2	equ	0xFDF
   716                           postinc2	equ	0xFDE
   717                           postdec2	equ	0xFDD
   718                           fsr2h	equ	0xFDA
   719                           fsr2l	equ	0xFD9
   720                           status	equ	0xFD8
   721                           
   722 ;; *************** function ___lwmod *****************
   723 ;; Defined at:
   724 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  dividend        2   25[COMRAM] unsigned int 
   727 ;;  divisor         2   27[COMRAM] unsigned int 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  counter         1    0[BANK0 ] unsigned char 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  2   25[COMRAM] unsigned int 
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Totals:         4       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;Total ram usage:        5 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; Hardware stack levels required when called:    3
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text1
   754  00032C                     __ptext1:
   755                           	opt stack 0
   756  00032C                     ___lwmod:
   757                           	opt stack 27
   758                           
   759                           ;incstack = 0
   760  00032C  501C               	movf	___lwmod@divisor,w,c
   761  00032E  101D               	iorwf	___lwmod@divisor+1,w,c
   762  000330  B4D8               	btfsc	status,2,c
   763  000332  D019               	goto	l650
   764  000334  0E01               	movlw	1
   765  000336  0100               	movlb	0	; () banked
   766  000338  6F60               	movwf	___lwmod@counter& (0+255),b
   767  00033A  D004               	goto	l645
   768  00033C                     
   769                           ; BSR set to: 0
   770                           
   771                           ; BSR set to: 0
   772  00033C  90D8               	bcf	status,0,c
   773  00033E  361C               	rlcf	___lwmod@divisor,f,c
   774  000340  361D               	rlcf	___lwmod@divisor+1,f,c
   775  000342  2B60               	incf	___lwmod@counter& (0+255),f,b
   776  000344                     l645:
   777                           
   778                           ; BSR set to: 0
   779                           
   780                           ; BSR set to: 0
   781  000344  AE1D               	btfss	___lwmod@divisor+1,7,c
   782  000346  D7FA               	goto	l646
   783  000348                     u430:
   784                           
   785                           ; BSR set to: 0
   786                           
   787                           ; BSR set to: 0
   788                           
   789                           ; BSR set to: 0
   790  000348  501C               	movf	___lwmod@divisor,w,c
   791  00034A  5C1A               	subwf	___lwmod@dividend,w,c
   792  00034C  501D               	movf	___lwmod@divisor+1,w,c
   793  00034E  581B               	subwfb	___lwmod@dividend+1,w,c
   794  000350  A0D8               	btfss	status,0,c
   795  000352  D004               	goto	l649
   796                           
   797                           ; BSR set to: 0
   798  000354  501C               	movf	___lwmod@divisor,w,c
   799  000356  5E1A               	subwf	___lwmod@dividend,f,c
   800  000358  501D               	movf	___lwmod@divisor+1,w,c
   801  00035A  5A1B               	subwfb	___lwmod@dividend+1,f,c
   802  00035C                     l649:
   803                           
   804                           ; BSR set to: 0
   805                           
   806                           ; BSR set to: 0
   807  00035C  90D8               	bcf	status,0,c
   808  00035E  321D               	rrcf	___lwmod@divisor+1,f,c
   809  000360  321C               	rrcf	___lwmod@divisor,f,c
   810                           
   811                           ; BSR set to: 0
   812  000362  2F60               	decfsz	___lwmod@counter& (0+255),f,b
   813  000364  D7F1               	goto	u430
   814  000366                     l650:
   815                           
   816                           ; BSR set to: 0
   817  000366  C01A  F01A         	movff	___lwmod@dividend,?___lwmod
   818  00036A  C01B  F01B         	movff	___lwmod@dividend+1,?___lwmod+1
   819  00036E  0012               	return		;funcret
   820  000370                     __end_of___lwmod:
   821                           	opt stack 0
   822                           tblptru	equ	0xFF8
   823                           tblptrh	equ	0xFF7
   824                           tblptrl	equ	0xFF6
   825                           tablat	equ	0xFF5
   826                           intcon	equ	0xFF2
   827                           postinc0	equ	0xFEE
   828                           wreg	equ	0xFE8
   829                           postdec1	equ	0xFE5
   830                           fsr1l	equ	0xFE1
   831                           indf2	equ	0xFDF
   832                           postinc2	equ	0xFDE
   833                           postdec2	equ	0xFDD
   834                           fsr2h	equ	0xFDA
   835                           fsr2l	equ	0xFD9
   836                           status	equ	0xFD8
   837                           
   838 ;; *************** function ___lwdiv *****************
   839 ;; Defined at:
   840 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  dividend        2   18[COMRAM] unsigned int 
   843 ;;  divisor         2   20[COMRAM] unsigned int 
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  quotient        2   22[COMRAM] unsigned int 
   846 ;;  counter         1   24[COMRAM] unsigned char 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  2   18[COMRAM] unsigned int 
   849 ;; Registers used:
   850 ;;		wreg, status,2, status,0
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   856 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;Total ram usage:        7 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; Hardware stack levels required when called:    3
   863 ;; This function calls:
   864 ;;		Nothing
   865 ;; This function is called by:
   866 ;;		_main
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text2
   871  0002DA                     __ptext2:
   872                           	opt stack 0
   873  0002DA                     ___lwdiv:
   874                           	opt stack 27
   875                           
   876                           ;incstack = 0
   877  0002DA  0E00               	movlw	0
   878  0002DC  6E18               	movwf	___lwdiv@quotient+1,c
   879  0002DE  0E00               	movlw	0
   880  0002E0  6E17               	movwf	___lwdiv@quotient,c
   881  0002E2  5015               	movf	___lwdiv@divisor,w,c
   882  0002E4  1016               	iorwf	___lwdiv@divisor+1,w,c
   883  0002E6  B4D8               	btfsc	status,2,c
   884  0002E8  D01C               	goto	l640
   885  0002EA  0E01               	movlw	1
   886  0002EC  6E19               	movwf	___lwdiv@counter,c
   887  0002EE  D004               	goto	l635
   888  0002F0  90D8               	bcf	status,0,c
   889  0002F2  3615               	rlcf	___lwdiv@divisor,f,c
   890  0002F4  3616               	rlcf	___lwdiv@divisor+1,f,c
   891  0002F6  2A19               	incf	___lwdiv@counter,f,c
   892  0002F8                     l635:
   893  0002F8  AE16               	btfss	___lwdiv@divisor+1,7,c
   894  0002FA  D7FA               	goto	l636
   895  0002FC                     u260:
   896  0002FC  90D8               	bcf	status,0,c
   897  0002FE  3617               	rlcf	___lwdiv@quotient,f,c
   898  000300  3618               	rlcf	___lwdiv@quotient+1,f,c
   899  000302  5015               	movf	___lwdiv@divisor,w,c
   900  000304  5C13               	subwf	___lwdiv@dividend,w,c
   901  000306  5016               	movf	___lwdiv@divisor+1,w,c
   902  000308  5814               	subwfb	___lwdiv@dividend+1,w,c
   903  00030A  A0D8               	btfss	status,0,c
   904  00030C  D005               	goto	l639
   905  00030E  5015               	movf	___lwdiv@divisor,w,c
   906  000310  5E13               	subwf	___lwdiv@dividend,f,c
   907  000312  5016               	movf	___lwdiv@divisor+1,w,c
   908  000314  5A14               	subwfb	___lwdiv@dividend+1,f,c
   909  000316  8017               	bsf	___lwdiv@quotient,0,c
   910  000318                     l639:
   911  000318  90D8               	bcf	status,0,c
   912  00031A  3216               	rrcf	___lwdiv@divisor+1,f,c
   913  00031C  3215               	rrcf	___lwdiv@divisor,f,c
   914  00031E  2E19               	decfsz	___lwdiv@counter,f,c
   915  000320  D7ED               	goto	u260
   916  000322                     l640:
   917  000322  C017  F013         	movff	___lwdiv@quotient,?___lwdiv
   918  000326  C018  F014         	movff	___lwdiv@quotient+1,?___lwdiv+1
   919  00032A  0012               	return		;funcret
   920  00032C                     __end_of___lwdiv:
   921                           	opt stack 0
   922                           tblptru	equ	0xFF8
   923                           tblptrh	equ	0xFF7
   924                           tblptrl	equ	0xFF6
   925                           tablat	equ	0xFF5
   926                           intcon	equ	0xFF2
   927                           postinc0	equ	0xFEE
   928                           wreg	equ	0xFE8
   929                           postdec1	equ	0xFE5
   930                           fsr1l	equ	0xFE1
   931                           indf2	equ	0xFDF
   932                           postinc2	equ	0xFDE
   933                           postdec2	equ	0xFDD
   934                           fsr2h	equ	0xFDA
   935                           fsr2l	equ	0xFD9
   936                           status	equ	0xFD8
   937                           
   938 ;; *************** function _SYSTEM_Initialize *****************
   939 ;; Defined at:
   940 ;;		line 50 in file "mcc_generated_files/mcc.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;Total ram usage:        0 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    5
   961 ;; This function calls:
   962 ;;		_ADC_Initialize
   963 ;;		_INTERRUPT_Initialize
   964 ;;		_OSCILLATOR_Initialize
   965 ;;		_PIN_MANAGER_Initialize
   966 ;;		_TMR0_Initialize
   967 ;; This function is called by:
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text3
   973  000438                     __ptext3:
   974                           	opt stack 0
   975  000438                     _SYSTEM_Initialize:
   976                           	opt stack 25
   977                           
   978                           ;mcc.c: 53: INTERRUPT_Initialize();
   979                           
   980                           ;incstack = 0
   981  000438  EC57  F002         	call	_INTERRUPT_Initialize	;wreg free
   982                           
   983                           ;mcc.c: 54: PIN_MANAGER_Initialize();
   984  00043C  ECB8  F001         	call	_PIN_MANAGER_Initialize	;wreg free
   985                           
   986                           ;mcc.c: 55: OSCILLATOR_Initialize();
   987  000440  EC45  F002         	call	_OSCILLATOR_Initialize	;wreg free
   988                           
   989                           ;mcc.c: 56: ADC_Initialize();
   990  000444  EC27  F002         	call	_ADC_Initialize	;wreg free
   991                           
   992                           ;mcc.c: 57: TMR0_Initialize();
   993  000448  EC0B  F002         	call	_TMR0_Initialize	;wreg free
   994  00044C  0012               	return		;funcret
   995  00044E                     __end_of_SYSTEM_Initialize:
   996                           	opt stack 0
   997                           tblptru	equ	0xFF8
   998                           tblptrh	equ	0xFF7
   999                           tblptrl	equ	0xFF6
  1000                           tablat	equ	0xFF5
  1001                           intcon	equ	0xFF2
  1002                           postinc0	equ	0xFEE
  1003                           wreg	equ	0xFE8
  1004                           postdec1	equ	0xFE5
  1005                           fsr1l	equ	0xFE1
  1006                           indf2	equ	0xFDF
  1007                           postinc2	equ	0xFDE
  1008                           postdec2	equ	0xFDD
  1009                           fsr2h	equ	0xFDA
  1010                           fsr2l	equ	0xFD9
  1011                           status	equ	0xFD8
  1012                           
  1013 ;; *************** function _TMR0_Initialize *****************
  1014 ;; Defined at:
  1015 ;;		line 68 in file "mcc_generated_files/tmr0.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2, status,0, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;Total ram usage:        0 bytes
  1034 ;; Hardware stack levels used:    1
  1035 ;; Hardware stack levels required when called:    4
  1036 ;; This function calls:
  1037 ;;		_TMR0_SetInterruptHandler
  1038 ;; This function is called by:
  1039 ;;		_SYSTEM_Initialize
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text4
  1044  000416                     __ptext4:
  1045                           	opt stack 0
  1046  000416                     _TMR0_Initialize:
  1047                           	opt stack 25
  1048                           
  1049                           ;tmr0.c: 73: TMR0H = 0x00;
  1050                           
  1051                           ;incstack = 0
  1052  000416  0E00               	movlw	0
  1053  000418  6ED7               	movwf	4055,c	;volatile
  1054                           
  1055                           ;tmr0.c: 76: TMR0L = 0xFE;
  1056  00041A  0EFE               	movlw	254
  1057  00041C  6ED6               	movwf	4054,c	;volatile
  1058                           
  1059                           ;tmr0.c: 80: timer0ReloadVal = 254;
  1060  00041E  0EFE               	movlw	254
  1061  000420  6E4C               	movwf	_timer0ReloadVal,c	;volatile
  1062                           
  1063                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
  1064  000422  94F2               	bcf	intcon,2,c	;volatile
  1065                           
  1066                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
  1067  000424  8AF2               	bsf	intcon,5,c	;volatile
  1068                           
  1069                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1070  000426  0EB6               	movlw	low _TMR0_DefaultInterruptHandler
  1071  000428  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  1072  00042A  0E04               	movlw	high _TMR0_DefaultInterruptHandler
  1073  00042C  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  1074  00042E  EC52  F002         	call	_TMR0_SetInterruptHandler	;wreg free
  1075                           
  1076                           ;tmr0.c: 92: T0CON = 0xD7;
  1077  000432  0ED7               	movlw	215
  1078  000434  6ED5               	movwf	4053,c	;volatile
  1079  000436  0012               	return		;funcret
  1080  000438                     __end_of_TMR0_Initialize:
  1081                           	opt stack 0
  1082                           tblptru	equ	0xFF8
  1083                           tblptrh	equ	0xFF7
  1084                           tblptrl	equ	0xFF6
  1085                           tablat	equ	0xFF5
  1086                           intcon	equ	0xFF2
  1087                           postinc0	equ	0xFEE
  1088                           wreg	equ	0xFE8
  1089                           postdec1	equ	0xFE5
  1090                           fsr1l	equ	0xFE1
  1091                           indf2	equ	0xFDF
  1092                           postinc2	equ	0xFDE
  1093                           postdec2	equ	0xFDD
  1094                           fsr2h	equ	0xFDA
  1095                           fsr2l	equ	0xFD9
  1096                           status	equ	0xFD8
  1097                           
  1098 ;; *************** function _TMR0_SetInterruptHandler *****************
  1099 ;; Defined at:
  1100 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  1103 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;		None
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  1    wreg      void 
  1108 ;; Registers used:
  1109 ;;		wreg, status,2, status,0
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1115 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;Total ram usage:        2 bytes
  1120 ;; Hardware stack levels used:    1
  1121 ;; Hardware stack levels required when called:    3
  1122 ;; This function calls:
  1123 ;;		Nothing
  1124 ;; This function is called by:
  1125 ;;		_TMR0_Initialize
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           	psect	text5
  1130  0004A4                     __ptext5:
  1131                           	opt stack 0
  1132  0004A4                     _TMR0_SetInterruptHandler:
  1133                           	opt stack 25
  1134                           
  1135                           ;tmr0.c: 134: TMR0_InterruptHandler = InterruptHandler;
  1136                           
  1137                           ;incstack = 0
  1138  0004A4  C013  F04A         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1139  0004A8  C014  F04B         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1140  0004AC  0012               	return		;funcret
  1141  0004AE                     __end_of_TMR0_SetInterruptHandler:
  1142                           	opt stack 0
  1143                           tblptru	equ	0xFF8
  1144                           tblptrh	equ	0xFF7
  1145                           tblptrl	equ	0xFF6
  1146                           tablat	equ	0xFF5
  1147                           intcon	equ	0xFF2
  1148                           postinc0	equ	0xFEE
  1149                           wreg	equ	0xFE8
  1150                           postdec1	equ	0xFE5
  1151                           fsr1l	equ	0xFE1
  1152                           indf2	equ	0xFDF
  1153                           postinc2	equ	0xFDE
  1154                           postdec2	equ	0xFDD
  1155                           fsr2h	equ	0xFDA
  1156                           fsr2l	equ	0xFD9
  1157                           status	equ	0xFD8
  1158                           
  1159 ;; *************** function _PIN_MANAGER_Initialize *****************
  1160 ;; Defined at:
  1161 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;		None
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		wreg, status,2
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;Total ram usage:        0 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; Hardware stack levels required when called:    3
  1182 ;; This function calls:
  1183 ;;		Nothing
  1184 ;; This function is called by:
  1185 ;;		_SYSTEM_Initialize
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text6
  1190  000370                     __ptext6:
  1191                           	opt stack 0
  1192  000370                     _PIN_MANAGER_Initialize:
  1193                           	opt stack 26
  1194                           
  1195                           ;pin_manager.c: 60: LATE = 0x00;
  1196                           
  1197                           ;incstack = 0
  1198  000370  0E00               	movlw	0
  1199  000372  6E8D               	movwf	3981,c	;volatile
  1200                           
  1201                           ;pin_manager.c: 61: LATD = 0x00;
  1202  000374  0E00               	movlw	0
  1203  000376  6E8C               	movwf	3980,c	;volatile
  1204                           
  1205                           ;pin_manager.c: 62: LATA = 0x00;
  1206  000378  0E00               	movlw	0
  1207  00037A  6E89               	movwf	3977,c	;volatile
  1208                           
  1209                           ;pin_manager.c: 63: LATB = 0x00;
  1210  00037C  0E00               	movlw	0
  1211  00037E  6E8A               	movwf	3978,c	;volatile
  1212                           
  1213                           ;pin_manager.c: 64: LATC = 0x00;
  1214  000380  0E00               	movlw	0
  1215  000382  6E8B               	movwf	3979,c	;volatile
  1216                           
  1217                           ;pin_manager.c: 69: TRISE = 0x07;
  1218  000384  0E07               	movlw	7
  1219  000386  6E96               	movwf	3990,c	;volatile
  1220                           
  1221                           ;pin_manager.c: 70: TRISA = 0xFF;
  1222  000388  6892               	setf	3986,c	;volatile
  1223                           
  1224                           ;pin_manager.c: 71: TRISB = 0x00;
  1225  00038A  0E00               	movlw	0
  1226  00038C  6E93               	movwf	3987,c	;volatile
  1227                           
  1228                           ;pin_manager.c: 72: TRISC = 0xF0;
  1229  00038E  0EF0               	movlw	240
  1230  000390  6E94               	movwf	3988,c	;volatile
  1231                           
  1232                           ;pin_manager.c: 73: TRISD = 0xFF;
  1233  000392  6895               	setf	3989,c	;volatile
  1234                           
  1235                           ;pin_manager.c: 78: ANSELD = 0xFF;
  1236  000394  010F               	movlb	15	; () banked
  1237  000396  693B               	setf	59,b	;volatile
  1238                           
  1239                           ;pin_manager.c: 79: ANSELC = 0xFC;
  1240  000398  0EFC               	movlw	252
  1241  00039A  6F3A               	movwf	58,b	;volatile
  1242                           
  1243                           ;pin_manager.c: 80: ANSELB = 0x3F;
  1244  00039C  0E3F               	movlw	63
  1245  00039E  6F39               	movwf	57,b	;volatile
  1246                           
  1247                           ;pin_manager.c: 81: ANSELE = 0x07;
  1248  0003A0  0E07               	movlw	7
  1249  0003A2  6F3C               	movwf	60,b	;volatile
  1250                           
  1251                           ;pin_manager.c: 82: ANSELA = 0x2F;
  1252  0003A4  0E2F               	movlw	47
  1253  0003A6  6F38               	movwf	56,b	;volatile
  1254                           
  1255                           ;pin_manager.c: 87: WPUB = 0x00;
  1256  0003A8  0E00               	movlw	0
  1257  0003AA  6E61               	movwf	3937,c	;volatile
  1258                           
  1259                           ; BSR set to: 15
  1260                           ;pin_manager.c: 88: INTCON2bits.nRBPU = 1;
  1261  0003AC  8EF1               	bsf	intcon2,7,c	;volatile
  1262                           
  1263                           ; BSR set to: 15
  1264  0003AE  0012               	return		;funcret
  1265  0003B0                     __end_of_PIN_MANAGER_Initialize:
  1266                           	opt stack 0
  1267                           tblptru	equ	0xFF8
  1268                           tblptrh	equ	0xFF7
  1269                           tblptrl	equ	0xFF6
  1270                           tablat	equ	0xFF5
  1271                           intcon	equ	0xFF2
  1272                           intcon2	equ	0xFF1
  1273                           postinc0	equ	0xFEE
  1274                           wreg	equ	0xFE8
  1275                           postdec1	equ	0xFE5
  1276                           fsr1l	equ	0xFE1
  1277                           indf2	equ	0xFDF
  1278                           postinc2	equ	0xFDE
  1279                           postdec2	equ	0xFDD
  1280                           fsr2h	equ	0xFDA
  1281                           fsr2l	equ	0xFD9
  1282                           status	equ	0xFD8
  1283                           
  1284 ;; *************** function _OSCILLATOR_Initialize *****************
  1285 ;; Defined at:
  1286 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;Total ram usage:        0 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    3
  1307 ;; This function calls:
  1308 ;;		Nothing
  1309 ;; This function is called by:
  1310 ;;		_SYSTEM_Initialize
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text7
  1315  00048A                     __ptext7:
  1316                           	opt stack 0
  1317  00048A                     _OSCILLATOR_Initialize:
  1318                           	opt stack 26
  1319                           
  1320                           ;mcc.c: 63: OSCCON = 0x30;
  1321                           
  1322                           ; BSR set to: 15
  1323                           ;incstack = 0
  1324  00048A  0E30               	movlw	48
  1325  00048C  6ED3               	movwf	4051,c	;volatile
  1326                           
  1327                           ;mcc.c: 65: OSCCON2 = 0x04;
  1328  00048E  0E04               	movlw	4
  1329  000490  6ED2               	movwf	4050,c	;volatile
  1330                           
  1331                           ;mcc.c: 67: OSCTUNE = 0x80;
  1332  000492  0E80               	movlw	128
  1333  000494  6E9B               	movwf	3995,c	;volatile
  1334  000496  0012               	return		;funcret
  1335  000498                     __end_of_OSCILLATOR_Initialize:
  1336                           	opt stack 0
  1337                           tblptru	equ	0xFF8
  1338                           tblptrh	equ	0xFF7
  1339                           tblptrl	equ	0xFF6
  1340                           tablat	equ	0xFF5
  1341                           intcon	equ	0xFF2
  1342                           intcon2	equ	0xFF1
  1343                           postinc0	equ	0xFEE
  1344                           wreg	equ	0xFE8
  1345                           postdec1	equ	0xFE5
  1346                           fsr1l	equ	0xFE1
  1347                           indf2	equ	0xFDF
  1348                           postinc2	equ	0xFDE
  1349                           postdec2	equ	0xFDD
  1350                           fsr2h	equ	0xFDA
  1351                           fsr2l	equ	0xFD9
  1352                           status	equ	0xFD8
  1353                           
  1354 ;; *************** function _INTERRUPT_Initialize *****************
  1355 ;; Defined at:
  1356 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		None
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;Total ram usage:        0 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; Hardware stack levels required when called:    3
  1377 ;; This function calls:
  1378 ;;		Nothing
  1379 ;; This function is called by:
  1380 ;;		_SYSTEM_Initialize
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text8
  1385  0004AE                     __ptext8:
  1386                           	opt stack 0
  1387  0004AE                     _INTERRUPT_Initialize:
  1388                           	opt stack 26
  1389                           
  1390                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  1391                           
  1392                           ;incstack = 0
  1393  0004AE  9ED0               	bcf	4048,7,c	;volatile
  1394  0004B0  0012               	return		;funcret
  1395  0004B2                     __end_of_INTERRUPT_Initialize:
  1396                           	opt stack 0
  1397                           tblptru	equ	0xFF8
  1398                           tblptrh	equ	0xFF7
  1399                           tblptrl	equ	0xFF6
  1400                           tablat	equ	0xFF5
  1401                           intcon	equ	0xFF2
  1402                           intcon2	equ	0xFF1
  1403                           postinc0	equ	0xFEE
  1404                           wreg	equ	0xFE8
  1405                           postdec1	equ	0xFE5
  1406                           fsr1l	equ	0xFE1
  1407                           indf2	equ	0xFDF
  1408                           postinc2	equ	0xFDE
  1409                           postdec2	equ	0xFDD
  1410                           fsr2h	equ	0xFDA
  1411                           fsr2l	equ	0xFD9
  1412                           status	equ	0xFD8
  1413                           
  1414 ;; *************** function _ADC_Initialize *****************
  1415 ;; Defined at:
  1416 ;;		line 60 in file "mcc_generated_files/adc.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;Total ram usage:        0 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    3
  1437 ;; This function calls:
  1438 ;;		Nothing
  1439 ;; This function is called by:
  1440 ;;		_SYSTEM_Initialize
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           	psect	text9
  1445  00044E                     __ptext9:
  1446                           	opt stack 0
  1447  00044E                     _ADC_Initialize:
  1448                           	opt stack 26
  1449                           
  1450                           ;adc.c: 65: ADCON0 = 0x01;
  1451                           
  1452                           ;incstack = 0
  1453  00044E  0E01               	movlw	1
  1454  000450  6EC2               	movwf	4034,c	;volatile
  1455                           
  1456                           ;adc.c: 68: ADCON1 = 0x00;
  1457  000452  0E00               	movlw	0
  1458  000454  6EC1               	movwf	4033,c	;volatile
  1459                           
  1460                           ;adc.c: 71: ADCON2 = 0x88;
  1461  000456  0E88               	movlw	136
  1462  000458  6EC0               	movwf	4032,c	;volatile
  1463                           
  1464                           ;adc.c: 74: ADRESL = 0x00;
  1465  00045A  0E00               	movlw	0
  1466  00045C  6EC3               	movwf	4035,c	;volatile
  1467                           
  1468                           ;adc.c: 77: ADRESH = 0x00;
  1469  00045E  0E00               	movlw	0
  1470  000460  6EC4               	movwf	4036,c	;volatile
  1471  000462  0012               	return		;funcret
  1472  000464                     __end_of_ADC_Initialize:
  1473                           	opt stack 0
  1474                           tblptru	equ	0xFF8
  1475                           tblptrh	equ	0xFF7
  1476                           tblptrl	equ	0xFF6
  1477                           tablat	equ	0xFF5
  1478                           intcon	equ	0xFF2
  1479                           intcon2	equ	0xFF1
  1480                           postinc0	equ	0xFEE
  1481                           wreg	equ	0xFE8
  1482                           postdec1	equ	0xFE5
  1483                           fsr1l	equ	0xFE1
  1484                           indf2	equ	0xFDF
  1485                           postinc2	equ	0xFDE
  1486                           postdec2	equ	0xFDD
  1487                           fsr2h	equ	0xFDA
  1488                           fsr2l	equ	0xFD9
  1489                           status	equ	0xFD8
  1490                           
  1491 ;; *************** function _ADC_StartConversion *****************
  1492 ;; Defined at:
  1493 ;;		line 89 in file "mcc_generated_files/adc.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;		None
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		None
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;Total ram usage:        2 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    3
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_main
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text10
  1522  0004B2                     __ptext10:
  1523                           	opt stack 0
  1524  0004B2                     _ADC_StartConversion:
  1525                           	opt stack 27
  1526                           
  1527                           ;adc.c: 92: ADCON0bits.GO_nDONE = 1;
  1528                           
  1529                           ;incstack = 0
  1530  0004B2  82C2               	bsf	4034,1,c	;volatile
  1531  0004B4  0012               	return		;funcret
  1532  0004B6                     __end_of_ADC_StartConversion:
  1533                           	opt stack 0
  1534                           tblptru	equ	0xFF8
  1535                           tblptrh	equ	0xFF7
  1536                           tblptrl	equ	0xFF6
  1537                           tablat	equ	0xFF5
  1538                           intcon	equ	0xFF2
  1539                           intcon2	equ	0xFF1
  1540                           postinc0	equ	0xFEE
  1541                           wreg	equ	0xFE8
  1542                           postdec1	equ	0xFE5
  1543                           fsr1l	equ	0xFE1
  1544                           indf2	equ	0xFDF
  1545                           postinc2	equ	0xFDE
  1546                           postdec2	equ	0xFDD
  1547                           fsr2h	equ	0xFDA
  1548                           fsr2l	equ	0xFD9
  1549                           status	equ	0xFD8
  1550                           
  1551 ;; *************** function _ADC_IsConversionDone *****************
  1552 ;; Defined at:
  1553 ;;		line 96 in file "mcc_generated_files/adc.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;		None
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      unsigned char 
  1560 ;; Registers used:
  1561 ;;		wreg
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;Total ram usage:        0 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; Hardware stack levels required when called:    3
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_main
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text11
  1582  000498                     __ptext11:
  1583                           	opt stack 0
  1584  000498                     _ADC_IsConversionDone:
  1585                           	opt stack 27
  1586                           
  1587                           ;adc.c: 99: return ((bool)(!ADCON0bits.GO_nDONE));
  1588                           
  1589                           ;incstack = 0
  1590  000498  B2C2               	btfsc	4034,1,c	;volatile
  1591  00049A  D002               	goto	u10
  1592  00049C  0E01               	movlw	1
  1593  00049E  0012               	return	
  1594  0004A0                     u10:
  1595  0004A0  0E00               	movlw	0
  1596  0004A2  0012               	return	
  1597  0004A4                     __end_of_ADC_IsConversionDone:
  1598                           	opt stack 0
  1599                           tblptru	equ	0xFF8
  1600                           tblptrh	equ	0xFF7
  1601                           tblptrl	equ	0xFF6
  1602                           tablat	equ	0xFF5
  1603                           intcon	equ	0xFF2
  1604                           intcon2	equ	0xFF1
  1605                           postinc0	equ	0xFEE
  1606                           wreg	equ	0xFE8
  1607                           postdec1	equ	0xFE5
  1608                           fsr1l	equ	0xFE1
  1609                           indf2	equ	0xFDF
  1610                           postinc2	equ	0xFDE
  1611                           postdec2	equ	0xFDD
  1612                           fsr2h	equ	0xFDA
  1613                           fsr2l	equ	0xFD9
  1614                           status	equ	0xFD8
  1615                           
  1616 ;; *************** function _ADC_GetConversionResult *****************
  1617 ;; Defined at:
  1618 ;;		line 102 in file "mcc_generated_files/adc.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;		None
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;		None
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  2   18[COMRAM] unsigned int 
  1625 ;; Registers used:
  1626 ;;		wreg, status,2, status,0
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;Total ram usage:        4 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; Hardware stack levels required when called:    3
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text12
  1647  000464                     __ptext12:
  1648                           	opt stack 0
  1649  000464                     _ADC_GetConversionResult:
  1650                           	opt stack 27
  1651                           
  1652                           ;adc.c: 105: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  1653                           
  1654                           ;incstack = 0
  1655  000464  50C4               	movf	4036,w,c	;volatile
  1656  000466  6E16               	movwf	(??_ADC_GetConversionResult+1)& (0+255),c
  1657  000468  6A15               	clrf	??_ADC_GetConversionResult& (0+255),c
  1658  00046A  50C3               	movf	4035,w,c	;volatile
  1659  00046C  2415               	addwf	??_ADC_GetConversionResult,w,c
  1660  00046E  6E13               	movwf	?_ADC_GetConversionResult,c
  1661  000470  0E00               	movlw	0
  1662  000472  2016               	addwfc	??_ADC_GetConversionResult+1,w,c
  1663  000474  6E14               	movwf	?_ADC_GetConversionResult+1,c
  1664  000476  0012               	return	
  1665  000478                     __end_of_ADC_GetConversionResult:
  1666                           	opt stack 0
  1667                           tblptru	equ	0xFF8
  1668                           tblptrh	equ	0xFF7
  1669                           tblptrl	equ	0xFF6
  1670                           tablat	equ	0xFF5
  1671                           intcon	equ	0xFF2
  1672                           intcon2	equ	0xFF1
  1673                           postinc0	equ	0xFEE
  1674                           wreg	equ	0xFE8
  1675                           postdec1	equ	0xFE5
  1676                           fsr1l	equ	0xFE1
  1677                           indf2	equ	0xFDF
  1678                           postinc2	equ	0xFDE
  1679                           postdec2	equ	0xFDD
  1680                           fsr2h	equ	0xFDA
  1681                           fsr2l	equ	0xFD9
  1682                           status	equ	0xFD8
  1683                           
  1684 ;; *************** function _INTERRUPT_InterruptManager *****************
  1685 ;; Defined at:
  1686 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;		None
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1703 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1704 ;;Total ram usage:       18 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    2
  1707 ;; This function calls:
  1708 ;;		_TMR0_ISR
  1709 ;; This function is called by:
  1710 ;;		Interrupt level 2
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	intcode
  1715  000008                     __pintcode:
  1716                           	opt stack 0
  1717  000008                     _INTERRUPT_InterruptManager:
  1718                           	opt stack 25
  1719                           
  1720                           ;incstack = 0
  1721  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1722  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  1723  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1724  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1725  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1726  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1727  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1728  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1729  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1730  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1731  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1732  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1733  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1734  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1735  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1736  000042  C04D  F00F         	movff	btemp,??_INTERRUPT_InterruptManager+14
  1737  000046  C04E  F010         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  1738  00004A  C04F  F011         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  1739  00004E  C050  F012         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  1740                           
  1741                           ;interrupt_manager.c: 61: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  1742  000052  BAF2               	btfsc	intcon,5,c	;volatile
  1743  000054  A4F2               	btfss	intcon,2,c	;volatile
  1744  000056  D002               	goto	i2l52
  1745                           
  1746                           ;interrupt_manager.c: 62: {
  1747                           ;interrupt_manager.c: 63: TMR0_ISR();
  1748  000058  ECF5  F001         	call	_TMR0_ISR	;wreg free
  1749  00005C                     i2l52:
  1750                           
  1751                           ;interrupt_manager.c: 65: else
  1752                           ;interrupt_manager.c: 66: {
  1753  00005C  C012  F050         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  1754  000060  C011  F04F         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  1755  000064  C010  F04E         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  1756  000068  C00F  F04D         	movff	??_INTERRUPT_InterruptManager+14,btemp
  1757  00006C  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1758  000070  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1759  000074  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1760  000078  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1761  00007C  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1762  000080  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1763  000084  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1764  000088  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1765  00008C  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1766  000090  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1767  000094  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1768  000098  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1769  00009C  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1770  0000A0  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1771  0000A4  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1772  0000A6  0011               	retfie		f
  1773  0000A8                     __end_of_INTERRUPT_InterruptManager:
  1774                           	opt stack 0
  1775                           pclatu	equ	0xFFB
  1776                           pclath	equ	0xFFA
  1777                           tblptru	equ	0xFF8
  1778                           tblptrh	equ	0xFF7
  1779                           tblptrl	equ	0xFF6
  1780                           tablat	equ	0xFF5
  1781                           prodh	equ	0xFF4
  1782                           prodl	equ	0xFF3
  1783                           intcon	equ	0xFF2
  1784                           intcon2	equ	0xFF1
  1785                           postinc0	equ	0xFEE
  1786                           fsr0h	equ	0xFEA
  1787                           fsr0l	equ	0xFE9
  1788                           wreg	equ	0xFE8
  1789                           postdec1	equ	0xFE5
  1790                           fsr1h	equ	0xFE2
  1791                           fsr1l	equ	0xFE1
  1792                           indf2	equ	0xFDF
  1793                           postinc2	equ	0xFDE
  1794                           postdec2	equ	0xFDD
  1795                           fsr2h	equ	0xFDA
  1796                           fsr2l	equ	0xFD9
  1797                           status	equ	0xFD8
  1798                           
  1799 ;; *************** function _TMR0_ISR *****************
  1800 ;; Defined at:
  1801 ;;		line 19 in file "main.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;Total ram usage:        0 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    1
  1822 ;; This function calls:
  1823 ;;		Absolute function
  1824 ;;		_TMR0_DefaultInterruptHandler
  1825 ;; This function is called by:
  1826 ;;		_INTERRUPT_InterruptManager
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text14
  1831  0003EA                     __ptext14:
  1832                           	opt stack 0
  1833  0003EA                     _TMR0_ISR:
  1834                           	opt stack 25
  1835                           
  1836                           ;main.c: 23: INTCONbits.TMR0IF = 0;
  1837                           
  1838                           ;incstack = 0
  1839  0003EA  94F2               	bcf	intcon,2,c	;volatile
  1840                           
  1841                           ;main.c: 26: TMR0L = timer0ReloadVal;
  1842  0003EC  C04C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  1843                           
  1844                           ;main.c: 28: if(TMR0_InterruptHandler)
  1845  0003F0  504A               	movf	_TMR0_InterruptHandler,w,c
  1846  0003F2  104B               	iorwf	_TMR0_InterruptHandler+1,w,c
  1847  0003F4  B4D8               	btfsc	status,2,c
  1848  0003F6  D00C               	goto	i2u4_49
  1849                           
  1850                           ;main.c: 29: {
  1851                           ;main.c: 30: TMR0_InterruptHandler();
  1852  0003F8  D801               	call	i2u4_48
  1853  0003FA  D00A               	goto	i2u4_49
  1854  0003FC                     i2u4_48:
  1855  0003FC  0005               	push	
  1856  0003FE  6EFA               	movwf	pclath,c
  1857  000400  504A               	movf	_TMR0_InterruptHandler,w,c
  1858  000402  6EFD               	movwf	tosl,c
  1859  000404  504B               	movf	_TMR0_InterruptHandler+1,w,c
  1860  000406  6EFE               	movwf	tosh,c
  1861  000408  50F8               	movf	tblptru,w,c
  1862  00040A  6EFF               	movwf	tosu,c
  1863  00040C  50FA               	movf	pclath,w,c
  1864  00040E  0012               	return		;indir
  1865  000410                     i2u4_49:
  1866                           
  1867                           ;main.c: 31: }
  1868                           ;main.c: 33: c_4++;
  1869  000410  4A34               	infsnz	_c_4,f,c
  1870  000412  2A35               	incf	_c_4+1,f,c
  1871  000414  0012               	return		;funcret
  1872  000416                     __end_of_TMR0_ISR:
  1873                           	opt stack 0
  1874                           tosu	equ	0xFFF
  1875                           tosh	equ	0xFFE
  1876                           tosl	equ	0xFFD
  1877                           pclatu	equ	0xFFB
  1878                           pclath	equ	0xFFA
  1879                           tblptru	equ	0xFF8
  1880                           tblptrh	equ	0xFF7
  1881                           tblptrl	equ	0xFF6
  1882                           tablat	equ	0xFF5
  1883                           prodh	equ	0xFF4
  1884                           prodl	equ	0xFF3
  1885                           intcon	equ	0xFF2
  1886                           intcon2	equ	0xFF1
  1887                           postinc0	equ	0xFEE
  1888                           fsr0h	equ	0xFEA
  1889                           fsr0l	equ	0xFE9
  1890                           wreg	equ	0xFE8
  1891                           postdec1	equ	0xFE5
  1892                           fsr1h	equ	0xFE2
  1893                           fsr1l	equ	0xFE1
  1894                           indf2	equ	0xFDF
  1895                           postinc2	equ	0xFDE
  1896                           postdec2	equ	0xFDD
  1897                           fsr2h	equ	0xFDA
  1898                           fsr2l	equ	0xFD9
  1899                           status	equ	0xFD8
  1900                           
  1901 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  1902 ;; Defined at:
  1903 ;;		line 137 in file "mcc_generated_files/tmr0.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		None
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		_TMR0_Initialize
  1927 ;;		_TMR0_ISR
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text15
  1932  0004B6                     __ptext15:
  1933                           	opt stack 0
  1934  0004B6                     _TMR0_DefaultInterruptHandler:
  1935                           	opt stack 25
  1936                           
  1937                           ;incstack = 0
  1938  0004B6  0012               	return		;funcret
  1939  0004B8                     __end_of_TMR0_DefaultInterruptHandler:
  1940                           	opt stack 0
  1941  0000                     tosu	equ	0xFFF
  1942                           tosh	equ	0xFFE
  1943                           tosl	equ	0xFFD
  1944                           pclatu	equ	0xFFB
  1945                           pclath	equ	0xFFA
  1946                           tblptru	equ	0xFF8
  1947                           tblptrh	equ	0xFF7
  1948                           tblptrl	equ	0xFF6
  1949                           tablat	equ	0xFF5
  1950                           prodh	equ	0xFF4
  1951                           prodl	equ	0xFF3
  1952                           intcon	equ	0xFF2
  1953                           intcon2	equ	0xFF1
  1954                           postinc0	equ	0xFEE
  1955                           fsr0h	equ	0xFEA
  1956                           fsr0l	equ	0xFE9
  1957                           wreg	equ	0xFE8
  1958                           postdec1	equ	0xFE5
  1959                           fsr1h	equ	0xFE2
  1960                           fsr1l	equ	0xFE1
  1961                           indf2	equ	0xFDF
  1962                           postinc2	equ	0xFDE
  1963                           postdec2	equ	0xFDD
  1964                           fsr2h	equ	0xFDA
  1965                           fsr2l	equ	0xFD9
  1966                           status	equ	0xFD8
  1967                           tosu	equ	0xFFF
  1968                           tosh	equ	0xFFE
  1969                           tosl	equ	0xFFD
  1970                           pclatu	equ	0xFFB
  1971                           pclath	equ	0xFFA
  1972                           tblptru	equ	0xFF8
  1973                           tblptrh	equ	0xFF7
  1974                           tblptrl	equ	0xFF6
  1975                           tablat	equ	0xFF5
  1976                           prodh	equ	0xFF4
  1977                           prodl	equ	0xFF3
  1978                           intcon	equ	0xFF2
  1979                           intcon2	equ	0xFF1
  1980                           postinc0	equ	0xFEE
  1981                           fsr0h	equ	0xFEA
  1982                           fsr0l	equ	0xFE9
  1983                           wreg	equ	0xFE8
  1984                           postdec1	equ	0xFE5
  1985                           fsr1h	equ	0xFE2
  1986                           fsr1l	equ	0xFE1
  1987                           indf2	equ	0xFDF
  1988                           postinc2	equ	0xFDE
  1989                           postdec2	equ	0xFDD
  1990                           fsr2h	equ	0xFDA
  1991                           fsr2l	equ	0xFD9
  1992                           status	equ	0xFD8
  1993                           
  1994                           	psect	text16
  1995  000000                     __ptext16:
  1996                           	opt stack 0
  1997                           tosu	equ	0xFFF
  1998                           tosh	equ	0xFFE
  1999                           tosl	equ	0xFFD
  2000                           pclatu	equ	0xFFB
  2001                           pclath	equ	0xFFA
  2002                           tblptru	equ	0xFF8
  2003                           tblptrh	equ	0xFF7
  2004                           tblptrl	equ	0xFF6
  2005                           tablat	equ	0xFF5
  2006                           prodh	equ	0xFF4
  2007                           prodl	equ	0xFF3
  2008                           intcon	equ	0xFF2
  2009                           intcon2	equ	0xFF1
  2010                           postinc0	equ	0xFEE
  2011                           fsr0h	equ	0xFEA
  2012                           fsr0l	equ	0xFE9
  2013                           wreg	equ	0xFE8
  2014                           postdec1	equ	0xFE5
  2015                           fsr1h	equ	0xFE2
  2016                           fsr1l	equ	0xFE1
  2017                           indf2	equ	0xFDF
  2018                           postinc2	equ	0xFDE
  2019                           postdec2	equ	0xFDD
  2020                           fsr2h	equ	0xFDA
  2021                           fsr2l	equ	0xFD9
  2022                           status	equ	0xFD8
  2023                           
  2024                           	psect	rparam
  2025  0000                     tosu	equ	0xFFF
  2026                           tosh	equ	0xFFE
  2027                           tosl	equ	0xFFD
  2028                           pclatu	equ	0xFFB
  2029                           pclath	equ	0xFFA
  2030                           tblptru	equ	0xFF8
  2031                           tblptrh	equ	0xFF7
  2032                           tblptrl	equ	0xFF6
  2033                           tablat	equ	0xFF5
  2034                           prodh	equ	0xFF4
  2035                           prodl	equ	0xFF3
  2036                           intcon	equ	0xFF2
  2037                           intcon2	equ	0xFF1
  2038                           postinc0	equ	0xFEE
  2039                           fsr0h	equ	0xFEA
  2040                           fsr0l	equ	0xFE9
  2041                           wreg	equ	0xFE8
  2042                           postdec1	equ	0xFE5
  2043                           fsr1h	equ	0xFE2
  2044                           fsr1l	equ	0xFE1
  2045                           indf2	equ	0xFDF
  2046                           postinc2	equ	0xFDE
  2047                           postdec2	equ	0xFDD
  2048                           fsr2h	equ	0xFDA
  2049                           fsr2l	equ	0xFD9
  2050                           status	equ	0xFD8
  2051                           
  2052                           	psect	temp
  2053  00004D                     btemp:
  2054                           	opt stack 0
  2055  00004D                     	ds	1
  2056  0000                     int$flags	set	btemp
  2057  0000                     wtemp6	set	btemp+1
  2058                           tosu	equ	0xFFF
  2059                           tosh	equ	0xFFE
  2060                           tosl	equ	0xFFD
  2061                           pclatu	equ	0xFFB
  2062                           pclath	equ	0xFFA
  2063                           tblptru	equ	0xFF8
  2064                           tblptrh	equ	0xFF7
  2065                           tblptrl	equ	0xFF6
  2066                           tablat	equ	0xFF5
  2067                           prodh	equ	0xFF4
  2068                           prodl	equ	0xFF3
  2069                           intcon	equ	0xFF2
  2070                           intcon2	equ	0xFF1
  2071                           postinc0	equ	0xFEE
  2072                           fsr0h	equ	0xFEA
  2073                           fsr0l	equ	0xFE9
  2074                           wreg	equ	0xFE8
  2075                           postdec1	equ	0xFE5
  2076                           fsr1h	equ	0xFE2
  2077                           fsr1l	equ	0xFE1
  2078                           indf2	equ	0xFDF
  2079                           postinc2	equ	0xFDE
  2080                           postdec2	equ	0xFDD
  2081                           fsr2h	equ	0xFDA
  2082                           fsr2l	equ	0xFD9
  2083                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         26
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      76
    BANK0           160      3       3
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->___lwmod
    ___lwmod->___lwdiv
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___lwmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1488
                                              1 BANK0      2     2      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                _ADC_StartConversion
                  _SYSTEM_Initialize
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     772
                                             25 COMRAM     4     0      4
                                              0 BANK0      1     1      0
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                             18 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                     _ADC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  2     0      2       0
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              4     2      2       0
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0       0
                                              0 COMRAM    18    18      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_IsConversionDone
   _ADC_StartConversion
   _SYSTEM_Initialize
     _ADC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      3       3       5        1.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1D      4C       1       80.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F      12        0.0%
DATA                 0      0      4F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jul 31 11:23:22 2019

                                       _a 0046                                         _c 0042  
                                       _d 002C                                         _i 0030  
                                       _j 002E                                         _x 002A  
                                       _y 0028                                         _z 0026  
                                      u10 04A0                           _timer0ReloadVal 004C  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                             __CFG_LVP$ON 000000                                       l222 00D8  
                                     l224 0198                                       l225 01E6  
                                     l226 0234                                       l227 0284  
                                     l219 00B4                                       l228 02D4  
                                     l640 0322                                       l650 0366  
                                     l635 02F8                                       l636 02F0  
                                     l645 0344                                       l646 033C  
                                     l639 0318                                       l649 035C  
                            __CFG_CPB$OFF 000000                                       u260 02FC  
                                     u430 0348                                       u514 022A  
                                     u450 00C4                              __CFG_CPD$OFF 000000  
                                     u515 0226                                       u534 027A  
                                     u535 0276                                       u554 02CA  
                                     u555 02C6                                       u494 01DC  
                                     u495 01D8                                       _Seg 0038  
                                     _c_4 0034                                       tosl 000FFD  
                                     wreg 000FE8                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    i2l52 005C                                      _WPUB 000F61  
                                    _main 00AC                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 004D                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00A8                             __CFG_IESO$OFF 000000  
                            ___param_bank 000000                   __end_of_TMR0_Initialize 0438  
          ??_TMR0_DefaultInterruptHandler 0001            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 0498                                     ?_main 0001  
                                   _T0CON 000FD5                            __CFG_DEBUG$OFF 000000  
                         __end_of___lwdiv 032C                           __end_of___lwmod 0370  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96          __size_of_ADC_GetConversionResult 0014  
       __size_of_TMR0_SetInterruptHandler 000A                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
               ?_TMR0_SetInterruptHandler 0013                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_TMR0_ISR 0416  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                                   _digit 001E                        __CFG_MCLRE$EXTMCLR 000000  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                                     wtemp6 004E  
                          __CFG_HFOFST$ON 000000                            __CFG_PBADEN$ON 000000  
                         __initialization 03B0                              __end_of_main 02DA  
             ?_INTERRUPT_InterruptManager 0001                                    ??_main 0061  
                           __activetblptr 000002                            _convertedValue 0032  
           __size_of_ADC_IsConversionDone 000C                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                                  _ADRESH 000FC4                                    _ADRESL 000FC3  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                            __CFG_WDTEN$OFF 000000  
                                  _OSCCON 000FD3                                    i2u4_48 03FC  
                                  i2u4_49 0410                            __CFG_XINST$OFF 000000  
                                  _c_scan 0036                            __CFG_STVREN$ON 000000  
                               ??___lwdiv 0017                                 ??___lwmod 001E  
                        ?_TMR0_Initialize 0001                                    clear_0 03D6  
                            __pdataCOMRAM 0038                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
TMR0_SetInterruptHandler@InterruptHandler 0013             __size_of_INTERRUPT_Initialize 0004  
                       _SYSTEM_Initialize 0438                                __accesstop 0060  
                 __end_of__initialization 03DC                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001              __size_of_ADC_StartConversion 0004  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 0015  
                               ?_TMR0_ISR 0001                   _ADC_GetConversionResult 0464  
               __end_of_SYSTEM_Initialize 044E                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 004A                        __CFG_CCP2MX$PORTC1 000000  
        __end_of_TMR0_SetInterruptHandler 04AE                                ??_TMR0_ISR 0001  
                      __CFG_CCP3MX$PORTB5 000000                   __size_of_ADC_Initialize 0016  
                                 _OSCCON2 000FD2                                   _OSCTUNE 000F9B  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000                                   ___lwdiv 02DA  
                                 ___lwmod 032C                 ??_ADC_GetConversionResult 0015  
                                 __pcinit 03B0                                   __ramtop 1000  
                                 __ptext0 00AC                                   __ptext1 032C  
                                 __ptext2 02DA                                   __ptext3 0438  
                                 __ptext4 0416                                   __ptext5 04A4  
                                 __ptext6 0370                                   __ptext7 048A  
                                 __ptext8 04AE                                   __ptext9 044E  
                               _T0CONbits 000FD5                     _OSCILLATOR_Initialize 048A  
                ??_PIN_MANAGER_Initialize 0013                __size_of_SYSTEM_Initialize 0016  
                    end_of_initialization 03DC                             __Lmediumconst 0000  
            __end_of_ADC_IsConversionDone 04A4                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                  _TMR0_SetInterruptHandler 04A4  
                     _ADC_StartConversion 04B2                      ?_ADC_StartConversion 0013  
            __end_of_INTERRUPT_Initialize 04B2                             __pidataCOMRAM 0478  
                       __size_of_TMR0_ISR 002C                            _ADC_Initialize 044E  
                  ?_OSCILLATOR_Initialize 0001                       start_initialization 03B0  
                __size_of_TMR0_Initialize 0022           __size_of_PIN_MANAGER_Initialize 0040  
                   ??_ADC_StartConversion 0015                    __end_of_ADC_Initialize 0464  
                             __pbssCOMRAM 001E                             __pcstackBANK0 0060  
                    _ADC_IsConversionDone 0498                     _TMR0_InterruptHandler 004A  
                        ___lwdiv@dividend 0013                    _PIN_MANAGER_Initialize 0370  
                               __pintcode 0008                                  ?___lwdiv 0013  
                                ?___lwmod 001A                           ?_ADC_Initialize 0001  
            ??_INTERRUPT_InterruptManager 0001                          __CFG_PRICLKEN$ON 000000  
                   ?_ADC_IsConversionDone 0001                          ___lwdiv@quotient 0017  
                    _INTERRUPT_Initialize 04AE                         ??_TMR0_Initialize 0015  
     __size_of_INTERRUPT_InterruptManager 00A0                ??_TMR0_SetInterruptHandler 0015  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _TMR0_ISR 03EA                                _ADCON0bits 000FC2  
                             _INTCON2bits 000FF1                                 copy_data0 03C4  
                   ?_INTERRUPT_Initialize 0001                                  __Hrparam 0000  
                                __Lrparam 0000                  ?_ADC_GetConversionResult 0013  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTD2 000000  
                 ??_OSCILLATOR_Initialize 0013                          __size_of___lwdiv 0052  
                        __size_of___lwmod 0044                    ??_ADC_IsConversionDone 0013  
                         ___lwdiv@divisor 0015                           ___lwdiv@counter 0019  
                                __ptext10 04B2                                  __ptext11 0498  
                                __ptext12 0464                                  __ptext14 03EA  
                                __ptext15 04B6                                  __ptext16 0000  
                           __size_of_main 022E      __end_of_TMR0_DefaultInterruptHandler 04B8  
   __size_of_TMR0_DefaultInterruptHandler 0002              _TMR0_DefaultInterruptHandler 04B6  
                                int$flags 004D        __end_of_INTERRUPT_InterruptManager 00A8  
              _INTERRUPT_InterruptManager 0008                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 0013                                  intlevel2 0000  
             __end_of_ADC_StartConversion 04B6                          ___lwmod@dividend 001A  
                 ?_PIN_MANAGER_Initialize 0001           __end_of_ADC_GetConversionResult 0478  
                        ??_ADC_Initialize 0013             ?_TMR0_DefaultInterruptHandler 0001  
                         ___lwmod@divisor 001C                           _TMR0_Initialize 0416  
                         ___lwmod@counter 0060                         __CFG_T3CMX$PORTC0 000000  
          __end_of_PIN_MANAGER_Initialize 03B0                         __CFG_FOSC$INTIO67 000000  
