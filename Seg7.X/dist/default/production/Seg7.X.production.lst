

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Aug 11 13:40:56 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           ; Version 1.45
    31                           ; Generated 16/11/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F46K22 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	idataCOMRAM
    66  000402                     __pidataCOMRAM:
    67                           	opt stack 0
    68                           
    69                           ;initializer for _Seg7
    70  000402  C0                 	db	192
    71  000403  F9                 	db	249
    72  000404  A4                 	db	164
    73  000405  B0                 	db	176
    74  000406  99                 	db	153
    75  000407  92                 	db	146
    76  000408  82                 	db	130
    77  000409  F8                 	db	248
    78  00040A  80                 	db	128
    79  00040B  90                 	db	144
    80                           
    81                           ;initializer for _show
    82  00040C  08                 	db	8
    83  00040D  04                 	db	4
    84  00040E  02                 	db	2
    85  00040F  01                 	db	1
    86                           
    87                           	psect	nvCOMRAM
    88  00003D                     __pnvCOMRAM:
    89                           	opt stack 0
    90  00003D                     _TMR0_InterruptHandler:
    91                           	opt stack 0
    92  00003D                     	ds	2
    93  00003F                     _timer0ReloadVal:
    94                           	opt stack 0
    95  00003F                     	ds	1
    96  0000                     _ANSELA	set	3896
    97  0000                     _ANSELE	set	3900
    98  0000                     _ANSELB	set	3897
    99  0000                     _ANSELC	set	3898
   100  0000                     _ANSELD	set	3899
   101  0000                     _RCONbits	set	4048
   102  0000                     _T0CONbits	set	4053
   103  0000                     _T0CON	set	4053
   104  0000                     _TMR0L	set	4054
   105  0000                     _TMR0H	set	4055
   106  0000                     _INTCONbits	set	4082
   107  0000                     _INTCON2bits	set	4081
   108  0000                     _WPUB	set	3937
   109  0000                     _TRISD	set	3989
   110  0000                     _TRISC	set	3988
   111  0000                     _TRISB	set	3987
   112  0000                     _TRISA	set	3986
   113  0000                     _TRISE	set	3990
   114  0000                     _LATC	set	3979
   115  0000                     _LATB	set	3978
   116  0000                     _LATA	set	3977
   117  0000                     _LATD	set	3980
   118  0000                     _LATE	set	3981
   119  0000                     _OSCTUNE	set	3995
   120  0000                     _OSCCON2	set	4050
   121  0000                     _OSCCON	set	4051
   122                           
   123                           ; #config settings
   124  0000                     
   125                           	psect	cinit
   126  00036E                     __pcinit:
   127                           	opt stack 0
   128  00036E                     start_initialization:
   129                           	opt stack 0
   130  00036E                     __initialization:
   131                           	opt stack 0
   132                           
   133                           ; Initialize objects allocated to COMRAM (14 bytes)
   134                           ; load TBLPTR registers with __pidataCOMRAM
   135  00036E  0E02               	movlw	low __pidataCOMRAM
   136  000370  6EF6               	movwf	tblptrl,c
   137  000372  0E04               	movlw	high __pidataCOMRAM
   138  000374  6EF7               	movwf	tblptrh,c
   139  000376  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   140  000378  6EF8               	movwf	tblptru,c
   141  00037A  EE00  F02F         	lfsr	0,__pdataCOMRAM
   142  00037E  EE10 F00E          	lfsr	1,14
   143  000382                     copy_data0:
   144  000382  0009               	tblrd		*+
   145  000384  CFF5 FFEE          	movff	tablat,postinc0
   146  000388  50E5               	movf	postdec1,w,c
   147  00038A  50E1               	movf	fsr1l,w,c
   148  00038C  E1FA               	bnz	copy_data0
   149                           
   150                           ; Clear objects allocated to COMRAM (14 bytes)
   151  00038E  EE00  F021         	lfsr	0,__pbssCOMRAM
   152  000392  0E0E               	movlw	14
   153  000394                     clear_0:
   154  000394  6AEE               	clrf	postinc0,c
   155  000396  06E8               	decf	wreg,f,c
   156  000398  E1FD               	bnz	clear_0
   157  00039A                     end_of_initialization:
   158                           	opt stack 0
   159  00039A                     __end_of__initialization:
   160                           	opt stack 0
   161  00039A  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   162  00039C  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   163  00039E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   164  0003A0  6EF8               	movwf	tblptru,c
   165  0003A2  0100               	movlb	0
   166  0003A4  EF0F  F002         	goto	_main	;jump to C main() function
   167                           tblptru	equ	0xFF8
   168                           tblptrh	equ	0xFF7
   169                           tblptrl	equ	0xFF6
   170                           tablat	equ	0xFF5
   171                           postinc0	equ	0xFEE
   172                           wreg	equ	0xFE8
   173                           postdec1	equ	0xFE5
   174                           fsr1l	equ	0xFE1
   175                           
   176                           	psect	bssCOMRAM
   177  000021                     __pbssCOMRAM:
   178                           	opt stack 0
   179  000021                     _seg_display:
   180                           	opt stack 0
   181  000021                     	ds	4
   182  000025                     _digit:
   183                           	opt stack 0
   184  000025                     	ds	4
   185  000029                     _k:
   186                           	opt stack 0
   187  000029                     	ds	2
   188  00002B                     _i:
   189                           	opt stack 0
   190  00002B                     	ds	2
   191  00002D                     _scan_cnt:
   192                           	opt stack 0
   193  00002D                     	ds	1
   194  00002E                     _c_scan:
   195                           	opt stack 0
   196  00002E                     	ds	1
   197                           tblptru	equ	0xFF8
   198                           tblptrh	equ	0xFF7
   199                           tblptrl	equ	0xFF6
   200                           tablat	equ	0xFF5
   201                           postinc0	equ	0xFEE
   202                           wreg	equ	0xFE8
   203                           postdec1	equ	0xFE5
   204                           fsr1l	equ	0xFE1
   205                           
   206                           	psect	dataCOMRAM
   207  00002F                     __pdataCOMRAM:
   208                           	opt stack 0
   209  00002F                     _Seg7:
   210                           	opt stack 0
   211  00002F                     	ds	10
   212  000039                     _show:
   213                           	opt stack 0
   214  000039                     	ds	4
   215                           tblptru	equ	0xFF8
   216                           tblptrh	equ	0xFF7
   217                           tblptrl	equ	0xFF6
   218                           tablat	equ	0xFF5
   219                           postinc0	equ	0xFEE
   220                           wreg	equ	0xFE8
   221                           postdec1	equ	0xFE5
   222                           fsr1l	equ	0xFE1
   223                           
   224                           	psect	cstackCOMRAM
   225  000001                     __pcstackCOMRAM:
   226                           	opt stack 0
   227  000001                     ??_INTERRUPT_InterruptManager:
   228  000001                     
   229                           ; 1 bytes @ 0x0
   230  000001                     	ds	18
   231  000013                     ?___awdiv:
   232                           	opt stack 0
   233  000013                     display_7seg1@c_scan:
   234                           	opt stack 0
   235  000013                     TMR0_SetInterruptHandler@InterruptHandler:
   236                           	opt stack 0
   237  000013                     ___awdiv@dividend:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x12
   241  000013                     	ds	2
   242  000015                     ___awdiv@divisor:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x14
   246  000015                     	ds	2
   247  000017                     ___awdiv@counter:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x16
   251  000017                     	ds	1
   252  000018                     ___awdiv@sign:
   253                           	opt stack 0
   254                           
   255                           ; 1 bytes @ 0x17
   256  000018                     	ds	1
   257  000019                     ___awdiv@quotient:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x18
   261  000019                     	ds	2
   262  00001B                     ?___awmod:
   263                           	opt stack 0
   264  00001B                     ___awmod@dividend:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x1A
   268  00001B                     	ds	2
   269  00001D                     ___awmod@divisor:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x1C
   273  00001D                     	ds	2
   274  00001F                     ___awmod@counter:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x1E
   278  00001F                     	ds	1
   279  000020                     ___awmod@sign:
   280                           	opt stack 0
   281                           
   282                           ; 1 bytes @ 0x1F
   283  000020                     	ds	1
   284  000021                     tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           postdec1	equ	0xFE5
   291                           fsr1l	equ	0xFE1
   292                           
   293                           ; 1 bytes @ 0x20
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 71 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   317 ;;Total ram usage:        0 bytes
   318 ;; Hardware stack levels required when called:    6
   319 ;; This function calls:
   320 ;;		_SYSTEM_Initialize
   321 ;;		_calculate_output
   322 ;; This function is called by:
   323 ;;		Startup code after reset
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text0
   328  00041E                     __ptext0:
   329                           	opt stack 0
   330  00041E                     _main:
   331                           	opt stack 25
   332                           
   333                           ;main.c: 74: SYSTEM_Initialize();
   334                           
   335                           ;incstack = 0
   336  00041E  ECF8  F001         	call	_SYSTEM_Initialize	;wreg free
   337  000422                     
   338                           ;main.c: 76: {
   339                           ;main.c: 77: calculate_output();
   340  000422  EC56  F000         	call	_calculate_output	;wreg free
   341  000426  D7FD               	goto	l166
   342  000428                     __end_of_main:
   343                           	opt stack 0
   344                           tblptru	equ	0xFF8
   345                           tblptrh	equ	0xFF7
   346                           tblptrl	equ	0xFF6
   347                           tablat	equ	0xFF5
   348                           postinc0	equ	0xFEE
   349                           wreg	equ	0xFE8
   350                           postdec1	equ	0xFE5
   351                           fsr1l	equ	0xFE1
   352                           
   353 ;; *************** function _calculate_output *****************
   354 ;; Defined at:
   355 ;;		line 53 in file "main.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   373 ;;Total ram usage:        0 bytes
   374 ;; Hardware stack levels used:    1
   375 ;; Hardware stack levels required when called:    4
   376 ;; This function calls:
   377 ;;		___awdiv
   378 ;;		___awmod
   379 ;;		_display_7seg1
   380 ;; This function is called by:
   381 ;;		_main
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           	psect	text1
   386  0000AC                     __ptext1:
   387                           	opt stack 0
   388  0000AC                     _calculate_output:
   389                           	opt stack 26
   390                           
   391                           ;main.c: 55: digit[3] = k % 10;
   392                           
   393                           ;incstack = 0
   394  0000AC  C029  F01B         	movff	_k,___awmod@dividend
   395  0000B0  C02A  F01C         	movff	_k+1,___awmod@dividend+1
   396  0000B4  0E00               	movlw	0
   397  0000B6  6E1E               	movwf	___awmod@divisor+1,c
   398  0000B8  0E0A               	movlw	10
   399  0000BA  6E1D               	movwf	___awmod@divisor,c
   400  0000BC  EC5E  F001         	call	___awmod	;wreg free
   401  0000C0  501B               	movf	?___awmod,w,c
   402  0000C2  6E28               	movwf	_digit+3,c
   403                           
   404                           ;main.c: 56: digit[2] = (k/10) % 10;
   405  0000C4  0E00               	movlw	0
   406  0000C6  6E16               	movwf	___awdiv@divisor+1,c
   407  0000C8  0E0A               	movlw	10
   408  0000CA  6E15               	movwf	___awdiv@divisor,c
   409  0000CC  C029  F013         	movff	_k,___awdiv@dividend
   410  0000D0  C02A  F014         	movff	_k+1,___awdiv@dividend+1
   411  0000D4  EC1C  F001         	call	___awdiv	;wreg free
   412  0000D8  C013  F01B         	movff	?___awdiv,___awmod@dividend
   413  0000DC  C014  F01C         	movff	?___awdiv+1,___awmod@dividend+1
   414  0000E0  0E00               	movlw	0
   415  0000E2  6E1E               	movwf	___awmod@divisor+1,c
   416  0000E4  0E0A               	movlw	10
   417  0000E6  6E1D               	movwf	___awmod@divisor,c
   418  0000E8  EC5E  F001         	call	___awmod	;wreg free
   419  0000EC  501B               	movf	?___awmod,w,c
   420  0000EE  6E27               	movwf	_digit+2,c
   421                           
   422                           ;main.c: 57: digit[1] = (k/100) % 10;
   423  0000F0  0E00               	movlw	0
   424  0000F2  6E16               	movwf	___awdiv@divisor+1,c
   425  0000F4  0E64               	movlw	100
   426  0000F6  6E15               	movwf	___awdiv@divisor,c
   427  0000F8  C029  F013         	movff	_k,___awdiv@dividend
   428  0000FC  C02A  F014         	movff	_k+1,___awdiv@dividend+1
   429  000100  EC1C  F001         	call	___awdiv	;wreg free
   430  000104  C013  F01B         	movff	?___awdiv,___awmod@dividend
   431  000108  C014  F01C         	movff	?___awdiv+1,___awmod@dividend+1
   432  00010C  0E00               	movlw	0
   433  00010E  6E1E               	movwf	___awmod@divisor+1,c
   434  000110  0E0A               	movlw	10
   435  000112  6E1D               	movwf	___awmod@divisor,c
   436  000114  EC5E  F001         	call	___awmod	;wreg free
   437  000118  501B               	movf	?___awmod,w,c
   438  00011A  6E26               	movwf	_digit+1,c
   439                           
   440                           ;main.c: 58: digit[0] = (k/1000);
   441  00011C  C029  F013         	movff	_k,___awdiv@dividend
   442  000120  C02A  F014         	movff	_k+1,___awdiv@dividend+1
   443  000124  0E03               	movlw	3
   444  000126  6E16               	movwf	___awdiv@divisor+1,c
   445  000128  0EE8               	movlw	232
   446  00012A  6E15               	movwf	___awdiv@divisor,c
   447  00012C  EC1C  F001         	call	___awdiv	;wreg free
   448  000130  5013               	movf	?___awdiv,w,c
   449  000132  6E25               	movwf	_digit,c
   450                           
   451                           ;main.c: 60: for (i=0;i<=50;i++)
   452  000134  0E00               	movlw	0
   453  000136  6E2C               	movwf	_i+1,c
   454  000138  0E00               	movlw	0
   455  00013A  6E2B               	movwf	_i,c
   456  00013C                     l1111:
   457  00013C  BE2C               	btfsc	_i+1,7,c
   458  00013E  D006               	goto	l158
   459  000140  502C               	movf	_i+1,w,c
   460  000142  E10A               	bnz	l1121
   461  000144  0E33               	movlw	51
   462  000146  5C2B               	subwf	_i,w,c
   463  000148  B0D8               	btfsc	status,0,c
   464  00014A  D006               	goto	u370
   465  00014C                     l158:
   466                           
   467                           ;main.c: 61: {
   468                           ;main.c: 62: display_7seg1(c_scan);
   469  00014C  502E               	movf	_c_scan,w,c
   470  00014E  ECBB  F000         	call	_display_7seg1
   471  000152  4A2B               	infsnz	_i,f,c
   472  000154  2A2C               	incf	_i+1,f,c
   473  000156  D7F2               	goto	l1111
   474  000158                     u370:
   475  000158                     l1121:
   476                           
   477                           ;main.c: 63: }
   478                           ;main.c: 65: k++;
   479  000158  4A29               	infsnz	_k,f,c
   480  00015A  2A2A               	incf	_k+1,f,c
   481                           
   482                           ;main.c: 66: if(k>9999)
   483  00015C  BE2A               	btfsc	_k+1,7,c
   484  00015E  0012               	return	
   485  000160  0E10               	movlw	16
   486  000162  5C29               	subwf	_k,w,c
   487  000164  0E27               	movlw	39
   488  000166  582A               	subwfb	_k+1,w,c
   489  000168  A0D8               	btfss	status,0,c
   490  00016A  0012               	return	
   491                           
   492                           ;main.c: 67: {
   493                           ;main.c: 68: k=0;
   494  00016C  0E00               	movlw	0
   495  00016E  6E2A               	movwf	_k+1,c
   496  000170  0E00               	movlw	0
   497  000172  6E29               	movwf	_k,c
   498  000174  0012               	return	
   499  000176                     __end_of_calculate_output:
   500                           	opt stack 0
   501                           tblptru	equ	0xFF8
   502                           tblptrh	equ	0xFF7
   503                           tblptrl	equ	0xFF6
   504                           tablat	equ	0xFF5
   505                           postinc0	equ	0xFEE
   506                           wreg	equ	0xFE8
   507                           postdec1	equ	0xFE5
   508                           fsr1l	equ	0xFE1
   509                           status	equ	0xFD8
   510                           
   511 ;; *************** function _display_7seg1 *****************
   512 ;; Defined at:
   513 ;;		line 14 in file "main.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;  c_scan          1    wreg     unsigned char 
   516 ;; Auto vars:     Size  Location     Type
   517 ;;  c_scan          1   18[COMRAM] unsigned char 
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;Total ram usage:        1 bytes
   532 ;; Hardware stack levels used:    1
   533 ;; Hardware stack levels required when called:    3
   534 ;; This function calls:
   535 ;;		Nothing
   536 ;; This function is called by:
   537 ;;		_calculate_output
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text2
   542  000176                     __ptext2:
   543                           	opt stack 0
   544  000176                     _display_7seg1:
   545                           	opt stack 26
   546                           
   547                           ;incstack = 0
   548                           ;display_7seg1@c_scan stored from wreg
   549  000176  6E13               	movwf	display_7seg1@c_scan,c
   550                           
   551                           ;main.c: 16: if (c_scan==0)
   552  000178  5013               	movf	display_7seg1@c_scan,w,c
   553  00017A  A4D8               	btfss	status,2,c
   554  00017C  D014               	goto	l151
   555                           
   556                           ;main.c: 17: {
   557                           ;main.c: 18: LATB=0xff;
   558  00017E  688A               	setf	3978,c	;volatile
   559                           
   560                           ;main.c: 19: LATC=0x00;
   561  000180  0E00               	movlw	0
   562  000182  6E8B               	movwf	3979,c	;volatile
   563                           
   564                           ;main.c: 20: LATC=show[0];
   565  000184  C039  FF8B         	movff	_show,3979	;volatile
   566                           
   567                           ;main.c: 21: LATB=Seg7[digit[0]];
   568  000188  5025               	movf	_digit,w,c
   569  00018A  0D01               	mullw	1
   570  00018C  0E2F               	movlw	low _Seg7
   571  00018E  24F3               	addwf	prodl,w,c
   572  000190  6ED9               	movwf	fsr2l,c
   573  000192  0E00               	movlw	high _Seg7
   574  000194  20F4               	addwfc	prodh,w,c
   575  000196  6EDA               	movwf	fsr2h,c
   576  000198  50DF               	movf	indf2,w,c
   577  00019A  6E8A               	movwf	3978,c	;volatile
   578                           
   579                           ;main.c: 22: _delay((unsigned long)((2)*(1000000/4000.0)));
   580  00019C  0EA6               	movlw	166
   581  00019E                     u397:
   582  00019E  2EE8               	decfsz	wreg,f,c
   583  0001A0  D7FE               	bra	u397
   584  0001A2  D000               	nop2	
   585                           
   586                           ;main.c: 23: c_scan++;
   587  0001A4  2A13               	incf	display_7seg1@c_scan,f,c
   588  0001A6                     l151:
   589                           
   590                           ;main.c: 24: }
   591                           ;main.c: 25: if (c_scan==1)
   592  0001A6  0413               	decf	display_7seg1@c_scan,w,c
   593  0001A8  A4D8               	btfss	status,2,c
   594  0001AA  D014               	goto	l152
   595                           
   596                           ;main.c: 26: {
   597                           ;main.c: 27: LATB=0xff;
   598  0001AC  688A               	setf	3978,c	;volatile
   599                           
   600                           ;main.c: 28: LATC=0x00;
   601  0001AE  0E00               	movlw	0
   602  0001B0  6E8B               	movwf	3979,c	;volatile
   603                           
   604                           ;main.c: 29: LATC=show[1];
   605  0001B2  C03A  FF8B         	movff	_show+1,3979	;volatile
   606                           
   607                           ;main.c: 30: LATB=Seg7[digit[1]];
   608  0001B6  5026               	movf	_digit+1,w,c
   609  0001B8  0D01               	mullw	1
   610  0001BA  0E2F               	movlw	low _Seg7
   611  0001BC  24F3               	addwf	prodl,w,c
   612  0001BE  6ED9               	movwf	fsr2l,c
   613  0001C0  0E00               	movlw	high _Seg7
   614  0001C2  20F4               	addwfc	prodh,w,c
   615  0001C4  6EDA               	movwf	fsr2h,c
   616  0001C6  50DF               	movf	indf2,w,c
   617  0001C8  6E8A               	movwf	3978,c	;volatile
   618                           
   619                           ;main.c: 31: _delay((unsigned long)((2)*(1000000/4000.0)));
   620  0001CA  0EA6               	movlw	166
   621  0001CC                     u407:
   622  0001CC  2EE8               	decfsz	wreg,f,c
   623  0001CE  D7FE               	bra	u407
   624  0001D0  D000               	nop2	
   625                           
   626                           ;main.c: 32: c_scan++;
   627  0001D2  2A13               	incf	display_7seg1@c_scan,f,c
   628  0001D4                     l152:
   629                           
   630                           ;main.c: 33: }
   631                           ;main.c: 34: if (c_scan==2)
   632  0001D4  0E02               	movlw	2
   633  0001D6  1813               	xorwf	display_7seg1@c_scan,w,c
   634  0001D8  A4D8               	btfss	status,2,c
   635  0001DA  D014               	goto	l153
   636                           
   637                           ;main.c: 35: {
   638                           ;main.c: 36: LATB=0xff;
   639  0001DC  688A               	setf	3978,c	;volatile
   640                           
   641                           ;main.c: 37: LATC=0x00;
   642  0001DE  0E00               	movlw	0
   643  0001E0  6E8B               	movwf	3979,c	;volatile
   644                           
   645                           ;main.c: 38: LATC=show[2];
   646  0001E2  C03B  FF8B         	movff	_show+2,3979	;volatile
   647                           
   648                           ;main.c: 39: LATB=Seg7[digit[2]];
   649  0001E6  5027               	movf	_digit+2,w,c
   650  0001E8  0D01               	mullw	1
   651  0001EA  0E2F               	movlw	low _Seg7
   652  0001EC  24F3               	addwf	prodl,w,c
   653  0001EE  6ED9               	movwf	fsr2l,c
   654  0001F0  0E00               	movlw	high _Seg7
   655  0001F2  20F4               	addwfc	prodh,w,c
   656  0001F4  6EDA               	movwf	fsr2h,c
   657  0001F6  50DF               	movf	indf2,w,c
   658  0001F8  6E8A               	movwf	3978,c	;volatile
   659                           
   660                           ;main.c: 40: _delay((unsigned long)((2)*(1000000/4000.0)));
   661  0001FA  0EA6               	movlw	166
   662  0001FC                     u417:
   663  0001FC  2EE8               	decfsz	wreg,f,c
   664  0001FE  D7FE               	bra	u417
   665  000200  D000               	nop2	
   666                           
   667                           ;main.c: 41: c_scan++;
   668  000202  2A13               	incf	display_7seg1@c_scan,f,c
   669  000204                     l153:
   670                           
   671                           ;main.c: 42: }
   672                           ;main.c: 43: if (c_scan==3)
   673  000204  0E03               	movlw	3
   674  000206  1813               	xorwf	display_7seg1@c_scan,w,c
   675  000208  A4D8               	btfss	status,2,c
   676  00020A  0012               	return	
   677                           
   678                           ;main.c: 44: {
   679                           ;main.c: 45: LATB=0xff;
   680  00020C  688A               	setf	3978,c	;volatile
   681                           
   682                           ;main.c: 46: LATC=0x00;
   683  00020E  0E00               	movlw	0
   684  000210  6E8B               	movwf	3979,c	;volatile
   685                           
   686                           ;main.c: 47: LATC=show[3];
   687  000212  C03C  FF8B         	movff	_show+3,3979	;volatile
   688                           
   689                           ;main.c: 48: LATB=Seg7[digit[3]];
   690  000216  5028               	movf	_digit+3,w,c
   691  000218  0D01               	mullw	1
   692  00021A  0E2F               	movlw	low _Seg7
   693  00021C  24F3               	addwf	prodl,w,c
   694  00021E  6ED9               	movwf	fsr2l,c
   695  000220  0E00               	movlw	high _Seg7
   696  000222  20F4               	addwfc	prodh,w,c
   697  000224  6EDA               	movwf	fsr2h,c
   698  000226  50DF               	movf	indf2,w,c
   699  000228  6E8A               	movwf	3978,c	;volatile
   700                           
   701                           ;main.c: 49: _delay((unsigned long)((2)*(1000000/4000.0)));
   702  00022A  0EA6               	movlw	166
   703  00022C                     u427:
   704  00022C  2EE8               	decfsz	wreg,f,c
   705  00022E  D7FE               	bra	u427
   706  000230  D000               	nop2	
   707                           
   708                           ;main.c: 50: c_scan=0;
   709  000232  0E00               	movlw	0
   710  000234  6E13               	movwf	display_7seg1@c_scan,c
   711  000236  0012               	return	
   712  000238                     __end_of_display_7seg1:
   713                           	opt stack 0
   714                           tblptru	equ	0xFF8
   715                           tblptrh	equ	0xFF7
   716                           tblptrl	equ	0xFF6
   717                           tablat	equ	0xFF5
   718                           prodh	equ	0xFF4
   719                           prodl	equ	0xFF3
   720                           postinc0	equ	0xFEE
   721                           wreg	equ	0xFE8
   722                           postdec1	equ	0xFE5
   723                           fsr1l	equ	0xFE1
   724                           indf2	equ	0xFDF
   725                           fsr2h	equ	0xFDA
   726                           fsr2l	equ	0xFD9
   727                           status	equ	0xFD8
   728                           
   729 ;; *************** function ___awmod *****************
   730 ;; Defined at:
   731 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  dividend        2   26[COMRAM] int 
   734 ;;  divisor         2   28[COMRAM] int 
   735 ;; Auto vars:     Size  Location     Type
   736 ;;  sign            1   31[COMRAM] unsigned char 
   737 ;;  counter         1   30[COMRAM] unsigned char 
   738 ;; Return value:  Size  Location     Type
   739 ;;                  2   26[COMRAM] int 
   740 ;; Registers used:
   741 ;;		wreg, status,2, status,0
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   747 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;Total ram usage:        6 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; Hardware stack levels required when called:    3
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_calculate_output
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           	psect	text3
   762  0002BC                     __ptext3:
   763                           	opt stack 0
   764  0002BC                     ___awmod:
   765                           	opt stack 26
   766                           
   767                           ;incstack = 0
   768  0002BC  0E00               	movlw	0
   769  0002BE  6E20               	movwf	___awmod@sign,c
   770  0002C0  AE1C               	btfss	___awmod@dividend+1,7,c
   771  0002C2  D006               	goto	l350
   772  0002C4  6C1B               	negf	___awmod@dividend,c
   773  0002C6  1E1C               	comf	___awmod@dividend+1,f,c
   774  0002C8  B0D8               	btfsc	status,0,c
   775  0002CA  2A1C               	incf	___awmod@dividend+1,f,c
   776  0002CC  0E01               	movlw	1
   777  0002CE  6E20               	movwf	___awmod@sign,c
   778  0002D0                     l350:
   779  0002D0  AE1E               	btfss	___awmod@divisor+1,7,c
   780  0002D2  D004               	goto	l351
   781  0002D4  6C1D               	negf	___awmod@divisor,c
   782  0002D6  1E1E               	comf	___awmod@divisor+1,f,c
   783  0002D8  B0D8               	btfsc	status,0,c
   784  0002DA  2A1E               	incf	___awmod@divisor+1,f,c
   785  0002DC                     l351:
   786  0002DC  501D               	movf	___awmod@divisor,w,c
   787  0002DE  101E               	iorwf	___awmod@divisor+1,w,c
   788  0002E0  B4D8               	btfsc	status,2,c
   789  0002E2  D018               	goto	l358
   790  0002E4  0E01               	movlw	1
   791  0002E6  6E1F               	movwf	___awmod@counter,c
   792  0002E8  D004               	goto	l353
   793  0002EA  90D8               	bcf	status,0,c
   794  0002EC  361D               	rlcf	___awmod@divisor,f,c
   795  0002EE  361E               	rlcf	___awmod@divisor+1,f,c
   796  0002F0  2A1F               	incf	___awmod@counter,f,c
   797  0002F2                     l353:
   798  0002F2  AE1E               	btfss	___awmod@divisor+1,7,c
   799  0002F4  D7FA               	goto	l354
   800  0002F6                     u330:
   801  0002F6  501D               	movf	___awmod@divisor,w,c
   802  0002F8  5C1B               	subwf	___awmod@dividend,w,c
   803  0002FA  501E               	movf	___awmod@divisor+1,w,c
   804  0002FC  581C               	subwfb	___awmod@dividend+1,w,c
   805  0002FE  A0D8               	btfss	status,0,c
   806  000300  D004               	goto	l357
   807  000302  501D               	movf	___awmod@divisor,w,c
   808  000304  5E1B               	subwf	___awmod@dividend,f,c
   809  000306  501E               	movf	___awmod@divisor+1,w,c
   810  000308  5A1C               	subwfb	___awmod@dividend+1,f,c
   811  00030A                     l357:
   812  00030A  90D8               	bcf	status,0,c
   813  00030C  321E               	rrcf	___awmod@divisor+1,f,c
   814  00030E  321D               	rrcf	___awmod@divisor,f,c
   815  000310  2E1F               	decfsz	___awmod@counter,f,c
   816  000312  D7F1               	goto	u330
   817  000314                     l358:
   818  000314  5020               	movf	___awmod@sign,w,c
   819  000316  B4D8               	btfsc	status,2,c
   820  000318  D004               	goto	l359
   821  00031A  6C1B               	negf	___awmod@dividend,c
   822  00031C  1E1C               	comf	___awmod@dividend+1,f,c
   823  00031E  B0D8               	btfsc	status,0,c
   824  000320  2A1C               	incf	___awmod@dividend+1,f,c
   825  000322                     l359:
   826  000322  C01B  F01B         	movff	___awmod@dividend,?___awmod
   827  000326  C01C  F01C         	movff	___awmod@dividend+1,?___awmod+1
   828  00032A  0012               	return	
   829  00032C                     __end_of___awmod:
   830                           	opt stack 0
   831                           tblptru	equ	0xFF8
   832                           tblptrh	equ	0xFF7
   833                           tblptrl	equ	0xFF6
   834                           tablat	equ	0xFF5
   835                           prodh	equ	0xFF4
   836                           prodl	equ	0xFF3
   837                           postinc0	equ	0xFEE
   838                           wreg	equ	0xFE8
   839                           postdec1	equ	0xFE5
   840                           fsr1l	equ	0xFE1
   841                           indf2	equ	0xFDF
   842                           fsr2h	equ	0xFDA
   843                           fsr2l	equ	0xFD9
   844                           status	equ	0xFD8
   845                           
   846 ;; *************** function ___awdiv *****************
   847 ;; Defined at:
   848 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;  dividend        2   18[COMRAM] int 
   851 ;;  divisor         2   20[COMRAM] int 
   852 ;; Auto vars:     Size  Location     Type
   853 ;;  quotient        2   24[COMRAM] int 
   854 ;;  sign            1   23[COMRAM] unsigned char 
   855 ;;  counter         1   22[COMRAM] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  2   18[COMRAM] int 
   858 ;; Registers used:
   859 ;;		wreg, status,2, status,0
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   865 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;Total ram usage:        8 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; Hardware stack levels required when called:    3
   872 ;; This function calls:
   873 ;;		Nothing
   874 ;; This function is called by:
   875 ;;		_calculate_output
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text4
   880  000238                     __ptext4:
   881                           	opt stack 0
   882  000238                     ___awdiv:
   883                           	opt stack 26
   884                           
   885                           ;incstack = 0
   886  000238  0E00               	movlw	0
   887  00023A  6E18               	movwf	___awdiv@sign,c
   888  00023C  AE16               	btfss	___awdiv@divisor+1,7,c
   889  00023E  D006               	goto	l337
   890  000240  6C15               	negf	___awdiv@divisor,c
   891  000242  1E16               	comf	___awdiv@divisor+1,f,c
   892  000244  B0D8               	btfsc	status,0,c
   893  000246  2A16               	incf	___awdiv@divisor+1,f,c
   894  000248  0E01               	movlw	1
   895  00024A  6E18               	movwf	___awdiv@sign,c
   896  00024C                     l337:
   897  00024C  AE14               	btfss	___awdiv@dividend+1,7,c
   898  00024E  D006               	goto	l338
   899  000250  6C13               	negf	___awdiv@dividend,c
   900  000252  1E14               	comf	___awdiv@dividend+1,f,c
   901  000254  B0D8               	btfsc	status,0,c
   902  000256  2A14               	incf	___awdiv@dividend+1,f,c
   903  000258  0E01               	movlw	1
   904  00025A  1A18               	xorwf	___awdiv@sign,f,c
   905  00025C                     l338:
   906  00025C  0E00               	movlw	0
   907  00025E  6E1A               	movwf	___awdiv@quotient+1,c
   908  000260  0E00               	movlw	0
   909  000262  6E19               	movwf	___awdiv@quotient,c
   910  000264  5015               	movf	___awdiv@divisor,w,c
   911  000266  1016               	iorwf	___awdiv@divisor+1,w,c
   912  000268  B4D8               	btfsc	status,2,c
   913  00026A  D01C               	goto	l345
   914  00026C  0E01               	movlw	1
   915  00026E  6E17               	movwf	___awdiv@counter,c
   916  000270  D004               	goto	l340
   917  000272  90D8               	bcf	status,0,c
   918  000274  3615               	rlcf	___awdiv@divisor,f,c
   919  000276  3616               	rlcf	___awdiv@divisor+1,f,c
   920  000278  2A17               	incf	___awdiv@counter,f,c
   921  00027A                     l340:
   922  00027A  AE16               	btfss	___awdiv@divisor+1,7,c
   923  00027C  D7FA               	goto	l341
   924  00027E                     u270:
   925  00027E  90D8               	bcf	status,0,c
   926  000280  3619               	rlcf	___awdiv@quotient,f,c
   927  000282  361A               	rlcf	___awdiv@quotient+1,f,c
   928  000284  5015               	movf	___awdiv@divisor,w,c
   929  000286  5C13               	subwf	___awdiv@dividend,w,c
   930  000288  5016               	movf	___awdiv@divisor+1,w,c
   931  00028A  5814               	subwfb	___awdiv@dividend+1,w,c
   932  00028C  A0D8               	btfss	status,0,c
   933  00028E  D005               	goto	l344
   934  000290  5015               	movf	___awdiv@divisor,w,c
   935  000292  5E13               	subwf	___awdiv@dividend,f,c
   936  000294  5016               	movf	___awdiv@divisor+1,w,c
   937  000296  5A14               	subwfb	___awdiv@dividend+1,f,c
   938  000298  8019               	bsf	___awdiv@quotient,0,c
   939  00029A                     l344:
   940  00029A  90D8               	bcf	status,0,c
   941  00029C  3216               	rrcf	___awdiv@divisor+1,f,c
   942  00029E  3215               	rrcf	___awdiv@divisor,f,c
   943  0002A0  2E17               	decfsz	___awdiv@counter,f,c
   944  0002A2  D7ED               	goto	u270
   945  0002A4                     l345:
   946  0002A4  5018               	movf	___awdiv@sign,w,c
   947  0002A6  B4D8               	btfsc	status,2,c
   948  0002A8  D004               	goto	l346
   949  0002AA  6C19               	negf	___awdiv@quotient,c
   950  0002AC  1E1A               	comf	___awdiv@quotient+1,f,c
   951  0002AE  B0D8               	btfsc	status,0,c
   952  0002B0  2A1A               	incf	___awdiv@quotient+1,f,c
   953  0002B2                     l346:
   954  0002B2  C019  F013         	movff	___awdiv@quotient,?___awdiv
   955  0002B6  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
   956  0002BA  0012               	return	
   957  0002BC                     __end_of___awdiv:
   958                           	opt stack 0
   959                           tblptru	equ	0xFF8
   960                           tblptrh	equ	0xFF7
   961                           tblptrl	equ	0xFF6
   962                           tablat	equ	0xFF5
   963                           prodh	equ	0xFF4
   964                           prodl	equ	0xFF3
   965                           postinc0	equ	0xFEE
   966                           wreg	equ	0xFE8
   967                           postdec1	equ	0xFE5
   968                           fsr1l	equ	0xFE1
   969                           indf2	equ	0xFDF
   970                           fsr2h	equ	0xFDA
   971                           fsr2l	equ	0xFD9
   972                           status	equ	0xFD8
   973                           
   974 ;; *************** function _SYSTEM_Initialize *****************
   975 ;; Defined at:
   976 ;;		line 50 in file "mcc_generated_files/mcc.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, status,2, status,0, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   994 ;;Total ram usage:        0 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; Hardware stack levels required when called:    5
   997 ;; This function calls:
   998 ;;		_INTERRUPT_Initialize
   999 ;;		_OSCILLATOR_Initialize
  1000 ;;		_PIN_MANAGER_Initialize
  1001 ;;		_TMR0_Initialize
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           	psect	text5
  1008  0003F0                     __ptext5:
  1009                           	opt stack 0
  1010  0003F0                     _SYSTEM_Initialize:
  1011                           	opt stack 25
  1012                           
  1013                           ;mcc.c: 53: INTERRUPT_Initialize();
  1014                           
  1015                           ;incstack = 0
  1016  0003F0  EC19  F002         	call	_INTERRUPT_Initialize	;wreg free
  1017                           
  1018                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  1019  0003F4  EC96  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  1020                           
  1021                           ;mcc.c: 55: OSCILLATOR_Initialize();
  1022  0003F8  EC08  F002         	call	_OSCILLATOR_Initialize	;wreg free
  1023                           
  1024                           ;mcc.c: 56: TMR0_Initialize();
  1025  0003FC  ECE7  F001         	call	_TMR0_Initialize	;wreg free
  1026  000400  0012               	return		;funcret
  1027  000402                     __end_of_SYSTEM_Initialize:
  1028                           	opt stack 0
  1029                           tblptru	equ	0xFF8
  1030                           tblptrh	equ	0xFF7
  1031                           tblptrl	equ	0xFF6
  1032                           tablat	equ	0xFF5
  1033                           prodh	equ	0xFF4
  1034                           prodl	equ	0xFF3
  1035                           postinc0	equ	0xFEE
  1036                           wreg	equ	0xFE8
  1037                           postdec1	equ	0xFE5
  1038                           fsr1l	equ	0xFE1
  1039                           indf2	equ	0xFDF
  1040                           fsr2h	equ	0xFDA
  1041                           fsr2l	equ	0xFD9
  1042                           status	equ	0xFD8
  1043                           
  1044 ;; *************** function _TMR0_Initialize *****************
  1045 ;; Defined at:
  1046 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;Total ram usage:        0 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    4
  1067 ;; This function calls:
  1068 ;;		_TMR0_SetInterruptHandler
  1069 ;; This function is called by:
  1070 ;;		_SYSTEM_Initialize
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text6
  1075  0003CE                     __ptext6:
  1076                           	opt stack 0
  1077  0003CE                     _TMR0_Initialize:
  1078                           	opt stack 25
  1079                           
  1080                           ;tmr0.c: 72: TMR0H = 0x00;
  1081                           
  1082                           ;incstack = 0
  1083  0003CE  0E00               	movlw	0
  1084  0003D0  6ED7               	movwf	4055,c	;volatile
  1085                           
  1086                           ;tmr0.c: 75: TMR0L = 0x83;
  1087  0003D2  0E83               	movlw	131
  1088  0003D4  6ED6               	movwf	4054,c	;volatile
  1089                           
  1090                           ;tmr0.c: 79: timer0ReloadVal = 131;
  1091  0003D6  0E83               	movlw	131
  1092  0003D8  6E3F               	movwf	_timer0ReloadVal,c	;volatile
  1093                           
  1094                           ;tmr0.c: 82: INTCONbits.TMR0IF = 0;
  1095  0003DA  94F2               	bcf	intcon,2,c	;volatile
  1096                           
  1097                           ;tmr0.c: 85: INTCONbits.TMR0IE = 1;
  1098  0003DC  8AF2               	bsf	intcon,5,c	;volatile
  1099                           
  1100                           ;tmr0.c: 88: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1101  0003DE  0E36               	movlw	low _TMR0_DefaultInterruptHandler
  1102  0003E0  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  1103  0003E2  0E04               	movlw	high _TMR0_DefaultInterruptHandler
  1104  0003E4  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  1105  0003E6  EC14  F002         	call	_TMR0_SetInterruptHandler	;wreg free
  1106                           
  1107                           ;tmr0.c: 91: T0CON = 0xD1;
  1108  0003EA  0ED1               	movlw	209
  1109  0003EC  6ED5               	movwf	4053,c	;volatile
  1110  0003EE  0012               	return		;funcret
  1111  0003F0                     __end_of_TMR0_Initialize:
  1112                           	opt stack 0
  1113                           tblptru	equ	0xFF8
  1114                           tblptrh	equ	0xFF7
  1115                           tblptrl	equ	0xFF6
  1116                           tablat	equ	0xFF5
  1117                           prodh	equ	0xFF4
  1118                           prodl	equ	0xFF3
  1119                           intcon	equ	0xFF2
  1120                           postinc0	equ	0xFEE
  1121                           wreg	equ	0xFE8
  1122                           postdec1	equ	0xFE5
  1123                           fsr1l	equ	0xFE1
  1124                           indf2	equ	0xFDF
  1125                           fsr2h	equ	0xFDA
  1126                           fsr2l	equ	0xFD9
  1127                           status	equ	0xFD8
  1128                           
  1129 ;; *************** function _TMR0_SetInterruptHandler *****************
  1130 ;; Defined at:
  1131 ;;		line 147 in file "mcc_generated_files/tmr0.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  1134 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;Total ram usage:        2 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    3
  1153 ;; This function calls:
  1154 ;;		Nothing
  1155 ;; This function is called by:
  1156 ;;		_TMR0_Initialize
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text7
  1161  000428                     __ptext7:
  1162                           	opt stack 0
  1163  000428                     _TMR0_SetInterruptHandler:
  1164                           	opt stack 25
  1165                           
  1166                           ;tmr0.c: 148: TMR0_InterruptHandler = InterruptHandler;
  1167                           
  1168                           ;incstack = 0
  1169  000428  C013  F03D         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1170  00042C  C014  F03E         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1171  000430  0012               	return		;funcret
  1172  000432                     __end_of_TMR0_SetInterruptHandler:
  1173                           	opt stack 0
  1174                           tblptru	equ	0xFF8
  1175                           tblptrh	equ	0xFF7
  1176                           tblptrl	equ	0xFF6
  1177                           tablat	equ	0xFF5
  1178                           prodh	equ	0xFF4
  1179                           prodl	equ	0xFF3
  1180                           intcon	equ	0xFF2
  1181                           postinc0	equ	0xFEE
  1182                           wreg	equ	0xFE8
  1183                           postdec1	equ	0xFE5
  1184                           fsr1l	equ	0xFE1
  1185                           indf2	equ	0xFDF
  1186                           fsr2h	equ	0xFDA
  1187                           fsr2l	equ	0xFD9
  1188                           status	equ	0xFD8
  1189                           
  1190 ;; *************** function _PIN_MANAGER_Initialize *****************
  1191 ;; Defined at:
  1192 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;Total ram usage:        0 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    3
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		_SYSTEM_Initialize
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text8
  1221  00032C                     __ptext8:
  1222                           	opt stack 0
  1223  00032C                     _PIN_MANAGER_Initialize:
  1224                           	opt stack 26
  1225                           
  1226                           ;pin_manager.c: 60: LATE = 0x00;
  1227                           
  1228                           ;incstack = 0
  1229  00032C  0E00               	movlw	0
  1230  00032E  6E8D               	movwf	3981,c	;volatile
  1231                           
  1232                           ;pin_manager.c: 61: LATD = 0x00;
  1233  000330  0E00               	movlw	0
  1234  000332  6E8C               	movwf	3980,c	;volatile
  1235                           
  1236                           ;pin_manager.c: 62: LATA = 0x00;
  1237  000334  0E00               	movlw	0
  1238  000336  6E89               	movwf	3977,c	;volatile
  1239                           
  1240                           ;pin_manager.c: 63: LATB = 0x00;
  1241  000338  0E00               	movlw	0
  1242  00033A  6E8A               	movwf	3978,c	;volatile
  1243                           
  1244                           ;pin_manager.c: 64: LATC = 0x00;
  1245  00033C  0E00               	movlw	0
  1246  00033E  6E8B               	movwf	3979,c	;volatile
  1247                           
  1248                           ;pin_manager.c: 69: TRISE = 0x07;
  1249  000340  0E07               	movlw	7
  1250  000342  6E96               	movwf	3990,c	;volatile
  1251                           
  1252                           ;pin_manager.c: 70: TRISA = 0xEF;
  1253  000344  0EEF               	movlw	239
  1254  000346  6E92               	movwf	3986,c	;volatile
  1255                           
  1256                           ;pin_manager.c: 71: TRISB = 0x00;
  1257  000348  0E00               	movlw	0
  1258  00034A  6E93               	movwf	3987,c	;volatile
  1259                           
  1260                           ;pin_manager.c: 72: TRISC = 0xF0;
  1261  00034C  0EF0               	movlw	240
  1262  00034E  6E94               	movwf	3988,c	;volatile
  1263                           
  1264                           ;pin_manager.c: 73: TRISD = 0xFF;
  1265  000350  6895               	setf	3989,c	;volatile
  1266                           
  1267                           ;pin_manager.c: 78: ANSELD = 0xFF;
  1268  000352  010F               	movlb	15	; () banked
  1269  000354  693B               	setf	59,b	;volatile
  1270                           
  1271                           ;pin_manager.c: 79: ANSELC = 0xFC;
  1272  000356  0EFC               	movlw	252
  1273  000358  6F3A               	movwf	58,b	;volatile
  1274                           
  1275                           ;pin_manager.c: 80: ANSELB = 0x3F;
  1276  00035A  0E3F               	movlw	63
  1277  00035C  6F39               	movwf	57,b	;volatile
  1278                           
  1279                           ;pin_manager.c: 81: ANSELE = 0x07;
  1280  00035E  0E07               	movlw	7
  1281  000360  6F3C               	movwf	60,b	;volatile
  1282                           
  1283                           ;pin_manager.c: 82: ANSELA = 0x2F;
  1284  000362  0E2F               	movlw	47
  1285  000364  6F38               	movwf	56,b	;volatile
  1286                           
  1287                           ;pin_manager.c: 87: WPUB = 0x00;
  1288  000366  0E00               	movlw	0
  1289  000368  6E61               	movwf	3937,c	;volatile
  1290                           
  1291                           ; BSR set to: 15
  1292                           ;pin_manager.c: 88: INTCON2bits.nRBPU = 1;
  1293  00036A  8EF1               	bsf	intcon2,7,c	;volatile
  1294                           
  1295                           ; BSR set to: 15
  1296  00036C  0012               	return		;funcret
  1297  00036E                     __end_of_PIN_MANAGER_Initialize:
  1298                           	opt stack 0
  1299                           tblptru	equ	0xFF8
  1300                           tblptrh	equ	0xFF7
  1301                           tblptrl	equ	0xFF6
  1302                           tablat	equ	0xFF5
  1303                           prodh	equ	0xFF4
  1304                           prodl	equ	0xFF3
  1305                           intcon	equ	0xFF2
  1306                           intcon2	equ	0xFF1
  1307                           postinc0	equ	0xFEE
  1308                           wreg	equ	0xFE8
  1309                           postdec1	equ	0xFE5
  1310                           fsr1l	equ	0xFE1
  1311                           indf2	equ	0xFDF
  1312                           fsr2h	equ	0xFDA
  1313                           fsr2l	equ	0xFD9
  1314                           status	equ	0xFD8
  1315                           
  1316 ;; *************** function _OSCILLATOR_Initialize *****************
  1317 ;; Defined at:
  1318 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;		None
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1    wreg      void 
  1325 ;; Registers used:
  1326 ;;		wreg, status,2
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;Total ram usage:        0 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; Hardware stack levels required when called:    3
  1339 ;; This function calls:
  1340 ;;		Nothing
  1341 ;; This function is called by:
  1342 ;;		_SYSTEM_Initialize
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text9
  1347  000410                     __ptext9:
  1348                           	opt stack 0
  1349  000410                     _OSCILLATOR_Initialize:
  1350                           	opt stack 26
  1351                           
  1352                           ;mcc.c: 62: OSCCON = 0x30;
  1353                           
  1354                           ; BSR set to: 15
  1355                           ;incstack = 0
  1356  000410  0E30               	movlw	48
  1357  000412  6ED3               	movwf	4051,c	;volatile
  1358                           
  1359                           ;mcc.c: 64: OSCCON2 = 0x04;
  1360  000414  0E04               	movlw	4
  1361  000416  6ED2               	movwf	4050,c	;volatile
  1362                           
  1363                           ;mcc.c: 66: OSCTUNE = 0x00;
  1364  000418  0E00               	movlw	0
  1365  00041A  6E9B               	movwf	3995,c	;volatile
  1366  00041C  0012               	return		;funcret
  1367  00041E                     __end_of_OSCILLATOR_Initialize:
  1368                           	opt stack 0
  1369                           tblptru	equ	0xFF8
  1370                           tblptrh	equ	0xFF7
  1371                           tblptrl	equ	0xFF6
  1372                           tablat	equ	0xFF5
  1373                           prodh	equ	0xFF4
  1374                           prodl	equ	0xFF3
  1375                           intcon	equ	0xFF2
  1376                           intcon2	equ	0xFF1
  1377                           postinc0	equ	0xFEE
  1378                           wreg	equ	0xFE8
  1379                           postdec1	equ	0xFE5
  1380                           fsr1l	equ	0xFE1
  1381                           indf2	equ	0xFDF
  1382                           fsr2h	equ	0xFDA
  1383                           fsr2l	equ	0xFD9
  1384                           status	equ	0xFD8
  1385                           
  1386 ;; *************** function _INTERRUPT_Initialize *****************
  1387 ;; Defined at:
  1388 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;		None
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      void 
  1395 ;; Registers used:
  1396 ;;		None
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;Total ram usage:        0 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    3
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		_SYSTEM_Initialize
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text10
  1417  000432                     __ptext10:
  1418                           	opt stack 0
  1419  000432                     _INTERRUPT_Initialize:
  1420                           	opt stack 26
  1421                           
  1422                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  1423                           
  1424                           ;incstack = 0
  1425  000432  9ED0               	bcf	4048,7,c	;volatile
  1426  000434  0012               	return		;funcret
  1427  000436                     __end_of_INTERRUPT_Initialize:
  1428                           	opt stack 0
  1429                           tblptru	equ	0xFF8
  1430                           tblptrh	equ	0xFF7
  1431                           tblptrl	equ	0xFF6
  1432                           tablat	equ	0xFF5
  1433                           prodh	equ	0xFF4
  1434                           prodl	equ	0xFF3
  1435                           intcon	equ	0xFF2
  1436                           intcon2	equ	0xFF1
  1437                           postinc0	equ	0xFEE
  1438                           wreg	equ	0xFE8
  1439                           postdec1	equ	0xFE5
  1440                           fsr1l	equ	0xFE1
  1441                           indf2	equ	0xFDF
  1442                           fsr2h	equ	0xFDA
  1443                           fsr2l	equ	0xFD9
  1444                           status	equ	0xFD8
  1445                           
  1446 ;; *************** function _INTERRUPT_InterruptManager *****************
  1447 ;; Defined at:
  1448 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;Total ram usage:       18 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; Hardware stack levels required when called:    2
  1469 ;; This function calls:
  1470 ;;		_TMR0_ISR
  1471 ;; This function is called by:
  1472 ;;		Interrupt level 2
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	intcode
  1477  000008                     __pintcode:
  1478                           	opt stack 0
  1479  000008                     _INTERRUPT_InterruptManager:
  1480                           	opt stack 25
  1481                           
  1482                           ;incstack = 0
  1483  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1484  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  1485  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1486  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1487  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1488  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1489  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1490  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1491  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1492  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1493  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1494  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1495  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1496  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1497  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1498  000042  C040  F00F         	movff	btemp,??_INTERRUPT_InterruptManager+14
  1499  000046  C041  F010         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  1500  00004A  C042  F011         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  1501  00004E  C043  F012         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  1502                           
  1503                           ;interrupt_manager.c: 61: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  1504  000052  BAF2               	btfsc	intcon,5,c	;volatile
  1505  000054  A4F2               	btfss	intcon,2,c	;volatile
  1506  000056  D002               	goto	i2l122
  1507                           
  1508                           ;interrupt_manager.c: 62: {
  1509                           ;interrupt_manager.c: 63: TMR0_ISR();
  1510  000058  ECD4  F001         	call	_TMR0_ISR	;wreg free
  1511  00005C                     i2l122:
  1512                           
  1513                           ;interrupt_manager.c: 65: else
  1514                           ;interrupt_manager.c: 66: {
  1515  00005C  C012  F043         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  1516  000060  C011  F042         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  1517  000064  C010  F041         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  1518  000068  C00F  F040         	movff	??_INTERRUPT_InterruptManager+14,btemp
  1519  00006C  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1520  000070  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1521  000074  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1522  000078  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1523  00007C  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1524  000080  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1525  000084  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1526  000088  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1527  00008C  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1528  000090  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1529  000094  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1530  000098  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1531  00009C  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1532  0000A0  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1533  0000A4  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1534  0000A6  0011               	retfie		f
  1535  0000A8                     __end_of_INTERRUPT_InterruptManager:
  1536                           	opt stack 0
  1537                           pclatu	equ	0xFFB
  1538                           pclath	equ	0xFFA
  1539                           tblptru	equ	0xFF8
  1540                           tblptrh	equ	0xFF7
  1541                           tblptrl	equ	0xFF6
  1542                           tablat	equ	0xFF5
  1543                           prodh	equ	0xFF4
  1544                           prodl	equ	0xFF3
  1545                           intcon	equ	0xFF2
  1546                           intcon2	equ	0xFF1
  1547                           postinc0	equ	0xFEE
  1548                           fsr0h	equ	0xFEA
  1549                           fsr0l	equ	0xFE9
  1550                           wreg	equ	0xFE8
  1551                           postdec1	equ	0xFE5
  1552                           fsr1h	equ	0xFE2
  1553                           fsr1l	equ	0xFE1
  1554                           indf2	equ	0xFDF
  1555                           fsr2h	equ	0xFDA
  1556                           fsr2l	equ	0xFD9
  1557                           status	equ	0xFD8
  1558                           
  1559 ;; *************** function _TMR0_ISR *****************
  1560 ;; Defined at:
  1561 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1579 ;;Total ram usage:        0 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    1
  1582 ;; This function calls:
  1583 ;;		Absolute function
  1584 ;;		_TMR0_DefaultInterruptHandler
  1585 ;; This function is called by:
  1586 ;;		_INTERRUPT_InterruptManager
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text12
  1591  0003A8                     __ptext12:
  1592                           	opt stack 0
  1593  0003A8                     _TMR0_ISR:
  1594                           	opt stack 25
  1595                           
  1596                           ;tmr0.c: 133: INTCONbits.TMR0IF = 0;
  1597                           
  1598                           ;incstack = 0
  1599  0003A8  94F2               	bcf	intcon,2,c	;volatile
  1600                           
  1601                           ;tmr0.c: 136: TMR0L = timer0ReloadVal;
  1602  0003AA  C03F  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  1603                           
  1604                           ;tmr0.c: 138: if(TMR0_InterruptHandler)
  1605  0003AE  503D               	movf	_TMR0_InterruptHandler,w,c
  1606  0003B0  103E               	iorwf	_TMR0_InterruptHandler+1,w,c
  1607  0003B2  B4D8               	btfsc	status,2,c
  1608  0003B4  0012               	return	
  1609                           
  1610                           ;tmr0.c: 139: {
  1611                           ;tmr0.c: 140: TMR0_InterruptHandler();
  1612  0003B6  D801               	call	i2u18_48
  1613  0003B8  0012               	return	
  1614  0003BA                     i2u18_48:
  1615  0003BA  0005               	push	
  1616  0003BC  6EFA               	movwf	pclath,c
  1617  0003BE  503D               	movf	_TMR0_InterruptHandler,w,c
  1618  0003C0  6EFD               	movwf	tosl,c
  1619  0003C2  503E               	movf	_TMR0_InterruptHandler+1,w,c
  1620  0003C4  6EFE               	movwf	tosh,c
  1621  0003C6  50F8               	movf	tblptru,w,c
  1622  0003C8  6EFF               	movwf	tosu,c
  1623  0003CA  50FA               	movf	pclath,w,c
  1624  0003CC  0012               	return		;indir
  1625  0003CE                     __end_of_TMR0_ISR:
  1626                           	opt stack 0
  1627                           tosu	equ	0xFFF
  1628                           tosh	equ	0xFFE
  1629                           tosl	equ	0xFFD
  1630                           pclatu	equ	0xFFB
  1631                           pclath	equ	0xFFA
  1632                           tblptru	equ	0xFF8
  1633                           tblptrh	equ	0xFF7
  1634                           tblptrl	equ	0xFF6
  1635                           tablat	equ	0xFF5
  1636                           prodh	equ	0xFF4
  1637                           prodl	equ	0xFF3
  1638                           intcon	equ	0xFF2
  1639                           intcon2	equ	0xFF1
  1640                           postinc0	equ	0xFEE
  1641                           fsr0h	equ	0xFEA
  1642                           fsr0l	equ	0xFE9
  1643                           wreg	equ	0xFE8
  1644                           postdec1	equ	0xFE5
  1645                           fsr1h	equ	0xFE2
  1646                           fsr1l	equ	0xFE1
  1647                           indf2	equ	0xFDF
  1648                           fsr2h	equ	0xFDA
  1649                           fsr2l	equ	0xFD9
  1650                           status	equ	0xFD8
  1651                           
  1652 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  1653 ;; Defined at:
  1654 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		None
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;Total ram usage:        0 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; This function calls:
  1675 ;;		Nothing
  1676 ;; This function is called by:
  1677 ;;		_TMR0_Initialize
  1678 ;;		_TMR0_ISR
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text13
  1683  000436                     __ptext13:
  1684                           	opt stack 0
  1685  000436                     _TMR0_DefaultInterruptHandler:
  1686                           	opt stack 25
  1687                           
  1688                           ;incstack = 0
  1689  000436  0012               	return		;funcret
  1690  000438                     __end_of_TMR0_DefaultInterruptHandler:
  1691                           	opt stack 0
  1692  0000                     tosu	equ	0xFFF
  1693                           tosh	equ	0xFFE
  1694                           tosl	equ	0xFFD
  1695                           pclatu	equ	0xFFB
  1696                           pclath	equ	0xFFA
  1697                           tblptru	equ	0xFF8
  1698                           tblptrh	equ	0xFF7
  1699                           tblptrl	equ	0xFF6
  1700                           tablat	equ	0xFF5
  1701                           prodh	equ	0xFF4
  1702                           prodl	equ	0xFF3
  1703                           intcon	equ	0xFF2
  1704                           intcon2	equ	0xFF1
  1705                           postinc0	equ	0xFEE
  1706                           fsr0h	equ	0xFEA
  1707                           fsr0l	equ	0xFE9
  1708                           wreg	equ	0xFE8
  1709                           postdec1	equ	0xFE5
  1710                           fsr1h	equ	0xFE2
  1711                           fsr1l	equ	0xFE1
  1712                           indf2	equ	0xFDF
  1713                           fsr2h	equ	0xFDA
  1714                           fsr2l	equ	0xFD9
  1715                           status	equ	0xFD8
  1716                           tosu	equ	0xFFF
  1717                           tosh	equ	0xFFE
  1718                           tosl	equ	0xFFD
  1719                           pclatu	equ	0xFFB
  1720                           pclath	equ	0xFFA
  1721                           tblptru	equ	0xFF8
  1722                           tblptrh	equ	0xFF7
  1723                           tblptrl	equ	0xFF6
  1724                           tablat	equ	0xFF5
  1725                           prodh	equ	0xFF4
  1726                           prodl	equ	0xFF3
  1727                           intcon	equ	0xFF2
  1728                           intcon2	equ	0xFF1
  1729                           postinc0	equ	0xFEE
  1730                           fsr0h	equ	0xFEA
  1731                           fsr0l	equ	0xFE9
  1732                           wreg	equ	0xFE8
  1733                           postdec1	equ	0xFE5
  1734                           fsr1h	equ	0xFE2
  1735                           fsr1l	equ	0xFE1
  1736                           indf2	equ	0xFDF
  1737                           fsr2h	equ	0xFDA
  1738                           fsr2l	equ	0xFD9
  1739                           status	equ	0xFD8
  1740                           
  1741                           	psect	text14
  1742  000000                     __ptext14:
  1743                           	opt stack 0
  1744                           tosu	equ	0xFFF
  1745                           tosh	equ	0xFFE
  1746                           tosl	equ	0xFFD
  1747                           pclatu	equ	0xFFB
  1748                           pclath	equ	0xFFA
  1749                           tblptru	equ	0xFF8
  1750                           tblptrh	equ	0xFF7
  1751                           tblptrl	equ	0xFF6
  1752                           tablat	equ	0xFF5
  1753                           prodh	equ	0xFF4
  1754                           prodl	equ	0xFF3
  1755                           intcon	equ	0xFF2
  1756                           intcon2	equ	0xFF1
  1757                           postinc0	equ	0xFEE
  1758                           fsr0h	equ	0xFEA
  1759                           fsr0l	equ	0xFE9
  1760                           wreg	equ	0xFE8
  1761                           postdec1	equ	0xFE5
  1762                           fsr1h	equ	0xFE2
  1763                           fsr1l	equ	0xFE1
  1764                           indf2	equ	0xFDF
  1765                           fsr2h	equ	0xFDA
  1766                           fsr2l	equ	0xFD9
  1767                           status	equ	0xFD8
  1768                           
  1769                           	psect	rparam
  1770  0000                     tosu	equ	0xFFF
  1771                           tosh	equ	0xFFE
  1772                           tosl	equ	0xFFD
  1773                           pclatu	equ	0xFFB
  1774                           pclath	equ	0xFFA
  1775                           tblptru	equ	0xFF8
  1776                           tblptrh	equ	0xFF7
  1777                           tblptrl	equ	0xFF6
  1778                           tablat	equ	0xFF5
  1779                           prodh	equ	0xFF4
  1780                           prodl	equ	0xFF3
  1781                           intcon	equ	0xFF2
  1782                           intcon2	equ	0xFF1
  1783                           postinc0	equ	0xFEE
  1784                           fsr0h	equ	0xFEA
  1785                           fsr0l	equ	0xFE9
  1786                           wreg	equ	0xFE8
  1787                           postdec1	equ	0xFE5
  1788                           fsr1h	equ	0xFE2
  1789                           fsr1l	equ	0xFE1
  1790                           indf2	equ	0xFDF
  1791                           fsr2h	equ	0xFDA
  1792                           fsr2l	equ	0xFD9
  1793                           status	equ	0xFD8
  1794                           
  1795                           	psect	temp
  1796  000040                     btemp:
  1797                           	opt stack 0
  1798  000040                     	ds	1
  1799  0000                     int$flags	set	btemp
  1800  0000                     wtemp6	set	btemp+1
  1801                           tosu	equ	0xFFF
  1802                           tosh	equ	0xFFE
  1803                           tosl	equ	0xFFD
  1804                           pclatu	equ	0xFFB
  1805                           pclath	equ	0xFFA
  1806                           tblptru	equ	0xFF8
  1807                           tblptrh	equ	0xFF7
  1808                           tblptrl	equ	0xFF6
  1809                           tablat	equ	0xFF5
  1810                           prodh	equ	0xFF4
  1811                           prodl	equ	0xFF3
  1812                           intcon	equ	0xFF2
  1813                           intcon2	equ	0xFF1
  1814                           postinc0	equ	0xFEE
  1815                           fsr0h	equ	0xFEA
  1816                           fsr0l	equ	0xFE9
  1817                           wreg	equ	0xFE8
  1818                           postdec1	equ	0xFE5
  1819                           fsr1h	equ	0xFE2
  1820                           fsr1l	equ	0xFE1
  1821                           indf2	equ	0xFDF
  1822                           fsr2h	equ	0xFDA
  1823                           fsr2l	equ	0xFD9
  1824                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         14
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      63
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _calculate_output->___awmod
    ___awmod->___awdiv
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1666
                  _SYSTEM_Initialize
                   _calculate_output
 ---------------------------------------------------------------------------------
 (1) _calculate_output                                     0     0      0    1568
                            ___awdiv
                            ___awmod
                      _display_7seg1
 ---------------------------------------------------------------------------------
 (2) _display_7seg1                                        1     1      0      60
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                             26 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0       0
                                              0 COMRAM    18    18      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _calculate_output
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _display_7seg1

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3F       1       67.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F      12        0.0%
DATA                 0      0      3F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Aug 11 13:40:56 2019

                                       _i 002B                                         _k 0029  
                            ___awdiv@sign 0018                           _timer0ReloadVal 003F  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                             __CFG_LVP$ON 000000                                       l151 01A6  
                                     l152 01D4                                       l153 0204  
                                     l340 027A                                       l341 0272  
                                     l350 02D0                                       l158 014C  
                                     l166 0422                                       l351 02DC  
                                     l344 029A                                       l345 02A4  
                                     l337 024C                                       l353 02F2  
                                     l346 02B2                                       l338 025C  
                                     l354 02EA                                       l357 030A  
                                     l358 0314                                       l359 0322  
                            __CFG_CPB$OFF 000000                                       u330 02F6  
                                     u270 027E                                       u407 01CC  
                                     u417 01FC                                       u370 0158  
                            __CFG_CPD$OFF 000000                                       u427 022C  
                                     u397 019E                              ___awmod@sign 0020  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8                            ?_display_7seg1 0001  
                                    l1111 013C                                      l1121 0158  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      _WPUB 000F61  
                                    _Seg7 002F                                      _main 041E  
                                    _show 0039                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0040                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00A8                             __CFG_IESO$OFF 000000  
                            ___param_bank 000000                   __end_of_TMR0_Initialize 03F0  
          ??_TMR0_DefaultInterruptHandler 0001            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 041E                                     ?_main 0001  
                         __end_of___awdiv 02BC                           __end_of___awmod 032C  
                                   _T0CON 000FD5                           ___awdiv@divisor 0015  
                          __CFG_DEBUG$OFF 000000                                     i2l122 005C  
                         ___awdiv@counter 0017                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
       __size_of_TMR0_SetInterruptHandler 000A                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
               ?_TMR0_SetInterruptHandler 0013                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_TMR0_ISR 03CE  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                                   _digit 0025                        __CFG_MCLRE$EXTMCLR 000000  
                                   pclath 000FFA                                     tablat 000FF5  
                                   status 000FD8                                     wtemp6 0041  
                          __CFG_HFOFST$ON 000000                            __CFG_PBADEN$ON 000000  
                         __initialization 036E                              __end_of_main 0428  
             ?_INTERRUPT_InterruptManager 0001                                    ??_main 0021  
                           __activetblptr 000002                           ??_display_7seg1 0013  
                        ___awdiv@dividend 0013                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                          __CFG_WDTEN$OFF 000000                                    _OSCCON 000FD3  
                     display_7seg1@c_scan 0013                         ?_calculate_output 0001  
                      ??_calculate_output 0021                            __CFG_XINST$OFF 000000  
                                  _c_scan 002E                                 ??___awdiv 0017  
                          __CFG_STVREN$ON 000000                                 ??___awmod 001F  
                        ?_TMR0_Initialize 0001                                    clear_0 0394  
                        ___awdiv@quotient 0019                           ___awmod@divisor 001D  
                         ___awmod@counter 001F                              __pdataCOMRAM 002F  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8  TMR0_SetInterruptHandler@InterruptHandler 0013  
           __size_of_INTERRUPT_Initialize 0004                         _SYSTEM_Initialize 03F0  
                              __accesstop 0060                   __end_of__initialization 039A  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 0015  
                               ?_TMR0_ISR 0001                 __end_of_SYSTEM_Initialize 0402  
                         __CFG_PLLCFG$OFF 000000                                __pnvCOMRAM 003D  
                      __CFG_CCP2MX$PORTC1 000000          __end_of_TMR0_SetInterruptHandler 0432  
                              ??_TMR0_ISR 0001                        __CFG_CCP3MX$PORTB5 000000  
                                 _OSCCON2 000FD2                                   i2u18_48 03BA  
                                 _OSCTUNE 000F9B                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
                                 ___awdiv 0238                                   ___awmod 02BC  
                                 __pcinit 036E                                   __ramtop 1000  
                                 __ptext0 041E                                   __ptext1 00AC  
                                 __ptext2 0176                                   __ptext3 02BC  
                                 __ptext4 0238                                   __ptext5 03F0  
                                 __ptext6 03CE                                   __ptext7 0428  
                                 __ptext8 032C                                   __ptext9 0410  
                               _T0CONbits 000FD5                     _OSCILLATOR_Initialize 0410  
                        ___awmod@dividend 001B                  ??_PIN_MANAGER_Initialize 0013  
              __size_of_SYSTEM_Initialize 0012                      end_of_initialization 039A  
                           __Lmediumconst 0000                                   postdec1 000FE5  
                                 postinc0 000FEE                 __size_of_calculate_output 00CA  
                _TMR0_SetInterruptHandler 0428                     __end_of_display_7seg1 0238  
            __end_of_INTERRUPT_Initialize 0436                             __pidataCOMRAM 0402  
                       __size_of_TMR0_ISR 0026                    ?_OSCILLATOR_Initialize 0001  
                     start_initialization 036E                  __size_of_TMR0_Initialize 0022  
         __size_of_PIN_MANAGER_Initialize 0042                               __pbssCOMRAM 0021  
                   _TMR0_InterruptHandler 003D                    _PIN_MANAGER_Initialize 032C  
                               __pintcode 0008                                  ?___awdiv 0013  
                                ?___awmod 001B                          _calculate_output 00AC  
            ??_INTERRUPT_InterruptManager 0001                          __CFG_PRICLKEN$ON 000000  
                    _INTERRUPT_Initialize 0432                         ??_TMR0_Initialize 0015  
     __size_of_INTERRUPT_InterruptManager 00A0                ??_TMR0_SetInterruptHandler 0015  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _TMR0_ISR 03A8                               _INTCON2bits 000FF1  
                               copy_data0 0382                     ?_INTERRUPT_Initialize 0001  
                                __Hrparam 0000                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTD2 000000  
                 ??_OSCILLATOR_Initialize 0013                          __size_of___awdiv 0084  
                        __size_of___awmod 0070                                  __ptext10 0432  
                                __ptext12 03A8                                  __ptext13 0436  
                                __ptext14 0000                             __size_of_main 000A  
                                _scan_cnt 002D      __end_of_TMR0_DefaultInterruptHandler 0438  
   __size_of_TMR0_DefaultInterruptHandler 0002              _TMR0_DefaultInterruptHandler 0436  
                  __size_of_display_7seg1 00C2                                  int$flags 0040  
                             _seg_display 0021        __end_of_INTERRUPT_InterruptManager 00A8  
              _INTERRUPT_InterruptManager 0008                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 0013                                  intlevel2 0000  
                __end_of_calculate_output 0176                   ?_PIN_MANAGER_Initialize 0001  
           ?_TMR0_DefaultInterruptHandler 0001                           _TMR0_Initialize 03CE  
                       __CFG_T3CMX$PORTC0 000000                             _display_7seg1 0176  
          __end_of_PIN_MANAGER_Initialize 036E                         __CFG_FOSC$INTIO67 000000  
